{"version":3,"sources":["files sync /^/.//.*/.csv$","icons/icon-participants-inmune.png","icons/icon-health-posts.png","catchment-area sync /^/.//.*/.csv$","catchment-area/C1ASA.csv","catchment-area/C1TIA.csv","catchment-area/C2CAY.csv","catchment-area/C2TIA.csv","catchment-area/C3JLB.csv","catchment-area/C3TIA.csv","catchment-area/test.csv","catchment-area/test2.csv","files/PUESTOS DE SALUD AQP_modificado_06022020.csv","files/registro_participantes_inmune.csv","context/authentication/AuthenticationContext.js","context/alertas/alertaContext.js","components/Login/index.js","context/csv/CsvContext.js","context/inspection/InspectionContext.js","Functions/index.js","components/Modal/MyModal.js","components/Inspections/FormInsp.js","components/MyMap/CircleHouses.js","components/ParticipantsInmune/FormPI.js","components/MyMap/MarkerParticipantsInmune.js","components/HealthPosts/FormHP.js","components/MyMap/MarkerHealthPosts.js","components/MyMap/index.js","components/Header/Points.js","components/Login/SignOut.js","components/Header/index.js","components/Activities/index.js","context/denunciation/DenunciationContext.js","components/Denunciations/FormDen/Ubigeo.js","components/Denunciations/FormDen/index.js","components/Denunciations/MyTable.js","components/Denunciations/index.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/authentication/AuthenticationReducer.js","config/axios.js","context/authentication/AuthenticationState.js","context/denunciation/DenunciationReducer.js","context/denunciation/DenunciationState.js","context/inspection/InspectionReducer.js","context/inspection/InspectionState.js","context/csv/CsvReducer.js","context/csv/CsvState.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","authenticationContext","createContext","alertaContext","Login","props","alertasContext","useContext","alerta","MostrarAlerta","AuthenticationsContext","AuthenticationContext","mensaje","authenticated","useEffect","history","push","msg","categoria","useState","username","password","user","setUser","onChange","target","name","value","className","Container","Col","md","span","offset","Form","onSubmit","preventDefault","trim","Group","controlId","Label","Control","type","placeholder","Button","variant","CsvContext","InspectionContext","DateFull","date","year","getFullYear","month","getMonth","day","getDate","Merge","data0","data1","field","result","i","length","j","obj","key","MyModal","Modal","show","modal","onHide","ChangeModal","Header","closeButton","Title","formTitle","Body","children","Footer","onClick","es","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","FormInps","inspection","useForm","register","handleSubmit","errors","currentDenunciation","setCurrentDenunciation","den_id_custom","den_fecha_recepcion","den_medio","den_agente_nombre","den_tipo","den_insecto","den_insecto_otro","den_habitante_nombre","den_habitante_telefono1","den_otro_telefono","den_habitante_telefono2","den_localidad","den_provincia","den_distrito","den_direccion","den_referencia","den_fecha_probable_inspeccion","OnChange","arrayDate","DateSome","showIcon","locale","dateFormat","as","ref","required","sm","Check","label","checked","Row","column","maxLength","minDate","Date","maxDateCount","selectionMode","readOnlyInput","CircleHouses","CsvsContext","houses","inspections","UpdateHouses","setModal","setFormTitle","HandleAdd","visitedHousesInspection","array1","array2","nameCol1","nameCol2","InnerJoin","forEach","element","inspectionText","UNICODE","visited","some","FECHA","STATUS_INSPECCION","CircleMarker","center","parseFloat","LATITUDE","LONGITUDE","fillColor","color","radius","weight","fillOpacity","Popup","FormInsp","FormPI","MarkerParticipantsInmune","participantsInmune","participants_inmune","filter","customMarker","L","icon","iconUrl","require","iconSize","Point","Marker","position","NOMBRE","DIRECCION","TELEFONO","FormHP","MarkerHealthPosts","healthPosts","health_posts","MyMap","Map","zoom","preferCanvas","TileLayer","url","attribution","goBack","Points","withRouter","Logout","USU_CUENTA","Activities","fluid","disabled","DenunciationContext","provincias_aqp","provinciaId","provinciaName","distritos_aqp","distritoId","distritoName","FormDen","DenunciationsContext","denunciation","AddDenunciation","EditDenunciation","mode","chooseLabel","accept","customUpload","uploadHandler","console","log","MyTable","UpdateDenunciation","selectRowProp","bgColor","clickToSelect","onSelect","row","isSelected","prop","aux","split","toLowerCase","keyField","data","selectRow","width","dataField","Denunciations","denunciations","GetDenunciations","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","setTimeout","cargando","ClienteAxios","axios","create","baseURL","process","AuthenticationState","authReducer","CsvHouses","CsvHealthPosts","CsvParticipantsInmune","CsvClean","GetInspections","datos","a","post","respuesta","USU_CATCHMENT_AREA","response","DenunciationState","initialState","DenunciationReducer","get","resultado","den_id","objDenunciation","InspectionState","newInspections","newHealthPosts","InspectionReducer","AddInspection","concat","CsvState","CsvReducer","fileCsv","arrayFileCsv","pathCsv","d3","results","house","newHouses","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b96568f.chunk.js","sourcesContent":["var map = {\n\t\"./PUESTOS DE SALUD AQP_modificado_06022020.csv\": 213,\n\t\"./registro_participantes_inmune.csv\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 107;","module.exports = __webpack_public_path__ + \"static/media/icon-participants-inmune.49b0a5d6.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-health-posts.42f5b1bf.png\";","var map = {\n\t\"./C1ASA.csv\": 205,\n\t\"./C1TIA.csv\": 206,\n\t\"./C2CAY.csv\": 207,\n\t\"./C2TIA.csv\": 208,\n\t\"./C3JLB.csv\": 209,\n\t\"./C3TIA.csv\": 210,\n\t\"./test.csv\": 211,\n\t\"./test2.csv\": 212\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 204;","module.exports = __webpack_public_path__ + \"static/media/C1ASA.ed04870c.csv\";","module.exports = __webpack_public_path__ + \"static/media/C1TIA.4df55e0e.csv\";","module.exports = __webpack_public_path__ + \"static/media/C2CAY.83d0042a.csv\";","module.exports = __webpack_public_path__ + \"static/media/C2TIA.9173a6f3.csv\";","module.exports = __webpack_public_path__ + \"static/media/C3JLB.d90b3ea8.csv\";","module.exports = __webpack_public_path__ + \"static/media/C3TIA.0a02b6c7.csv\";","module.exports = __webpack_public_path__ + \"static/media/test.a9988830.csv\";","module.exports = __webpack_public_path__ + \"static/media/test2.8453f7b9.csv\";","module.exports = __webpack_public_path__ + \"static/media/PUESTOS DE SALUD AQP_modificado_06022020.5004b8fc.csv\";","module.exports = __webpack_public_path__ + \"static/media/registro_participantes_inmune.23670560.csv\";","import { createContext } from 'react';\n\nconst authenticationContext = createContext();\n\nexport default authenticationContext;","import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import React, {useState, useContext, useEffect} from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\n\nimport AuthenticationContext from \"../../context/authentication/AuthenticationContext\";\nimport alertaContext from '../../context/alertas/alertaContext';\n\nconst Login = (props) => {\n        \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    const AuthenticationsContext = useContext(AuthenticationContext);\n    const { mensaje, authenticated, Login } = AuthenticationsContext;\n\n    //En caso de que el passwors o usuario no exista\n    useEffect(() => {\n        if (authenticated) {\n            props.history.push('/actividades');\n        }\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, authenticated, props.history]);\n    \n    //State para iniciar sesión\n    const [user, setUser] = useState({\n        username: '',\n        password: ''\n    });\n\n    //Extraer de usuario\n    const { username, password } = user;\n\n    const onChange = e => {\n        setUser({\n            ...user,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        //Validar que no haya campos vacios\n        if (username.trim() === '' || password.trim() === '') {\n            MostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n        //Pasarlo al action\n        Login({ username, password });\n    }\n\n    return (\n        <>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Container className=\"p-4\">\n                <Col md={{ span: 4, offset: 4 }} className=\"text-center\">\n                    <h3>Vigilancia Integrada</h3>\n                    <Form\n                        onSubmit={onSubmit}\n                    >\n                        <Form.Group controlId=\"username\">\n                            <Form.Label ></Form.Label>\n                            <Form.Control \n                                type='text'\n                                name='username'\n                                placeholder='Usuario'\n                                value={username}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\">\n                            {/*<Form.Label ></Form.Label>*/}\n                            <Form.Control \n                                type='password'\n                                name='password'\n                                placeholder='Contraseña'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type='submit'>\n                            Entrar\n                        </Button>\n                    </Form>\n\n                    {/*<Link to={'/nueva-cuenta'} className='enlace-cuenta'>\n                        Obtener Cuenta\n                    </Link>*/}\n                </Col>\n            </Container >\n        </>\n    );\n}\n\nexport default Login;","import { createContext } from 'react';\n\nconst CsvContext = createContext();\n\nexport default CsvContext;","import { createContext } from 'react';\n\nconst InspectionContext = createContext();\n\nexport default InspectionContext;","import * as d3 from 'd3';\n\n//Funcion para obtener la fecha en el formato yyyy-mm-dd\nexport const DateFull = ( date ) => {\n    const year = date.getFullYear();\n    let month = date.getMonth()+1;\n    let day = date.getDate();\n    if(month < 10){\n        month = \"0\"+ month;\n    }\n    if ( day < 10) {\n        day = \"0\"+day;\n    }\n    return(`${year}-${month}-${day}`);\n}\n\n//Funcion para realizar un innerjoin con dos arreglos y sus respectivos nombres de columnas a comparar\nexport const InnerJoin = (array1, array2, nameCol1, nameCol2 ) => {\n    let result = [];\n    for (let i = 0; i < array1.length; i++) {\n        for (let j = 0; j < array2.length; j++) {\n            if (array1[i][nameCol1] === array2[j][nameCol2]) {\n                result.push(array2[j]);\n            }            \n        }\n    }\n    \n    return result;\n}\n\n//Funcion Merge\nexport const Merge = (data0, data1, field) => {\n    var result = [];\n    for (var i = 0; i < data0.length; i++) {\n    for (var j = 0; j < data1.length; j++) {\n        if (data0[i][field] == data1[j][field]) {\n        var obj = {};\n        for (var key in data0[i])\n            obj[key] = data0[i][key];\n        for (var key in data1[j]) {\n            if (key != field)\n            obj[key] = data1[j][key];\n        }\n        result.push(obj);\n        break;\n        }\n    }\n    }\n    return result;\n}\n\n//Funcion promedio\nexport const Mean = (data, select) => {\n    var n = data.length;\n    var total = 0;\n    for (var i=0; i < data.length; i++) {\n        if (isNaN(data[i][select]))\n        n = n - 1;\n        else\n        total = total + parseFloat(data[i][select]);\n    }\n    return total/n;\n}\n\n","import React from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst MyModal = (props) => {\n\n    const SaveAlert = () => {\n        //CloseModal();\n        console.log(\"entro no se porque\");\n    }\n\n    return (\n        <Modal show={props.modal} onHide={props.ChangeModal}>\n            <Modal.Header closeButton>\n            <Modal.Title>{props.formTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.children}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.ChangeModal}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default MyModal;","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\n//import authContext from \"../../../context/auth/authContext\";\nimport alertaContext from '../../context/alertas/alertaContext';\nimport InspectionContext from '../../context/inspection/InspectionContext';\nimport MyModal from \"../Modal/MyModal\";\nimport { DateFull } from \"../../Functions\";\n\n//Fecha en español\nconst es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n\n//Formulario de denuncia\nconst FormInps = (props) => {\n  \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n\n    /*const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;*/\n    \n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( inspection );\n    \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        //readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    \n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"den_otro_telefono\"\n                        label=\"Otro teléfono adicional\"\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormInps;","import React, { useContext, useState } from \"react\";\nimport { Popup, CircleMarker } from \"react-leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport InspectionContext from \"../../context/inspection/InspectionContext\";\nimport { InnerJoin } from \"../../Functions\";\nimport FormInsp from \"../Inspections/FormInsp\";\n\nconst CircleHouses = () => {\n\n    //Obtener viviendas\n    const CsvsContext = useContext(CsvContext);\n    let { houses, UpdateHouses } = CsvsContext;\n    //Obtener el inspecciones\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspections } = InspectionsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n            \n    const HandleAdd = () => {\n      setFormTitle(\"Ingresar registro de inspecciones\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //- LOGICA\n    //Para asegurar que ingresa una sola vez\n    if (houses.length > 0) {\n      //const codeLoc = [...new Set(total_ca.map(house => house.codeLoc))];\n      if (inspections.length > 0) {\n        let visitedHousesInspection = InnerJoin(houses, inspections, \"UNICODE\", \"UNICODE\");    \n        \n        //Recorriendo todas las viviendas para poner popup\n        houses.forEach(element => {\n          //element.inspectionText = `` ;\n          element.inspectionText = <div>\n                                    <b>{element.UNICODE}</b><br/>\n                                    Ult. visita : --:--<br/>\n                                    <Button onClick={HandleAdd}>Ingresar Datos</Button>\n                                   </div>;\n        });\n        //Actualizar popup segun inspecciones\n        visitedHousesInspection.forEach(visited => {\n          houses.some(element => {\n            if (visited.UNICODE === element.UNICODE) {\n              element.inspectionText = <div><b>{element.UNICODE}</b><br/>Ult. visita: <b>{visited.FECHA}</b><br/> Estado en Inspec: <b>{visited.STATUS_INSPECCION}</b></div>;\n              return true;\n            } else {\n              return false;\n            }\n          });\n        });                                                                                                                                                                  \n      }\n    }\n    \n    return (\n      <>\n        {houses.map( element => (\n          <CircleMarker \n            key = {element.UNICODE}\n            center={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            fillColor = {element.color}\n            radius = {6}\n            //// = {true}\n            color = \"black\"\n            weight = {0.2}\n            fillOpacity = {1}\n          >\n              <Popup>\n                {element.inspectionText}\n              </Popup>\n          </CircleMarker>\n        ))}\n        <FormInsp modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n      </>\n    );\n}\n\nexport default CircleHouses;","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\n//import authContext from \"../../../context/auth/authContext\";\nimport alertaContext from '../../context/alertas/alertaContext';\nimport InspectionContext from '../../context/inspection/InspectionContext';\nimport MyModal from \"../Modal/MyModal\";\nimport { DateFull } from \"../../Functions\";\n\n//Fecha en español\nconst es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n\n//Formulario de denuncia\nconst FormPI = (props) => {\n  \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n\n    /*const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;*/\n    \n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( inspection );\n    \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        //readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    \n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"den_otro_telefono\"\n                        label=\"Otro teléfono adicional\"\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormPI;","import React, { useContext, useState } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport FormPI from \"../ParticipantsInmune/FormPI\";\nimport { Merge } from \"../../Functions\";\n\nconst MarkerParticipantsInmune = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, participantsInmune } = CsvsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n    \n    const HandleAdd = () => {\n      setFormTitle(\"Ingresar registro de visitas a puestos de salud\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //AGREGANDO AGENTES\n    //Eliminar al participante que no tiene unicode de vivienda\n    let participants_inmune = participantsInmune.filter(element => element.UNICODE !== \"\");\n    //Realizando merge con total_ca\n    participants_inmune = Merge(houses, participants_inmune, \"UNICODE\");\n    //Agregando texto de visita a agente\n    if ( participants_inmune.length > 0 ) {\n      participants_inmune.forEach(element => {\n        element.inspectionText = \"Ult. visita : --\" ;\n      });\n    }\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../icons/icon-participants-inmune.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n      <>\n        {participants_inmune.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                Nombre: {element.NOMBRE} <br />\n                Direccion: {element.DIRECCION} <br/>\n                Celular: {element.TELEFONO}<br/>\n                <Button variant=\"warning\" onClick={HandleAdd}>Visita Agente</Button>\n              </Popup>\n          </Marker>\n        ))}\n        <FormPI modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n      </>\n    );\n}\n\nexport default MarkerParticipantsInmune;","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\n//import authContext from \"../../../context/auth/authContext\";\nimport alertaContext from '../../context/alertas/alertaContext';\nimport InspectionContext from '../../context/inspection/InspectionContext';\nimport MyModal from \"../Modal/MyModal\";\nimport { DateFull } from \"../../Functions\";\n\n//Fecha en español\nconst es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n\n//Formulario de denuncia\nconst FormHP = (props) => {\n  \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n\n    /*const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;*/\n    \n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( inspection );\n    \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        //readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    \n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"den_otro_telefono\"\n                        label=\"Otro teléfono adicional\"\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormHP;","import React, { useContext, useState } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport FormHP from \"../HealthPosts/FormHP\";\nimport { Merge } from \"../../Functions\";\n\nconst MarkerHealthPosts = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, healthPosts } = CsvsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n    \n    const HandleAdd = () => {\n      setFormTitle(\"Ingresar registro de visitas a puestos de salud\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //AGREGANDO PUESTOS DE SALUD\n    //Obteniendo los puestos de salud que corresponden a este catchment-area\n    let health_posts = Merge(houses, healthPosts, \"UNICODE\");\n    //Agregando texto de PUESTOS DE SALUD\n    if ( health_posts.length > 0 ) {\n      health_posts.forEach(element => {\n        element.inspectionText = <div>\n                                    <b>{element.UNICODE}</b><br/>\n                                    Ult. visita : --:--<br/>\n                                    <Button variant=\"success\" onClick={HandleAdd}>Visita Puesto de Salud</Button>\n                                   </div>;\n      });\n    }\n\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../icons/icon-health-posts.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n      <>\n        {health_posts.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                {element.inspectionText}\n              </Popup>\n          </Marker>\n        ))}\n        <FormHP modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n      </>\n    );\n}\n\nexport default MarkerHealthPosts;","import React from \"react\";\nimport { Map, TileLayer, Popup, CircleMarker } from \"react-leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CircleHouses from \"./CircleHouses\";\nimport MarkerParticipantsInmune from \"./MarkerParticipantsInmune\";\nimport MarkerHealthPosts from \"./MarkerHealthPosts\";\n//import Logic from \"../../Logic\";\n\nconst MyMap = props => {\n\n  //Variales del mapa\n  let center = [-16.4040494,-71.574117];\n  const zoom = 10;\n\n  const BtnReturn = () => {\n      props.history.goBack();\n  }\n    \n  return (\n    <>\n      <Map center={center} zoom={zoom} preferCanvas={true}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Button className=\"btn-back\" variant=\"primary\" onClick={BtnReturn}>Atrás</Button>\n        <CircleHouses/>\n        <MarkerParticipantsInmune/>\n        <MarkerHealthPosts/>\n      </Map>\n    </>\n  );\n}\n\nexport default MyMap;\n\n","import React from \"react\";\n\nconst Points = () => {\n    return(\n        <div className=\"points\">\n            18pts\n        </div>\n    );\n}\n\nexport default Points;","import React, { useContext } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\n//import iconPerson from \"../../icons/icon-person.png\";\n\nimport AuthenticationContext from \"../../context/authentication/AuthenticationContext\";\n\nconst SignOut = (props) => {\n\n    //Obtener el state de Usuario\n    const AuthenticationsContext = useContext(AuthenticationContext);\n    const { user, Logout } = AuthenticationsContext;\n\n    const BtnSignOut = () => {\n        Logout();\n        props.history.goBack();\n    }\n\n    return(\n        <>\n            <div className=\"sign-out\">\n                {/*<img src={iconPerson} alt=\"imagen-persona\"/>*/}\n                <div>Bienvenido <b>{user.USU_CUENTA}</b></div>\n                <Button variant=\"danger\" onClick={BtnSignOut}>Cerrar Sesión</Button>\n            </div>\n        </>\n    );\n}\n\nexport default withRouter((SignOut));","import React from \"react\";\n\nimport Points from './Points';\nimport SignOut from '../Login/SignOut';\n\nconst Header = () => {\n    return(\n        <header>\n            <Points/>\n            <SignOut/>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport Header from \"../Header\";\n\nconst Activities = (props) => {\n    const GoDenunciations = () => {\n        props.history.push('/actividades/denuncias');\n    }\n    const GoInsActive = () => {\n        props.history.push('/actividades/inspecciones-activas');\n    }\n    return (\n        <>\n            <Header/>\n            <Container fluid=\"md\">\n                <Row>\n                    <Col>\n                        <div id=\"wrap-button-den\" className=\"wrap-button\">\n                            <label id='title-button-den' className='title-button'>Denuncias</label>\n                            <Button id=\"btn_actDenuncias\" variant=\"primary\" onClick={GoDenunciations}>Denuncias</Button>\n                        </div>\n                        <div id=\"wrap-button-ins\" className=\"wrap-button\">\n                            <label id='title-button-ins' className='title-button'>Inspecciones</label>\n                            <Button id=\"btn_actInspeccionesPasivas\" disabled variant=\"danger\">Inspecciones por Denuncia</Button>\n                            <Button id=\"btn_actInspeccionesActivas\" variant=\"danger\" onClick={GoInsActive}>Inspecciones Activas</Button>\n                        </div>\n                        <div id=\"wrap-button-roc\" className=\"wrap-button\">\n                            <label id='title-button-roc' className='title-button'>Rociados</label>\n                            <Button id=\"btn_actRociados\" disabled variant=\"success\">Rociado</Button>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default Activities;","import { createContext } from 'react';\n\nconst DenunciationContext = createContext();\n\nexport default DenunciationContext;","export const provincias_aqp =[\n    { provinciaId:\"Arequipa\", provinciaName:\"Arequipa\"},\n    { provinciaId:\"Camana\", provinciaName:\"Camaná\"},\n    { provinciaId:\"Caraveli\", provinciaName:\"Caravelí\"},\n    { provinciaId:\"Castilla\", provinciaName:\"Castilla\"},\n    { provinciaId:\"Caylloma\", provinciaName:\"Caylloma\"},\n    { provinciaId:\"Condesuyos\", provinciaName:\"Condesuyos\"},\n    { provinciaId:\"Islay\", provinciaName:\"Islay\"},\n    { provinciaId:\"La Union\", provinciaName:\"La Unión\"}\n];\nexport const distritos_aqp = {\n    \"\":[],\n    \"Arequipa\":[\n        {distritoId:\"Alto Selva Alegre\", distritoName:\"Alto Selva Alegre\"},\n        {distritoId:\"Cercado\", distritoName:\"Arequipa(Cercado)\"},\n        {distritoId:\"Cayma\", distritoName:\"Cayma\"},\n        {distritoId:\"Cerro Colorado\", distritoName:\"Cerro Colorado\"},\n        {distritoId:\"Characato\", distritoName:\"Characato\"},\n        {distritoId:\"Chiguata\", distritoName:\"Chiguata\"},\n        {distritoId:\"Jacobo Hunter\", distritoName:\"Jacobo Hunter\"},\n        {distritoId:\"Jose Luis Bustamante y Rivero\", distritoName:\"José Luis Bustamante y Rivero\"},\n        {distritoId:\"La Joya\", distritoName:\"La Joya\"},\n        {distritoId:\"Mariano Melgar\", distritoName:\"Mariano Melgar\"},\n        {distritoId:\"Miraflores\", distritoName:\"Miraflores\"},\n        {distritoId:\"Mollebaya\", distritoName:\"Mollebaya\"},\n        {distritoId:\"Paucarpata\", distritoName:\"Paucarpata\"},\n        {distritoId:\"Pocsi\", distritoName:\"Pocsi\"},\n        {distritoId:\"Polobaya\", distritoName:\"Polobaya\"},\n        {distritoId:\"Quequenha\", distritoName:\"Quequeña\"},\n        {distritoId:\"Sabandia\", distritoName:\"Sabandía\"},\n        {distritoId:\"Sachaca\", distritoName:\"Sachaca\"},\n        {distritoId:\"San Juan de Siguas\", distritoName:\"San Juan de Siguas\"},\n        {distritoId:\"San Juan de Tarucani\", distritoName:\"San Juan de Tarucani\"},\n        {distritoId:\"Santa Isabel de Siguas\", distritoName:\"Santa Isabel de Siguas\"},\n        {distritoId:\"Santa Rita de Siguas\", distritoName:\"Santa Rita de Siguas\"},\n        {distritoId:\"Socabaya\", distritoName:\"Socabaya\"},\n        {distritoId:\"Tiabaya\", distritoName:\"Tiabaya\"},\n        {distritoId:\"Uchumayo\", distritoName:\"Uchumayo\"},\n        {distritoId:\"Vitor\", distritoName:\"Vítor\"},\n        {distritoId:\"Yanahuara\", distritoName:\"Yanahuara\"},\n        {distritoId:\"Yarabamba\", distritoName:\"Yarabamba\"},\n        {distritoId:\"Yura\", distritoName:\"Yura\"}\n    ],\n    \"Camana\":[\n        {distritoId:\"Camana\", distritoName:\"Camaná\"},\n        {distritoId:\"Jose Maria Quimper\", distritoName:\"José María Quimper\"},\n        {distritoId:\"Mariano Nicolas Valcarcel\", distritoName:\"Mariano Nicolás Valcárcel\"},\n        {distritoId:\"Mariscal Caceres\", distritoName:\"Mariscal Cáceres\"},\n        {distritoId:\"Nicolas de Pierola\", distritoName:\"Nicolás de Piérola\"},\n        {distritoId:\"Oconha\", distritoName:\"Ocoña\"},\n        {distritoId:\"Quilca\", distritoName:\"Quilca\"},\n        {distritoId:\"Samuel Pastor\", distritoName:\"Samuel Pastor\"}\n    ],\n    \"Caraveli\":[\n        {distritoId:\"Acari\", distritoName:\"Acarí\"},\n        {distritoId:\"Atico\", distritoName:\"Atico\"},\n        {distritoId:\"Atiquipa\", distritoName:\"Atiquipa\"},\n        {distritoId:\"Bella Union\", distritoName:\"Bella Unión\"},\n        {distritoId:\"Cahuacho\", distritoName:\"Cahuacho\"},\n        {distritoId:\"Caraveli\", distritoName:\"Caravelí\"},\n        {distritoId:\"Chala\", distritoName:\"Chala\"},\n        {distritoId:\"Chaparra\", distritoName:\"Chaparra\"},\n        {distritoId:\"Huanuhuanu\", distritoName:\"Huanuhuanu\"},\n        {distritoId:\"Jaqui\", distritoName:\"Jaqui\"},\n        {distritoId:\"Lomas\", distritoName:\"Lomas\"},\n        {distritoId:\"Quicacha\", distritoName:\"Quicacha\"},\n        {distritoId:\"Yauca\", distritoName:\"Yauca\"},\n    ],\n    \"Castilla\":[\n        {distritoId:\"Andahua\", distritoName:\"Andahua\"},\n        {distritoId:\"Aplao\", distritoName:\"Aplao\"},\n        {distritoId:\"Ayo\", distritoName:\"Ayo\"},\n        {distritoId:\"Chachas\", distritoName:\"Chachas\"},\n        {distritoId:\"Chilcaymarca\", distritoName:\"Chilcaymarca\"},\n        {distritoId:\"Choco\", distritoName:\"Choco\"},\n        {distritoId:\"Huancarqui\", distritoName:\"Huancarqui\"},\n        {distritoId:\"Machaguay\", distritoName:\"Machaguay\"},\n        {distritoId:\"Orcopampa\", distritoName:\"Orcopampa\"},\n        {distritoId:\"Pampacolca\", distritoName:\"Pampacolca\"},\n        {distritoId:\"Tipan\", distritoName:\"Tipán\"},\n        {distritoId:\"Unhon\", distritoName:\"Uñón\"},\n        {distritoId:\"Uraca\", distritoName:\"Uraca\"},\n        {distritoId:\"Viraco\", distritoName:\"Viraco\"}        \n    ],\n    \"Caylloma\":[\n        {distritoId:\"Achoma\", distritoName:\"Achoma\"},\n        {distritoId:\"Cabanaconde\", distritoName:\"Cabanaconde\"},\n        {distritoId:\"Callalli\", distritoName:\"Callalli\"},\n        {distritoId:\"Caylloma\", distritoName:\"Caylloma\"},\n        {distritoId:\"Chivay\", distritoName:\"Chivay\"},\n        {distritoId:\"Coporaque\", distritoName:\"Coporaque\"},\n        {distritoId:\"Huambo\", distritoName:\"Huambo\"},\n        {distritoId:\"Huanca\", distritoName:\"Huanca\"},\n        {distritoId:\"Ichupampa\", distritoName:\"Ichupampa\"},\n        {distritoId:\"Lari\", distritoName:\"Lari\"},\n        {distritoId:\"Lluta\", distritoName:\"Lluta\"},\n        {distritoId:\"Maca\", distritoName:\"Maca\"},\n        {distritoId:\"Madrigal\", distritoName:\"Madrigal\"},\n        {distritoId:\"Majes\", distritoName:\"Majes\"},\n        {distritoId:\"San Antonio de Chuca\", distritoName:\"San Antonio de Chuca\"},\n        {distritoId:\"Sibayo\", distritoName:\"Sibayo\"},\n        {distritoId:\"Tapay\", distritoName:\"Tapay\"},\n        {distritoId:\"Tisco\", distritoName:\"Tisco\"},\n        {distritoId:\"Tuti\", distritoName:\"Tuti\"},\n        {distritoId:\"Yanque\", distritoName:\"Yanque\"},\n    ],\n    \"Condesuyos\":[\n        {distritoId:\"Andaray\", distritoName:\"Andaray\"},\n        {distritoId:\"Cayarani\", distritoName:\"Cayarani\"},\n        {distritoId:\"Chichas\", distritoName:\"Chichas\"},\n        {distritoId:\"Chuquibamba\", distritoName:\"Chuquibamba\"},\n        {distritoId:\"Iray\", distritoName:\"Iray\"},\n        {distritoId:\"Rio Grande\", distritoName:\"Río Grande\"},\n        {distritoId:\"Salamanca\", distritoName:\"Salamanca\"},\n        {distritoId:\"Yanaquihua\", distritoName:\"Yanaquihua\"}\n    ],\n    \"Islay\":[\n        {distritoId:\"Cocachacra\", distritoName:\"Cocachacra\"},\n        {distritoId:\"Dean Valdivia\", distritoName:\"Deán Valdivia\"},\n        {distritoId:\"Islay\", distritoName:\"Islay\"},\n        {distritoId:\"Mejia\", distritoName:\"Mejía\"},\n        {distritoId:\"Mollendo\", distritoName:\"Mollendo\"},\n        {distritoId:\"Punta de Bombon\", distritoName:\"Punta de Bombón\"}\n    ],\n    \"La Union\":[\n        {distritoId:\"Alca\", distritoName:\"Alca\"},\n        {distritoId:\"Charcana\", distritoName:\"Charcana\"},\n        {distritoId:\"Cotahuasi\", distritoName:\"Cotahuasi\"},\n        {distritoId:\"Huaynacotas\", distritoName:\"Huaynacotas\"},\n        {distritoId:\"Pampamarca\", distritoName:\"Pampamarca\"},\n        {distritoId:\"Puyca\", distritoName:\"Puyca\"},\n        {distritoId:\"Quechualla\", distritoName:\"Quechualla\"},\n        {distritoId:\"Sayla\", distritoName:\"Sayla\"},\n        {distritoId:\"Tauria\", distritoName:\"Tauría\"},\n        {distritoId:\"Tomepampa\", distritoName:\"Tomepampa\"},\n        {distritoId:\"Toro\", distritoName:\"Toro\"}\n    ]\n};","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport {FileUpload} from 'primereact/fileupload';//Imagen\nimport { useForm } from \"react-hook-form\";//Validar\n\n//import authContext from \"../../../context/auth/authContext\";\nimport alertaContext from '../../../context/alertas/alertaContext';\nimport DenunciationContext from '../../../context/denunciation/DenunciationContext';\nimport MyModal from \"../../Modal/MyModal\";\nimport {provincias_aqp, distritos_aqp} from './Ubigeo';\nimport { DateFull } from \"../../../Functions\";\n\n//Fecha en español\nconst es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n\n//Formulario de denuncia\nconst FormDen = (props) => {\n  \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    /*const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;*/\n\n    //Obtener el state de Alerta\n    const DenunciationsContext = useContext(DenunciationContext);\n    const { denunciation, AddDenunciation, EditDenunciation } = DenunciationsContext;\n    \n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( denunciation );\n    \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        //readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    \n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                            <FileUpload name=\"demo\"  url=\"./upload\" mode=\"basic\" chooseLabel=\"Subir imagen\" accept=\"image/*\"  customUpload={true} uploadHandler={MyUploader}/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"den_otro_telefono\"\n                        label=\"Otro teléfono adicional\"\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_PROVINCIA */}\n                <Form.Group controlId=\"den_provincia\">\n                    <Form.Label >Provincia</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_provincia'\n                        value= {den_provincia}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Provincia</option>\n                        {provincias_aqp.map((e, key) => {\n                            return <option key={key} value={e.provinciaId}>{e.provinciaName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_DISTRITO */}\n                <Form.Group controlId=\"den_distrito\">\n                    <Form.Label >Distrito</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_distrito'\n                        value= {den_distrito}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Distrito</option>\n                        {distritos_aqp[den_provincia].map((e, key) => {\n                            return <option key={key} value={e.distritoId}>{e.distritoName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormDen;","\nimport React, { useContext } from \"react\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n\nimport DenunciationContext from \"../../context/denunciation/DenunciationContext\";\n\nconst MyTable = ({ register }) => {\n\n    //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { UpdateDenunciation } = DenunciationsContext;\n  \n  const onRowSelect = (row, isSelected) => {\n    if ( isSelected ) {\n      let obj = {};\n      for(var prop in row){\n        if (prop === 'DEN_FECHA_RECEPCION') {\n          row[prop] = new Date(row[prop]);\n        } else if (prop === 'DEN_FECHA_PROBABLE_INSPECCION') {\n          let obj = [];\n          let aux = row[prop];\n          aux = aux.split('&');\n          for (let i = 1; i < aux.length; i++) {\n            obj.push(new Date(aux[i]));\n          }\n          row[prop] = obj;\n        }\n        obj[prop.toLowerCase()]=row[prop];\n      }\n      UpdateDenunciation(obj);\n    }\n  }\n\n  const selectRowProp = {\n    mode: 'radio',\n    bgColor: '#5bc0de', // you should give a bgcolor, otherwise, you can't regonize which row has been selected\n    //hideSelectColumn: true,  // enable hide selection column.\n    clickToSelect: true,  // you should enable clickToSelect, otherwise, you can't select column.\n    onSelect: onRowSelect\n  };\n\n  return (\n      <BootstrapTable \n          keyField=\"DEN_ID_CUSTOM\"\n          data={ register } \n          selectRow= {selectRowProp} \n      >   \n          <TableHeaderColumn width='150' dataField='DEN_ID_CUSTOM'>CÓDIGO</TableHeaderColumn>\n          <TableHeaderColumn width='210' dataField='DEN_FECHA_RECEPCION'>FECHA DE RECEPCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='USU_CUENTA'>USUARIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_MEDIO'>MEDIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_TIPO'>TIPO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_AGENTE_NOMBRE'>AGENTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO'>INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO_OTRO'>OTRO INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_NOMBRE'>HABITANTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO1'>TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO2'>OTRO TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_PROVINCIA'>PROVINCIA</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DISTRITO'>DISTRITO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_LOCALIDAD'>LOCALIDAD</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DIRECCION'>DIRECCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_REFERENCIA'>REFERENCIA</TableHeaderColumn>\n          <TableHeaderColumn width='300' dataField='DEN_FECHA_PROBABLE_INSPECCION'>FECHAS PROBABLE INSPECCIÓN</TableHeaderColumn>\n      </BootstrapTable>\n  );\n}\n\nexport default MyTable;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Button } from 'react-bootstrap';\n\nimport DenunciationContext from \"../../context/denunciation/DenunciationContext\";\nimport FormDen from \"./FormDen\";\nimport MyTable from \"./MyTable\";\n\nconst Denunciations = () => {\n\n  //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { denunciations, GetDenunciations, AddDenunciation, EditDenunciation } = DenunciationsContext;\n\n  //Modal\n  const [modal, setModal] = useState(false);\n  //Titulo del formulario\n  const [formTitle, setFormTitle] = useState(null);\n\n  useEffect(() => {\n      GetDenunciations();\n      //Eliminamos advertencia por que sabemos que esta bien\n      // eslint-disable-next-line\n  }, []);\n\n  const HandleAdd = () => {\n    setFormTitle(\"Nuevo registro de denuncias\");\n    ChangeModal();\n  }\n  const HandleEdit = () => {\n    setFormTitle(\"Editar registro de denuncias\");\n    ChangeModal();\n  }\n\n  const ChangeModal = () => {\n    setModal(!modal);\n  }\n\n  return(\n      <Container>\n        <h2>Información de Denuncias</h2>\n        <Button onClick={HandleAdd}>Agregar</Button>\n        <Button onClick={HandleEdit}>Edita</Button>\n        <FormDen modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n        <MyTable register={denunciations}/>\n      </Container>\n  );\n}\n\nexport default Denunciations;","import { \n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return{\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return{\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Csv\nexport const CSV_HOUSES = 'CSV_HOUSES';\nexport const CSV_PARTICIPANTS_INMUNE = 'CSV_PARTICIPANTS_INMUNE';\nexport const CSV_HEALTH_POSTS = 'CSV_HEALTH_POSTS';\nexport const UPDATE_HOUSES = 'UPDATE_HOUSES';\nexport const CSV_CLEAN = 'CSV_CLEAN';\n\n//Login\nexport const LOGIN_EXIT = 'LOGIN_EXIT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGIN_END = 'LOGIN_END';\n\n//Denuncia\nexport const GET_DENUNCIATIONS = 'GET_DENUNCIATIONS';\nexport const ADD_DENUNCIATION = 'ADD_DENUNCIATION';\nexport const UPDATE_DENUNCIATION = 'UPDATE_DENUNCIATION';\n\n//Inspeccion\nexport const GET_INSPECTIONS = 'GET_INSPECTIONS';\nexport const ADD_INSPECTION = 'ADD_INSPECTION';\n\n","import React, {useReducer} from 'react';\n\nimport alertaContext from './alertaContext';\nimport alertaReducer from './alertaReducer';\nimport { \n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../../types';\n\nconst AlertaState = props => {\n    \n    const initialState = {\n        alerta: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    //Funciones\n    const MostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        //Despues de 5 segundos limpiar el mensaje de error\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return(\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                MostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    );\n}\n\nexport default AlertaState;","import { \n    LOGIN_EXIT,\n    LOGIN_ERROR,\n    LOGIN_END\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case LOGIN_EXIT:\n            //localStorage.setItem('token', action.payload.token);\n            return{\n                ...state,\n                authenticated: true,\n                user: action.payload,\n                mensaje: null,\n                cargando: false\n            }\n        case LOGIN_ERROR:\n        case LOGIN_END:\n            //localStorage.removeItem('token');\n            return{\n                ...state,\n                //token: null,\n                user: {},\n                authenticated: null,\n                //mensaje: action.payload,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n}","import axios from \"axios\";\n\nconst ClienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default ClienteAxios;","import React, { useReducer, useContext } from 'react';\n\nimport authContext from './AuthenticationContext';\nimport authReducer from './AuthenticationReducer';\nimport ClienteAxios from \"../../config/axios\";\n//import tokenAuth from \"../../config/tokenAuth\";\nimport { \n    LOGIN_EXIT,\n    LOGIN_ERROR,\n    LOGIN_END\n} from '../../types';\nimport CsvContext from \"../csv/CsvContext\";\nimport InspectionContext from \"../inspection/InspectionContext\";\n\nconst AuthenticationState = props => {\n    \n    const initialState = {\n        //token: localStorage.getItem('token'),\n        authenticated: false,\n        user: {},\n        mensaje: null,\n        cargando: true\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(authReducer, initialState);\n    //Obtener viviendas\n    const CsvsContext = useContext(CsvContext);\n    let { CsvHouses, CsvHealthPosts, CsvParticipantsInmune, CsvClean } = CsvsContext;\n    //Obtener el inspecciones\n    const InspectionsContext = useContext(InspectionContext);\n    const { GetInspections } = InspectionsContext;\n\n    //Cuando el usuario inicia sesion\n    const Login = async datos => {\n        try {\n            //Comprobando que el username y password sean correctos\n            const respuesta = await ClienteAxios.post('/api/acceder', datos);\n            //Almacenando el username que se logio\n            await ClienteAxios.post('/api/visitas-app', datos);\n            \n            //Cargando datos que se necesitaran\n            await CsvHouses(respuesta.data.USU_CATCHMENT_AREA);\n            await CsvHealthPosts();\n            await CsvParticipantsInmune();\n            await GetInspections();\n            \n            dispatch({\n                type: LOGIN_EXIT,\n                payload: respuesta.data\n            });\n            \n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            };\n            \n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            });\n        }\n    }\n\n    //Cierra la sesion del usuario\n    const Logout = () => {\n        CsvClean();\n\n        dispatch({\n            type: LOGIN_END\n        });\n    }\n\n    return(\n        <authContext.Provider\n            value={{\n                //token: state.token,\n                authenticated: state.authenticated,\n                user: state.user,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                Login,\n                Logout\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    );\n}\n\nexport default AuthenticationState;","import { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_DENUNCIATIONS:\n            return{\n                ...state,\n                denunciations: action.payload\n            };\n        case ADD_DENUNCIATION:\n            return{\n                ...state,\n                denunciations: [...state.denunciations, action.payload]\n            };\n        case UPDATE_DENUNCIATION:\n            return{\n                ...state,\n                denunciation : action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport DenunciationContext from './DenunciationContext';\nimport DenunciationReducer from './DenunciationReducer';\nimport { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION\n} from '../../types';\n\nconst DenunciationState = props => {\n    \n    const initialState = {\n        denunciation: {\n            den_id_custom: '',\n            den_fecha_recepcion: new Date(),\n            den_medio: '',\n            den_agente_nombre:'',\n            den_tipo: '',\n            den_insecto: '',\n            den_insecto_otro:'',\n            den_habitante_nombre:'',\n            den_habitante_telefono1:'',\n            den_otro_telefono:false,\n            den_habitante_telefono2:'',\n            den_provincia: \"\",\n            den_distrito:'',\n            den_localidad:'',\n            den_direccion:'',\n            den_referencia:'',\n            den_fecha_probable_inspeccion: null\n        },\n        denunciations: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(DenunciationReducer, initialState);\n\n    //FUNCIONES\n    //* Obtener denuncias\n    const GetDenunciations = async () => {\n        \n        try {\n            const resultado = await ClienteAxios.get('/api/denuncias');\n            //console.log(resultado);\n\n            dispatch({\n                type: GET_DENUNCIATIONS,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar denuncias\n    const AddDenunciation = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Denuncia seleccionada\n    const UpdateDenunciation = ( objDenunciation ) => {\n        dispatch({\n            type: UPDATE_DENUNCIATION,\n            payload: objDenunciation\n        });\n    }\n\n    //* Editar denuncias\n    const EditDenunciation = async ( denunciation ) => {\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation);\n            //console.log(resultado);\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <DenunciationContext.Provider\n            value={{\n                denunciation: state.denunciation,\n                denunciations: state.denunciations,\n                GetDenunciations,\n                AddDenunciation,\n                UpdateDenunciation,\n                EditDenunciation\n            }}\n        >\n            {props.children}\n        </DenunciationContext.Provider>\n    );\n}\n\nexport default DenunciationState;","import { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_INSPECTIONS:\n            return{\n                ...state,\n                inspections: action.payload\n            };\n        case ADD_INSPECTION:\n            return{\n                ...state,\n                inspections: [...state.inspections, action.payload]\n            };\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport InspectionContext from './InspectionContext';\nimport InspectionReducer from './InspectionReducer';\nimport { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\nimport { DateFull } from \"../../Functions\";\n\nconst InspectionState = props => {\n    \n    const initialState = {\n        inspection: {\n            den_id_custom: '',\n            den_fecha_recepcion: new Date(),\n            den_medio: '',\n            den_agente_nombre:'',\n            den_tipo: '',\n            den_insecto: '',\n            den_insecto_otro:'',\n            den_habitante_nombre:'',\n            den_habitante_telefono1:'',\n            den_otro_telefono:false,\n            den_habitante_telefono2:'',\n            den_provincia: \"\",\n            den_distrito:'',\n            den_localidad:'',\n            den_direccion:'',\n            den_referencia:'',\n            den_fecha_probable_inspeccion: null\n        },\n        inspections: [],\n        newInspections: [],\n        newHealthPosts: [],\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(InspectionReducer, initialState);\n    \n    //FUNCIONES\n    //* Obtener denuncias\n    const GetInspections = async () => {\n                \n        try {\n            const resultado = await ClienteAxios.get('/api/inspecciones');\n            \n            dispatch({\n                type: GET_INSPECTIONS,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar denuncias\n    const AddInspection = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_INSPECTION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <InspectionContext.Provider\n            value={{\n                inspection: state.inspection,\n                inspections: state.inspections,\n                newInspections: state.newInspections,\n                newHealthPosts: state.newHealthPosts,\n                GetInspections,\n                AddInspection\n            }}\n        >\n            {props.children}\n        </InspectionContext.Provider>\n    );\n}\n\nexport default InspectionState;","import { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS,\n    UPDATE_HOUSES,\n    CSV_CLEAN\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case CSV_HOUSES:\n            return{\n                ...state,\n                houses: state.houses.concat(action.payload)\n            };\n        case CSV_PARTICIPANTS_INMUNE:\n            return{\n                ...state,\n                participantsInmune: action.payload\n            };\n        case CSV_HEALTH_POSTS:\n            return{\n                ...state,\n                healthPosts: action.payload\n            };\n        case UPDATE_HOUSES:\n            return{\n                ...state,\n                houses: action.payload\n            };\n        case CSV_CLEAN:\n            return{\n                houses:[],\n                participantsInmune:[],\n                healthPosts:[]\n            };\n        default:\n            return state;\n    }\n}","import React, { useReducer, useContext } from 'react';\nimport * as d3 from 'd3';\n\nimport CsvContext from './CsvContext';\nimport CsvReducer from './CsvReducer';\nimport { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS,\n    UPDATE_HOUSES,\n    CSV_CLEAN\n} from '../../types';\n\nconst CsvState = props => {\n    \n    const initialState = {\n        houses: [],\n        participantsInmune: [],\n        healthPosts: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(CsvReducer, initialState);\n\n    //Funciones\n    const CsvHouses = async (fileCsv) => {\n        \n        if (Object.keys(fileCsv).length !== 0) {\n            const arrayFileCsv = fileCsv.split('&');\n            for (let i = 0; i < arrayFileCsv.length; i++) {\n                //Obtener CSV\n                let pathCsv = require('../../catchment-area/' + arrayFileCsv[i] + '.csv');\n                \n                try {\n                    let results = await d3.csv(pathCsv);\n                    \n                    //Eliminando viviendas que no tienen GPS\n                    results = results.filter(house => house.LATITUDE !== null && house.LATITUDE !== \"\" && house.LATITUDE !== \"NA\");\n                    \n                    //Lo hago asi para que me diga si hay algun error al leer cada archivo CSV\n                    dispatch({\n                        type: CSV_HOUSES,\n                        payload: results\n                    });\n                    \n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        }\n    };\n          \n    const CsvParticipantsInmune = async () => {\n        //Obtener CSV\n        const fileCsv= \"registro_participantes_inmune\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_PARTICIPANTS_INMUNE,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const CsvHealthPosts = async () => {\n        //Obtener CSV\n        const fileCsv= \"PUESTOS DE SALUD AQP_modificado_06022020\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_HEALTH_POSTS,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n    const UpdateHouses = async (newHouses) => {\n        //Obtener CSV\n        dispatch({\n            type: UPDATE_HOUSES,\n            payload: newHouses\n        });\n    };\n\n    const CsvClean = () => {\n        dispatch({\n            type: CSV_CLEAN\n        });\n    }\n\n    return(\n        <CsvContext.Provider\n            value={{\n                houses: state.houses,\n                participantsInmune: state.participantsInmune,\n                healthPosts: state.healthPosts,\n                CsvHouses,\n                CsvParticipantsInmune,\n                CsvHealthPosts,\n                UpdateHouses,\n                CsvClean\n            }}\n        >\n            {props.children}\n        </CsvContext.Provider>\n    );\n}\n\nexport default CsvState;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Login from \"./components/Login\";\nimport MyMap from \"./components/MyMap\";\nimport Activities from \"./components/Activities\";\nimport Denunciations from \"./components/Denunciations\";\nimport AlertaState from './context/alertas/alertaState';\nimport AuthenticationState from './context/authentication/AuthenticationState';\nimport DenunciationState from './context/denunciation/DenunciationState';\nimport InspectionState from './context/inspection/InspectionState';\nimport CsvState from './context/csv/CsvState';\n\nfunction App() {\n  return (\n    <AlertaState>\n      <CsvState>\n        <DenunciationState>\n          <InspectionState>\n            <AuthenticationState>\n              <Router> \n                <Switch>\n                  <Route exact path=\"/\" component={Login}/>\n                  <Route exact path=\"/actividades\" component={Activities}/>\n                  <Route exact path=\"/actividades/denuncias\" component={Denunciations}/>\n                  <Route exact path=\"/actividades/inspecciones-activas\" component={MyMap}/>\n                </Switch>\n              </Router>\n            </AuthenticationState>\n          </InspectionState>\n        </DenunciationState>\n      </CsvState>\n    </AlertaState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}