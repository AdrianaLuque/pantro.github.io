{"version":3,"sources":["files sync /^/.//.*/.csv$","icons/icon-participants-inmune.png","icons/icon-health-posts.png","catchment-area sync /^/.//.*/.csv$","catchment-area/C1ASA.csv","catchment-area/test.csv","catchment-area/test2.csv","files/PUESTOS DE SALUD AQP_modificado_06022020.csv","files/registro_participantes_inmune.csv","context/auth/authContext.js","context/alertas/alertaContext.js","components/Login/index.js","context/csv/CsvContext.js","components/MyMap/CircleHouses.js","Functions/index.js","components/MyMap/MarkerParticipantsInmune.js","components/MyMap/MarkerHealthPosts.js","components/MyMap/index.js","components/Activities/index.js","context/denunciation/DenunciationContext.js","context/modal/ModalContext.js","components/Denunciations/form/Ubigeo.js","components/Denunciations/form/Denunciation.js","components/Denunciations/form/MyModal.js","components/Denunciations/MyTable.js","components/Denunciations/index.js","context/alertas/alertaReducer.js","types/index.js","context/alertas/alertaState.js","context/auth/authReducer.js","context/auth/authState.js","config/axios.js","context/denunciation/DenunciationReducer.js","context/denunciation/DenunciationState.js","context/inspection/InspectionContext.js","context/inspection/InspectionReducer.js","context/inspection/InspectionState.js","context/csv/CsvReducer.js","context/csv/CsvState.js","context/modal/ModalReducer.js","context/modal/ModalState.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","authContext","createContext","alertaContext","Login","props","alertasContext","useContext","alerta","MostrarAlerta","authsContext","mensaje","autenticado","IniciarSesion","useEffect","history","push","msg","categoria","useState","username","password","usuario","guardarUsuario","onChange","target","name","value","className","Container","Col","md","span","offset","Form","onSubmit","preventDefault","console","log","trim","Group","controlId","Label","Control","type","placeholder","Button","variant","CsvContext","CircleHouses","CsvsContext","houses","CsvHouses","total_ca","forEach","element","inspectionText","CircleMarker","key","UNICODE","center","parseFloat","LATITUDE","LONGITUDE","fillColor","color","radius","weight","fillOpacity","Popup","DateFull","date","year","getFullYear","month","getMonth","day","getDate","Merge","data0","data1","field","result","i","length","j","obj","MarkerParticipantsInmune","participantsInmune","CsvParticipantsInmune","participants_inmune","filter","customMarker","L","icon","iconUrl","require","iconSize","Point","Marker","position","NOMBRE","DIRECCION","TELEFONO","MarkerHealthPosts","healthPosts","CsvHealthPosts","health_posts","MyMap","Map","zoom","preferCanvas","TileLayer","url","attribution","Activities","fluid","Row","onClick","DenunciationContext","ModalContext","provincias_aqp","provinciaId","provinciaName","distritos_aqp","distritoId","distritoName","es","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","Denunciation","DenunciationsContext","denunciation","AddDenunciation","CloseModal","EditDenunciation","useForm","register","handleSubmit","errors","currentDenunciation","setCurrentDenunciation","den_id_custom","den_fecha_recepcion","den_medio","den_agente_nombre","den_tipo","den_insecto","den_insecto_otro","den_habitante_nombre","den_habitante_telefono1","den_otro_telefono","den_habitante_telefono2","den_provincia","den_distrito","den_localidad","den_direccion","den_referencia","den_fecha_probable_inspeccion","OnChange","arrayDate","DateSome","showIcon","locale","dateFormat","as","ref","required","sm","Check","label","checked","column","mode","chooseLabel","accept","customUpload","uploadHandler","maxLength","minDate","Date","maxDateCount","selectionMode","readOnlyInput","MyModal","ModalsContext","modal","Modal","show","onHide","Header","closeButton","Title","Body","Footer","MyTable","UpdateDenunciation","selectRowProp","bgColor","clickToSelect","onSelect","row","isSelected","prop","aux","split","toLowerCase","keyField","data","selectRow","width","dataField","Denunciations","denunciations","GetDenunciations","ShowModal","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","setTimeout","children","cargando","localStorage","removeItem","token","AuthState","authReducer","UsuarioAutenticado","a","error","datos","response","CerrarSesion","ClienteAxios","axios","create","baseURL","process","DenunciationState","initialState","DenunciationReducer","get","resultado","den_id","post","objDenunciation","InspectionContext","inspections","InspectionState","inspection","InspectionReducer","GetInspections","AddInspection","CsvState","CsvReducer","pathCsv","d3","results","ModalState","ModalReducer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"uHAAA,IAAIA,EAAM,CACT,iDAAkD,IAClD,sCAAuC,KAIxC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,sGCvBpBU,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3C,IAAId,EAAM,CACT,cAAe,IACf,aAAc,IACd,cAAe,KAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCxBpBU,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sE,oBCA3CD,EAAOC,QAAU,IAA0B,2D,2KCI5BC,EAFKC,0BCELC,EAFOD,0BCiGPE,EA7FD,SAACC,GAGX,IAAMC,EAAiBC,qBAAWJ,GAC1BK,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,cAEVC,EAAeH,qBAAWN,GACxBU,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,cAG9BC,qBAAU,WACFF,GACAP,EAAMU,QAAQC,KAAK,gBAGnBL,GACAF,EAAcE,EAAQM,IAAKN,EAAQO,aAIxC,CAACP,EAASC,EAAaP,EAAMU,UApBX,MAuBaI,mBAAS,CACvCC,SAAU,GACVC,SAAU,KAzBO,mBAuBdC,EAvBc,KAuBLC,EAvBK,KA6BbH,EAAuBE,EAAvBF,SAAUC,EAAaC,EAAbD,SAEZG,EAAW,SAAA/B,GACb8B,EAAe,eACRD,EADO,eAET7B,EAAEgC,OAAOC,KAAQjC,EAAEgC,OAAOE,UAgBnC,OACI,oCACMnB,EAAU,yBAAKoB,UAAS,iBAAYpB,EAAOU,YAAcV,EAAOS,KAAc,KAChF,kBAACY,EAAA,EAAD,CAAWD,UAAU,OACjB,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKL,UAAU,eACvC,oDACA,kBAACM,EAAA,EAAD,CACIC,SAnBH,SAAA1C,GACbA,EAAE2C,iBACFC,QAAQC,IAAI,qBAEY,KAApBlB,EAASmB,QAAqC,KAApBlB,EAASkB,QACnC9B,EAAc,oCAAqC,gBAIvDI,EAAc,CAAEO,WAAUC,eAYV,kBAACa,EAAA,EAAKM,MAAN,CAAYC,UAAU,YAClB,kBAACP,EAAA,EAAKQ,MAAN,MACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAK,WACLmB,YAAY,UACZlB,MAAOP,EACPI,SAAUA,KAGlB,kBAACU,EAAA,EAAKM,MAAN,CAAYC,UAAU,YAElB,kBAACP,EAAA,EAAKS,QAAN,CACIC,KAAK,WACLlB,KAAK,WACLmB,YAAY,gBACZlB,MAAON,EACPG,SAAUA,KAGlB,kBAACsB,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,UAA/B,e,oCCjFTI,EAFI9C,0BCuCJ+C,EApCM,WAGjB,IAAMC,EAAc3C,qBAAWyC,GACvBG,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,UAChBtC,qBAAU,WACNsC,MAED,IAEH,IAAIC,EAAWF,EAMf,OAJAE,EAASC,SAAQ,SAAAC,GACfA,EAAQC,eAAiB,sBAIvBH,EAASnE,KAAK,SAAAqE,GAAO,OACnB,kBAACE,EAAA,EAAD,CACEC,IAAOH,EAAQI,QACfC,OAAQ,CAACC,WAAWN,EAAQO,UAAUD,WAAWN,EAAQQ,YACzDC,UAAaT,EAAQU,MACrBC,OAAU,EAEVD,MAAQ,QACRE,OAAU,GACVC,YAAe,GAEb,kBAACC,EAAA,EAAD,KACGd,EAAQC,qB,kCC/BZc,EAAW,SAAEC,GACtB,IAAMC,EAAOD,EAAKE,cACdC,EAAQH,EAAKI,WAAW,EACxBC,EAAML,EAAKM,UAOf,OANGH,EAAQ,KACPA,EAAQ,IAAKA,GAEZE,EAAM,KACPA,EAAM,IAAIA,GAER,GAAN,OAAUJ,EAAV,YAAkBE,EAAlB,YAA2BE,IAmBlBE,EAAQ,SAACC,EAAOC,EAAOC,GAEhC,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAMI,OAAQC,IAC9B,GAAIN,EAAMI,GAAGF,IAAUD,EAAMK,GAAGJ,GAAQ,CACxC,IAAIK,EAAM,GACV,IAAK,IAAI5B,KAAOqB,EAAMI,GAClBG,EAAI5B,GAAOqB,EAAMI,GAAGzB,GACxB,IAAK,IAAIA,KAAOsB,EAAMK,GACd3B,GAAOuB,IACXK,EAAI5B,GAAOsB,EAAMK,GAAG3B,IAExBwB,EAAOlE,KAAKsE,GACZ,MAIJ,OAAOJ,GCGIK,EA7CkB,WAG7B,IAAMrC,EAAc3C,qBAAWyC,GACvBG,EAAsDD,EAAtDC,OAAQqC,EAA8CtC,EAA9CsC,mBAAoBC,EAA0BvC,EAA1BuC,sBAEpC3E,qBAAU,WACN2E,MAED,IAIH,IAAIC,EAAsBF,EAAmBG,QAAO,SAAApC,GAAO,MAAwB,KAApBA,EAAQI,YAEvE+B,EAAsBZ,EAAM3B,EAAQuC,EAAqB,YAEhCN,OAAS,GAChCM,EAAoBpC,SAAQ,SAAAC,GAC1BA,EAAQC,eAAiB,sBAI7B,IAAMoC,EAAeC,IAAEC,KAAK,CAC1BC,QAASC,EAAQ,KACjBC,SAAU,IAAIJ,IAAEK,MAAM,GAAI,MAG5B,OACIR,EAAoBxG,KAAK,SAAAqE,GAAO,OAC9B,kBAAC4C,EAAA,EAAD,CACEzC,IAAOH,EAAQI,QACfyC,SAAU,CAACvC,WAAWN,EAAQO,UAAUD,WAAWN,EAAQQ,YAC3D+B,KAAQF,GAEN,kBAACvB,EAAA,EAAD,gBACWd,EAAQ8C,OADnB,IAC2B,6BAD3B,cAEc9C,EAAQ+C,UAFtB,IAEiC,6BAFjC,YAGY/C,EAAQgD,SAAS,mCCI5BC,EA1CW,WAGtB,IAAMtD,EAAc3C,qBAAWyC,GACvBG,EAAwCD,EAAxCC,OAAQsD,EAAgCvD,EAAhCuD,YAAaC,EAAmBxD,EAAnBwD,eAE7B5F,qBAAU,WACN4F,MAED,IAIH,IAAIC,EAAe7B,EAAM3B,EAAQsD,EAAa,WAEzCE,EAAavB,OAAS,GACzBuB,EAAarD,SAAQ,SAAAC,GACnBA,EAAQC,eAAiB,sBAK7B,IAAMoC,EAAeC,IAAEC,KAAK,CAC1BC,QAASC,EAAQ,KACjBC,SAAU,IAAIJ,IAAEK,MAAM,GAAI,MAG5B,OACIS,EAAazH,KAAK,SAAAqE,GAAO,OACvB,kBAAC4C,EAAA,EAAD,CACEzC,IAAOH,EAAQI,QACfyC,SAAU,CAACvC,WAAWN,EAAQO,UAAUD,WAAWN,EAAQQ,YAC3D+B,KAAQF,GAEN,kBAACvB,EAAA,EAAD,KACGd,EAAQC,qBCZVoD,EAtBD,SAAAvG,GAMZ,OACE,oCAEE,kBAACwG,EAAA,EAAD,CAAKjD,OANI,EAAE,YAAY,WAMFkD,KALZ,GAKwBC,cAAc,GAC7C,kBAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAEd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,SCSOC,EA9BI,SAAC9G,GAOhB,OACI,kBAACwB,EAAA,EAAD,CAAWuF,MAAM,MACb,kBAACC,EAAA,EAAD,KACI,kBAACvF,EAAA,EAAD,KACI,yBAAKzC,GAAG,kBAAkBuC,UAAU,eAChC,2BAAOvC,GAAG,mBAAmBuC,UAAU,gBAAvC,aACA,kBAACkB,EAAA,EAAD,CAAQzD,GAAG,mBAAmB0D,QAAQ,UAAUuE,QAZ5C,WACpBjH,EAAMU,QAAQC,KAAK,gBAWH,cAEJ,yBAAK3B,GAAG,kBAAkBuC,UAAU,eAChC,2BAAOvC,GAAG,mBAAmBuC,UAAU,gBAAvC,gBACA,kBAACkB,EAAA,EAAD,CAAQzD,GAAG,6BAA6B0D,QAAQ,UAAhD,6BACA,kBAACD,EAAA,EAAD,CAAQzD,GAAG,6BAA6B0D,QAAQ,SAASuE,QAdzD,WAChBjH,EAAMU,QAAQC,KAAK,UAaH,yBAEJ,yBAAK3B,GAAG,kBAAkBuC,UAAU,eAChC,2BAAOvC,GAAG,mBAAmBuC,UAAU,gBAAvC,YACA,kBAACkB,EAAA,EAAD,CAAQzD,GAAG,kBAAkB0D,QAAQ,WAArC,gBCrBTwE,EAFarH,0B,SCEbsH,EAFMtH,0B,iDCFRuH,EAAgB,CACzB,CAAEC,YAAY,WAAYC,cAAc,YACxC,CAAED,YAAY,SAAUC,cAAc,aACtC,CAAED,YAAY,WAAYC,cAAc,eACxC,CAAED,YAAY,WAAYC,cAAc,YACxC,CAAED,YAAY,WAAYC,cAAc,YACxC,CAAED,YAAY,aAAcC,cAAc,cAC1C,CAAED,YAAY,QAASC,cAAc,SACrC,CAAED,YAAY,WAAYC,cAAc,gBAE/BC,EAAgB,CACzB,GAAG,GACH,SAAW,CACP,CAACC,WAAW,oBAAqBC,aAAa,qBAC9C,CAACD,WAAW,UAAWC,aAAa,qBACpC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,iBAAkBC,aAAa,kBAC3C,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,gBAAiBC,aAAa,iBAC1C,CAACD,WAAW,gCAAiCC,aAAa,oCAC1D,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,iBAAkBC,aAAa,kBAC3C,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,YAAaC,aAAa,eACtC,CAACD,WAAW,WAAYC,aAAa,eACrC,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,qBAAsBC,aAAa,sBAC/C,CAACD,WAAW,uBAAwBC,aAAa,wBACjD,CAACD,WAAW,yBAA0BC,aAAa,0BACnD,CAACD,WAAW,uBAAwBC,aAAa,wBACjD,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,QAASC,aAAa,YAClC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,OAAQC,aAAa,SAErC,OAAS,CACL,CAACD,WAAW,SAAUC,aAAa,aACnC,CAACD,WAAW,qBAAsBC,aAAa,4BAC/C,CAACD,WAAW,4BAA6BC,aAAa,mCACtD,CAACD,WAAW,mBAAoBC,aAAa,uBAC7C,CAACD,WAAW,qBAAsBC,aAAa,4BAC/C,CAACD,WAAW,SAAUC,aAAa,YACnC,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,gBAAiBC,aAAa,kBAE9C,SAAW,CACP,CAACD,WAAW,QAASC,aAAa,YAClC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,cAAeC,aAAa,kBACxC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,WAAYC,aAAa,eACrC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,QAASC,aAAa,UAEtC,SAAW,CACP,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,MAAOC,aAAa,OAChC,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,eAAgBC,aAAa,gBACzC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,QAASC,aAAa,YAClC,CAACD,WAAW,QAASC,aAAa,cAClC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,SAAUC,aAAa,WAEvC,SAAW,CACP,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,cAAeC,aAAa,eACxC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,OAAQC,aAAa,QACjC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,OAAQC,aAAa,QACjC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,uBAAwBC,aAAa,wBACjD,CAACD,WAAW,SAAUC,aAAa,UACnC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,OAAQC,aAAa,QACjC,CAACD,WAAW,SAAUC,aAAa,WAEvC,WAAa,CACT,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,UAAWC,aAAa,WACpC,CAACD,WAAW,cAAeC,aAAa,eACxC,CAACD,WAAW,OAAQC,aAAa,QACjC,CAACD,WAAW,aAAcC,aAAa,iBACvC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,aAAcC,aAAa,eAE3C,MAAQ,CACJ,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,gBAAiBC,aAAa,oBAC1C,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,QAASC,aAAa,YAClC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,kBAAmBC,aAAa,uBAEhD,WAAW,CACP,CAACD,WAAW,OAAQC,aAAa,QACjC,CAACD,WAAW,WAAYC,aAAa,YACrC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,cAAeC,aAAa,eACxC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,aAAcC,aAAa,cACvC,CAACD,WAAW,QAASC,aAAa,SAClC,CAACD,WAAW,SAAUC,aAAa,aACnC,CAACD,WAAW,YAAaC,aAAa,aACtC,CAACD,WAAW,OAAQC,aAAa,UClHnCC,EAAK,CACPC,eAAgB,EAChBC,SAAU,CAAC,UAAW,QAAS,SAAU,eAAa,SAAU,UAAW,aAC3EC,cAAe,CAAC,MAAO,MAAO,MAAO,SAAO,MAAO,MAAO,UAC1DC,YAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,WAAY,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAW,YAAa,aAC7HC,gBAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAsdpFC,EAldM,SAACjI,GAAW,IAAD,QAGtBC,EAAiBC,qBAAWJ,GAC1BK,EAA0BF,EAA1BE,OAMF+H,GAN4BjI,EAAlBG,cAEKF,qBAAWN,GACxBU,QAGqBJ,qBAAWgH,IAChCiB,EAAoDD,EAApDC,aAAcC,EAAsCF,EAAtCE,gBAIdC,GAJoDH,EAArBI,iBAGjBpI,qBAAWiH,GACzBkB,YAfoB,EA4BeE,cAAnCC,EA5BoB,EA4BpBA,SAAUC,EA5BU,EA4BVA,aAAcC,EA5BJ,EA4BIA,OA5BJ,EA+B0B5H,mBAAUqH,GA/BpC,mBA+BrBQ,EA/BqB,KA+BAC,EA/BA,KAmCxBC,EAiBAF,EAjBAE,cACAC,EAgBAH,EAhBAG,oBACAC,EAeAJ,EAfAI,UACAC,EAcAL,EAdAK,kBACAC,EAaAN,EAbAM,SACAC,EAYAP,EAZAO,YACAC,EAWAR,EAXAQ,iBACAC,EAUAT,EAVAS,qBACAC,EASAV,EATAU,wBACAC,EAQAX,EARAW,kBACAC,EAOAZ,EAPAY,wBACAC,EAMAb,EANAa,cACAC,EAKAd,EALAc,aACAC,EAIAf,EAJAe,cACAC,EAGAhB,EAHAgB,cACAC,GAEAjB,EAFAiB,eACAC,GACAlB,EADAkB,8BAGEC,GAAW,SAAA1K,GACbwJ,EAAuB,eAChBD,EADe,eAEjBvJ,EAAEgC,OAAOC,KAAQjC,EAAEgC,OAAOE,UAsCnC,OACI,oCACMnB,EAAU,yBAAKoB,UAAS,iBAAYpB,EAAOU,YAAcV,EAAOS,KAAc,KAChF,kBAACiB,EAAA,EAAD,CACIC,SAAU2G,GAbL,WAEbE,EAAoBG,oBAAsB7E,EAAS0E,EAAoBG,qBACvEH,EAAoBkB,8BApBP,SAAEE,GACf,IAAIlF,EAAS,KACb,GAAkB,OAAbkF,IACDlF,EAASZ,EAAS8F,EAAU,IACxBA,EAAUhF,OAAS,GACnB,IAAK,IAAID,EAAI,EAAGA,EAAIiF,EAAUhF,OAAQD,IAClCD,EAASA,EAAQ,IAAKZ,EAAS8F,EAAUjF,IAIrD,OAAQD,EAU4CmF,CAASrB,EAAoBkB,+BAEjFzB,EAAgBO,GAChBN,QASQ,kBAACxG,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAClB,kBAACP,EAAA,EAAKQ,MAAN,kCACA,kBAACR,EAAA,EAAKS,QAAN,CAEIC,KAAK,OACLlB,KAAK,gBACLC,MAAOuH,EACP1H,SAAU2I,MAIlB,kBAACjI,EAAA,EAAKM,MAAN,CAAYC,UAAU,uBAClB,kBAACP,EAAA,EAAKQ,MAAN,gCACA,kBAAC,WAAD,CACI4H,UAAU,EACVC,OAAQxC,EACRyC,WAAW,WACX9I,KAAO,sBACPC,MAAOwH,EACP3H,SAAU2I,MAIlB,kBAACjI,EAAA,EAAKM,MAAN,CAAYC,UAAU,aAClB,kBAACP,EAAA,EAAKQ,MAAN,2BACA,kBAACR,EAAA,EAAKS,QAAN,CACI8H,GAAG,SACH/I,KAAM,YACNC,MAAQyH,EACR5H,SAAW2I,IAEX,iDACA,4BAAQxI,MAAM,mBAAd,sBACA,4BAAQA,MAAM,SAAd,eACA,4BAAQA,MAAM,YAAd,mBACA,4BAAQA,MAAM,UAAd,yBACA,4BAAQA,MAAM,YAAd,cAKM,WAAZyH,EACE,oCAEI,kBAAClH,EAAA,EAAKM,MAAN,CAAYC,UAAU,qBAClB,kBAACP,EAAA,EAAKQ,MAAN,2BACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAM,oBACNC,MAAQ0H,EACR7H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE7B5B,EAAOM,mBAAqB,0BAAMzH,UAAU,gBAAhB,wBAGjC,KAGR,kBAACM,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKQ,MAAN,0BACA,kBAACZ,EAAA,EAAD,CAAK8I,GAAI,IACL,kBAAC1I,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLkI,MAAM,SACNpJ,KAAK,WACLC,MAAM,SACNoJ,QAAsB,WAAZzB,EACV9H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLkI,MAAM,cACNpJ,KAAK,WACLC,MAAM,cACNoJ,QAAsB,gBAAZzB,EACV9H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,OAGjC5B,EAAOO,UAAY,0BAAM1H,UAAU,gBAAhB,uBAEZ,WAAX0H,GAAkC,gBAAXA,EACnB,oCAED,kBAACpH,EAAA,EAAKM,MAAN,CAAYiI,GAAIpD,KACZ,kBAACnF,EAAA,EAAKQ,MAAN,CAAY+H,GAAG,SAASO,QAAM,EAACJ,GAAI,GACnB,WAAXtB,EAAoB,0BAAoB,0BAE7C,kBAACxH,EAAA,EAAD,CAAK8I,GAAI,IACL,kBAAC1I,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLkI,MAAM,mBACNpJ,KAAK,cACLC,MAAM,gBACNoJ,QAAyB,kBAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,cACNnJ,MAAM,cACNoJ,QAAyB,gBAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,aACNnJ,MAAM,aACNoJ,QAAyB,eAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,YACNnJ,MAAM,YACNoJ,QAAyB,cAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,eACNnJ,MAAM,YACNoJ,QAAyB,cAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,UACNnJ,MAAM,UACNoJ,QAAyB,YAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,aACNnJ,MAAM,aACNoJ,QAAyB,eAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,cACNnJ,MAAM,cACNoJ,QAAyB,gBAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,WACNnJ,MAAM,WACNoJ,QAAyB,aAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,SACNnJ,MAAM,SACNoJ,QAAyB,WAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,QACNnJ,MAAM,QACNoJ,QAAyB,UAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE9B,kBAACzI,EAAA,EAAK2I,MAAN,CACIjI,KAAK,QACLlB,KAAK,cACLoJ,MAAM,OACNnJ,MAAM,OACNoJ,QAAyB,SAAfxB,EACV/H,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,OAGjC5B,EAAOQ,aAAe,0BAAM3H,UAAU,gBAAhB,uBAEZ,SAAd2H,EACG,oCAEI,kBAACrH,EAAA,EAAKM,MAAN,CAAYC,UAAU,oBAClB,kBAACP,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAM,mBACNC,MAAQ6H,EACR3G,YAAc,kBACdrB,SAAW2I,GACXO,IAAK7B,EAAS,CAAE8B,UAAU,MAE7B5B,EAAOS,kBAAoB,0BAAM5H,UAAU,gBAAhB,wBAGtC,MACG,KAEI,gBAAX0H,EACE,oCACI,kBAACpH,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKQ,MAAN,0BAA2C,6BAC3C,kBAAC,aAAD,CAAYhB,KAAK,OAAQuF,IAAI,WAAWgE,KAAK,QAAQC,YAAY,eAAeC,OAAO,UAAWC,cAAc,EAAMC,cAnP3H,WACfhJ,QAAQC,IAAI,2BAqPE,KAGN,kBAACJ,EAAA,EAAKM,MAAN,CAAYC,UAAU,wBAClB,kBAACP,EAAA,EAAKQ,MAAN,8BACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAK,uBACLC,MAAO8H,EACPjI,SAAU2I,GACVO,IAAK7B,EAAS,CAAE8B,UAAU,MAE7B5B,EAAOU,sBAAwB,0BAAM7H,UAAU,gBAAhB,uBAGpC,kBAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,2BAClB,kBAACP,EAAA,EAAKQ,MAAN,mCACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLlB,KAAK,0BACLC,MAAO+H,EACPlI,SAAU2I,GACVO,IAAK7B,EAAS,CAAE8B,UAAU,EAAMW,UAAW,MAEL,cAAzC,UAAAvC,EAAOW,+BAAP,eAAgC9G,OAAuB,0BAAMhB,UAAU,gBAAhB,sBACd,eAAzC,UAAAmH,EAAOW,+BAAP,eAAgC9G,OAAwB,0BAAMhB,UAAU,gBAAhB,sBAE7D,kBAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,qBAClB,kBAACP,EAAA,EAAK2I,MAAN,CACIjI,KAAK,WACLlB,KAAK,oBACLoJ,MAAM,6BACNC,QAAUpB,EACVnI,SA5SE,SAAA/B,GAClBwJ,EAAuB,eAChBD,EADe,eAEjBvJ,EAAEgC,OAAOC,KAAQjC,EAAEgC,OAAOsJ,eA4StBpB,EACI,oCAEG,kBAACzH,EAAA,EAAKM,MAAN,CAAYC,UAAU,2BAClB,kBAACP,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLlB,KAAK,0BACLC,MAAOiI,EACPpI,SAAU2I,GACVO,IAAK7B,EAAS,CAAE8B,UAAU,EAAMW,UAAW,MAEL,cAAzC,UAAAvC,EAAOa,+BAAP,eAAgChH,OAAuB,0BAAMhB,UAAU,gBAAhB,sBACd,eAAzC,UAAAmH,EAAOa,+BAAP,eAAgChH,OAAwB,0BAAMhB,UAAU,gBAAhB,uBAE5D,KAGT,kBAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAClB,kBAACP,EAAA,EAAKQ,MAAN,kBACA,kBAACR,EAAA,EAAKS,QAAN,CACI8H,GAAG,SACH/I,KAAM,gBACNC,MAAQkI,EACRrI,SAAW2I,IAEX,wDACC1C,EAAevI,KAAI,SAACO,EAAGiE,GACpB,OAAO,4BAAQA,IAAKA,EAAK/B,MAAOlC,EAAEiI,aAAcjI,EAAEkI,oBAK9D,kBAACzF,EAAA,EAAKM,MAAN,CAAYC,UAAU,gBAClB,kBAACP,EAAA,EAAKQ,MAAN,iBACA,kBAACR,EAAA,EAAKS,QAAN,CACI8H,GAAG,SACH/I,KAAM,eACNC,MAAQmI,EACRtI,SAAW2I,IAEX,uDACCvC,EAAciC,GAAe3K,KAAI,SAACO,EAAGiE,GAClC,OAAO,4BAAQA,IAAKA,EAAK/B,MAAOlC,EAAEoI,YAAapI,EAAEqI,mBAK7D,kBAAC5F,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAClB,kBAACP,EAAA,EAAKQ,MAAN,kBACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAK,gBACLC,MAAOoI,EACPvI,SAAU2I,MAIlB,kBAACjI,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAClB,kBAACP,EAAA,EAAKQ,MAAN,sBACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAK,gBACLC,MAAOqI,EACPxI,SAAU2I,GACVO,IAAK7B,EAAS,CAAE8B,UAAU,MAE7B5B,EAAOiB,eAAiB,0BAAMpI,UAAU,gBAAhB,uBAG7B,kBAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,kBAClB,kBAACP,EAAA,EAAKQ,MAAN,oBACA,kBAACR,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLlB,KAAK,iBACLC,MAAOsI,GACPzI,SAAU2I,GACVO,IAAK7B,EAAS,CAAE8B,UAAU,MAE7B5B,EAAOkB,gBAAkB,0BAAMrI,UAAU,gBAAhB,uBAG9B,kBAACM,EAAA,EAAKM,MAAN,CAAYC,UAAU,iCAClB,kBAACP,EAAA,EAAKQ,MAAN,0CACA,kBAAC,WAAD,CACI6I,QAAY,IAAIC,KAChBC,aAAgB,EAChBnB,UAAU,EACVC,OAAQxC,EACRyC,WAAW,WACX7I,MAAOuI,GACPxI,KAAM,gCACNF,SAAW2I,GACXuB,cAAc,WACdC,eAAe,KAGvB,kBAAC7I,EAAA,EAAD,CAAQF,KAAK,UAAb,cC3cDgJ,EA3BC,WAGZ,IAAMC,EAAgBtL,qBAAWiH,GACzBsE,EAAsBD,EAAtBC,MAAOpD,EAAemD,EAAfnD,WAMf,OACI,kBAACqD,EAAA,EAAD,CAAOC,KAAMF,EAAOG,OAAQvD,GACxB,kBAACqD,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACzB,kBAACJ,EAAA,EAAMK,MAAP,qCAEA,kBAACL,EAAA,EAAMM,KAAP,KACI,kBAAC,EAAD,OAEJ,kBAACN,EAAA,EAAMO,OAAP,KACI,kBAACxJ,EAAA,EAAD,CAAQC,QAAQ,YAAYuE,QAASoB,GAArC,Y,QC6CD6D,EA/DC,SAAC,GAAkB,IAAhB1D,EAAe,EAAfA,SAIT2D,EADqBjM,qBAAWgH,GAChCiF,mBAwBFC,EAAgB,CACpBxB,KAAM,QACNyB,QAAS,UAETC,eAAe,EACfC,SA3BkB,SAACC,EAAKC,GACxB,GAAKA,EAAa,CAChB,IAAIxH,EAAM,GACV,IAAI,IAAIyH,KAAQF,EAAI,CAElB,GAAa,wBAATE,EACFF,EAAIE,GAAQ,IAAIvB,KAAKqB,EAAIE,SACpB,GAAa,kCAATA,EAA0C,CACnD,IAAIzH,EAAM,GACN0H,EAAMH,EAAIE,GACdC,EAAMA,EAAIC,MAAM,KAChB,IAAK,IAAI9H,EAAI,EAAGA,EAAI6H,EAAI5H,OAAQD,IAC9BG,EAAItE,KAAK,IAAIwK,KAAKwB,EAAI7H,KAExB0H,EAAIE,GAAQzH,EAEdA,EAAIyH,EAAKG,eAAeL,EAAIE,GAE9BP,EAAmBlH,MAYvB,OACI,kBAAC,iBAAD,CACI6H,SAAS,gBACTC,KAAOvE,EACPwE,UAAYZ,GAEZ,kBAAC,oBAAD,CAAmBa,MAAM,MAAMC,UAAU,iBAAzC,aACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,uBAAzC,yBACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,cAAzC,WACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,aAAzC,SACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,YAAzC,QACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,qBAAzC,UACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,eAAzC,WACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,oBAAzC,gBACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,wBAAzC,aACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,2BAAzC,YACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,2BAAzC,iBACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,iBAAzC,aACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,gBAAzC,YACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,iBAAzC,aACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,iBAAzC,gBACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,kBAAzC,cACA,kBAAC,oBAAD,CAAmBD,MAAM,MAAMC,UAAU,iCAAzC,mCCxBKC,EA/BO,WAGpB,IAAMjF,EAAuBhI,qBAAWgH,GAChCkG,EAAuElF,EAAvEkF,cAAeC,EAAwDnF,EAAxDmF,iBAIfC,GAJuEpF,EAAtCE,gBAAsCF,EAArBI,iBAGpCpI,qBAAWiH,GACzBmG,WAER7M,qBAAU,WACN4M,MAGD,IAMH,OACI,kBAAC7L,EAAA,EAAD,KACE,2DACA,kBAACiB,EAAA,EAAD,CAAQwE,QAASqG,GAAjB,WACA,kBAAC7K,EAAA,EAAD,CAAQwE,QARK,WACjBqG,MAOI,SACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS9E,SAAU4E,MC9BZ,WAACG,EAAOC,GACnB,OAAQA,EAAOjL,MACX,ICGsB,iBDFlB,MAAM,CACFpC,OAAQqN,EAAOC,SAEvB,ICAsB,iBDClB,MAAM,CACFtN,OAAQ,MAEhB,QACI,OAAOoN,IEgCJG,EAvCK,SAAA1N,GAEhB,IAFyB,EAOC2N,qBAAWC,EALhB,CACjBzN,OAAQ,OAHa,mBAOlBoN,EAPkB,KAOXM,EAPW,KA2BzB,OACI,kBAAC,EAAcC,SAAf,CACIxM,MAAO,CACHnB,OAAQoN,EAAMpN,OACdC,cArBU,SAACQ,EAAKC,GACxBgN,EAAS,CACLtL,KDXkB,iBCYlBkL,QAAS,CACL7M,MACAC,eAKRkN,YAAW,WACPF,EAAS,CACLtL,KDpBc,qBCsBnB,QAUEvC,EAAMgO,W,yBClCJ,YAACT,EAAOC,GACnB,OAAQA,EAAOjL,MACX,IFLqB,gBEMrB,IFTwB,mBEWpB,sBACOgL,EADP,CAEIhN,aAAa,EACbD,QAAS,KACT2N,UAAU,IAElB,IFfuB,kBEgBnB,OAAO,eACAV,EADP,CAEIhN,aAAa,EAEbU,QAASuM,EAAOC,QAChBQ,UAAU,IAElB,IFrBmB,cEsBnB,IFzBsB,iBE0BtB,IFtBqB,gBEwBjB,OADAC,aAAaC,WAAW,SACxB,eACOZ,EADP,CAEIa,MAAO,KACPnN,QAAS,KACTV,YAAa,KACbD,QAASkN,EAAOC,QAChBQ,UAAU,IAElB,QACI,OAAOV,ICkEJc,GA9FG,SAAArO,GAEd,IAFuB,EAWG2N,qBAAWW,GAThB,CAEjB/N,YAAa,KACbU,QAAS,KACTX,QAAS,KACT2N,UAAU,IAPS,mBAWhBV,EAXgB,KAWTM,EAXS,KAcjBU,EAAkB,wCAAG,sBAAAC,EAAA,sDAOvB,IAQIX,EAAS,CACLtL,KHtCe,kBGwCfkL,QATS,CACT1M,SAAU,QACVC,SAAU,SAShB,MAAOyN,GACLzM,QAAQC,IAAIwM,GACZZ,EAAS,CACLtL,KH3CW,gBGoBI,2CAAH,qDA6BlB/B,EAAa,wCAAG,WAAMkO,GAAN,eAAAF,EAAA,sDAClB,IAGIX,EAAS,CACLtL,KHvDa,kBG4DjBgM,IAEF,MAAOE,GACLzM,QAAQC,IAAIwM,EAAME,SAAS5B,KAAKnM,KAC1BT,EAAS,CACXS,IAAK6N,EAAME,SAAS5B,KAAKnM,IACzBC,UAAW,gBAGfgN,EAAS,CACLtL,KHrEW,cGsEXkL,QAAStN,IArBC,2CAAH,sDAiCnB,OACI,kBAAC,EAAY2N,SAAb,CACIxM,MAAO,CACH8M,MAAOb,EAAMa,MACb7N,YAAagN,EAAMhN,YACnBU,QAASsM,EAAMtM,QACfX,QAASiN,EAAMjN,QACf2N,SAAUV,EAAMU,SAChBzN,gBACA+N,qBACAK,aAhBS,WACjBf,EAAS,CACLtL,KH7EiB,qBG8FhBvC,EAAMgO,W,UChGJa,G,QAJMC,EAAMC,OAAO,CAC9BC,QAASC,yD,SCGE,YAAC1B,EAAOC,GACnB,OAAQA,EAAOjL,MACX,ILcyB,oBKbrB,sBACOgL,EADP,CAEIH,cAAeI,EAAOC,UAE9B,ILUwB,mBKTpB,sBACOF,EADP,CAEIH,cAAc,GAAD,oBAAMG,EAAMH,eAAZ,CAA2BI,EAAOC,YAEvD,ILM2B,sBKLvB,sBACOF,EADP,CAEIpF,aAAeqF,EAAOC,UAE9B,QACI,OAAOF,IC2FJ2B,GAxGW,SAAAlP,GAEtB,IAAMmP,EAAe,CACjBhH,aAAc,CACVU,cAAe,GACfC,oBAAqB,IAAIqC,KACzBpC,UAAW,GACXC,kBAAkB,GAClBC,SAAU,GACVC,YAAa,GACbC,iBAAiB,GACjBC,qBAAqB,GACrBC,wBAAwB,GACxBC,mBAAkB,EAClBC,wBAAwB,GACxBC,cAAe,GACfC,aAAa,GACbC,cAAc,GACdC,cAAc,GACdC,eAAe,GACfC,8BAA+B,MAEnCuD,cAAe,IAtBY,EA0BLO,qBAAWyB,GAAqBD,GA1B3B,mBA0BxB5B,EA1BwB,KA0BjBM,EA1BiB,KA8BzBR,EAAgB,wCAAG,4BAAAmB,EAAA,+EAGOK,GAAaQ,IAAI,kBAHxB,OAGXC,EAHW,OAMjBzB,EAAS,CACLtL,KN1BiB,oBM2BjBkL,QAAS6B,EAAUvC,OARN,gDAYjB/K,QAAQC,IAAR,MAZiB,yDAAH,qDAiBhBmG,EAAe,wCAAG,WAAQD,GAAR,eAAAqG,EAAA,6DACpBrG,EAAaoH,OAAS,EADF,kBAIQV,GAAaW,KAAK,iBAAkBrH,GAJ5C,OAIVmH,EAJU,OAMhBzB,EAAS,CACLtL,KN1CgB,mBM2ChBkL,QAAS6B,EAAUvC,OARP,gDAYhB/K,QAAQC,IAAR,MAZgB,yDAAH,sDAyBfqG,EAAgB,wCAAG,WAAQH,GAAR,eAAAqG,EAAA,+EAGOK,GAAaW,KAAK,iBAAkBrH,GAH3C,OAGXmH,EAHW,OAMjBzB,EAAS,CACLtL,KNnEgB,mBMoEhBkL,QAAS6B,EAAUvC,OARN,gDAYjB/K,QAAQC,IAAR,MAZiB,yDAAH,sDAgBtB,OACI,kBAAC,EAAoB6L,SAArB,CACIxM,MAAO,CACH6G,aAAcoF,EAAMpF,aACpBiF,cAAeG,EAAMH,cACrBC,mBACAjF,kBACA+D,mBA/Be,SAAEsD,GACzB5B,EAAS,CACLtL,KNrDuB,sBMsDvBkL,QAASgC,KA6BLnH,qBAGHtI,EAAMgO,WC1GJ0B,GAFW7P,0BCGX,YAAC0N,EAAOC,GACnB,OAAQA,EAAOjL,MACX,IRoBuB,kBQnBnB,sBACOgL,EADP,CAEIoC,YAAanC,EAAOC,UAE5B,IRgBsB,iBQflB,sBACOF,EADP,CAEIoC,YAAY,GAAD,oBAAMpC,EAAMoC,aAAZ,CAAyBnC,EAAOC,YAEnD,QACI,OAAOF,ICqEJqC,GA7ES,SAAA5P,GAEpB,IAAMmP,EAAe,CACjBU,WAAY,CACRhH,cAAe,GACfC,oBAAqB,IAAIqC,KACzBpC,UAAW,GACXC,kBAAkB,GAClBC,SAAU,GACVC,YAAa,GACbC,iBAAiB,GACjBC,qBAAqB,GACrBC,wBAAwB,GACxBC,mBAAkB,EAClBC,wBAAwB,GACxBC,cAAe,GACfC,aAAa,GACbC,cAAc,GACdC,cAAc,GACdC,eAAe,GACfC,8BAA+B,MAEnC8F,YAAa,IAtBY,EA0BHhC,qBAAWmC,GAAmBX,GA1B3B,mBA0BtB5B,EA1BsB,KA0BfM,EA1Be,KA8BvBkC,EAAc,wCAAG,4BAAAvB,EAAA,+EAGSK,GAAaQ,IAAI,qBAH1B,OAGTC,EAHS,OAIftN,QAAQC,IAAIqN,GAEZzB,EAAS,CACLtL,KTpBe,kBSqBfkL,QAAS6B,EAAUvC,OARR,gDAYf/K,QAAQC,IAAR,MAZe,yDAAH,qDAiBd+N,EAAa,wCAAG,WAAQ7H,GAAR,eAAAqG,EAAA,6DAClBrG,EAAaoH,OAAS,EADJ,kBAIUV,GAAaW,KAAK,iBAAkBrH,GAJ9C,OAIRmH,EAJQ,OAMdzB,EAAS,CACLtL,KTpCc,iBSqCdkL,QAAS6B,EAAUvC,OART,gDAYd/K,QAAQC,IAAR,MAZc,yDAAH,sDAgBnB,OACI,kBAAC,GAAkB6L,SAAnB,CACIxM,MAAO,CACHuO,WAAYtC,EAAMsC,WAClBF,YAAapC,EAAMoC,YACnBI,iBACAC,kBAGHhQ,EAAMgO,WC5EJ,YAACT,EAAOC,GACnB,OAAQA,EAAOjL,MACX,IVSkB,aURd,sBACOgL,EADP,CAEIzK,OAAQ0K,EAAOC,UAEvB,IVK+B,0BUJ3B,sBACOF,EADP,CAEIpI,mBAAoBqI,EAAOC,UAEnC,IVCwB,mBUApB,sBACOF,EADP,CAEInH,YAAaoH,EAAOC,UAE5B,QACI,OAAOF,ICsEJ0C,GAnFE,SAAAjQ,GAEb,IAFsB,EASI2N,qBAAWuC,GAPhB,CACjBpN,OAAQ,GACRqC,mBAAoB,GACpBiB,YAAa,KALK,mBASfmH,EATe,KASRM,EATQ,KAYhB9K,EAAS,wCAAG,8BAAAyL,EAAA,4DAGC,QACT2B,EAAUxK,OAAQ,eAJV,kBAOUyK,IAAOD,GAPjB,OAONE,EAPM,OASVxC,EAAS,CACLtL,KXhBU,aWiBVkL,QAAS4C,IAXH,gDAeVrO,QAAQC,IAAR,MAfU,yDAAH,qDAmBTmD,EAAqB,wCAAG,8BAAAoJ,EAAA,4DAEX,gCACT2B,EAAUxK,OAAQ,uCAHE,kBAMFyK,IAAOD,GANL,OAMlBE,EANkB,OAQtBxC,EAAS,CACLtL,KXjCuB,0BWkCvBkL,QAAS4C,IAVS,gDActBrO,QAAQC,IAAR,MAdsB,yDAAH,qDAkBrBoE,EAAc,wCAAG,8BAAAmI,EAAA,4DAEJ,2CACT2B,EAAUxK,OAAQ,kDAHL,kBAMKyK,IAAOD,GANZ,OAMXE,EANW,OAQfxC,EAAS,CACLtL,KXlDgB,mBWmDhBkL,QAAS4C,IAVE,gDAcfrO,QAAQC,IAAR,MAde,yDAAH,qDAkBpB,OACI,kBAAC,EAAW6L,SAAZ,CACIxM,MAAO,CACHwB,OAAQyK,EAAMzK,OACdqC,mBAAoBoI,EAAMpI,mBAC1BiB,YAAamH,EAAMnH,YACnBrD,YACAqC,wBACAiB,mBAGHrG,EAAMgO,WCpFJ,YAACT,EAAOC,GACnB,OAAQA,EAAOjL,MACX,IZMkB,aYLlB,IZMmB,cYLf,MAAM,CACFkJ,OAAQ8B,EAAM9B,OAEtB,QACI,OAAO8B,ICkCJ+C,GAtCI,SAAAtQ,GAGf,IAHwB,EAQE2N,qBAAW4C,GALhB,CACjB9E,OAAO,IAJa,mBAQjB8B,EARiB,KAQVM,EARU,KAuBxB,OACI,kBAAC,EAAaC,SAAd,CACIxM,MAAO,CAEHmK,MAAO8B,EAAM9B,MAEb6B,UAlBM,WACdO,EAAS,CACLtL,KbTc,gBa0BV8F,WAbO,WACfwF,EAAS,CACLtL,Kbde,mBa4BdvC,EAAMgO,WCFJwC,OAzBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5Q,IACjC,kBAAC,IAAD,CAAO0Q,OAAK,EAACC,KAAK,OAAOC,UAAWpK,IACpC,kBAAC,IAAD,CAAOkK,OAAK,EAACC,KAAK,eAAeC,UAAW7J,IAC5C,kBAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,aAAaC,UAAWxD,aChB1CyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlD,GACLzM,QAAQyM,MAAMA,EAAMmD,c","file":"static/js/main.1877a359.chunk.js","sourcesContent":["var map = {\n\t\"./PUESTOS DE SALUD AQP_modificado_06022020.csv\": 206,\n\t\"./registro_participantes_inmune.csv\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 103;","module.exports = __webpack_public_path__ + \"static/media/icon-participants-inmune.49b0a5d6.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-health-posts.42f5b1bf.png\";","var map = {\n\t\"./C1ASA.csv\": 203,\n\t\"./test.csv\": 204,\n\t\"./test2.csv\": 205\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","module.exports = __webpack_public_path__ + \"static/media/C1ASA.ed04870c.csv\";","module.exports = __webpack_public_path__ + \"static/media/test.a9988830.csv\";","module.exports = __webpack_public_path__ + \"static/media/test2.8453f7b9.csv\";","module.exports = __webpack_public_path__ + \"static/media/PUESTOS DE SALUD AQP_modificado_06022020.5004b8fc.csv\";","module.exports = __webpack_public_path__ + \"static/media/registro_participantes_inmune.23670560.csv\";","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import React, {useState, useContext, useEffect} from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\n\nimport authContext from \"../../context/auth/authContext\";\nimport alertaContext from '../../context/alertas/alertaContext';\n\nconst Login = (props) => {\n        \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    const authsContext = useContext(authContext);\n    const { mensaje, autenticado, IniciarSesion } = authsContext;\n\n    //En caso de que el passwors o usuario no exista\n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/actividades');\n        }\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n    \n    //State para iniciar sesión\n    const [usuario, guardarUsuario] = useState({\n        username: '',\n        password: ''\n    });\n\n    //Extraer de usuario\n    const { username, password } = usuario;\n\n    const onChange = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(\"se presiono boton\");\n        //Validar que no haya campos vacios\n        if (username.trim() === '' || password.trim() === '') {\n            MostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n\n        //Pasarlo al action\n        IniciarSesion({ username, password });\n    }\n\n    return (\n        <>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Container className=\"p-4\">\n                <Col md={{ span: 4, offset: 4 }} className=\"text-center\">\n                    <h3>Vigilancia Integrada</h3>\n                    <Form\n                        onSubmit={onSubmit}\n                    >\n                        <Form.Group controlId=\"username\">\n                            <Form.Label ></Form.Label>\n                            <Form.Control \n                                type='text'\n                                name='username'\n                                placeholder='Usuario'\n                                value={username}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\">\n                            {/*<Form.Label ></Form.Label>*/}\n                            <Form.Control \n                                type='password'\n                                name='password'\n                                placeholder='Contraseña'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type='submit'>\n                            Entrar\n                        </Button>\n                    </Form>\n\n                    {/*<Link to={'/nueva-cuenta'} className='enlace-cuenta'>\n                        Obtener Cuenta\n                    </Link>*/}\n                </Col>\n            </Container >\n        </>\n    );\n}\n\nexport default Login;","import { createContext } from 'react';\n\nconst CsvContext = createContext();\n\nexport default CsvContext;","import React, { useContext, useEffect } from \"react\";\nimport { Popup, CircleMarker } from \"react-leaflet\";\n\nimport CsvContext from \"../../context/csv/CsvContext\";\n\nconst CircleHouses = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, CsvHouses } = CsvsContext;\n    useEffect(() => {\n        CsvHouses();\n        // eslint-disable-next-line\n    }, []); \n\n    let total_ca = houses;\n    //Agregando texto popup a total_ca\n    total_ca.forEach(element => {\n      element.inspectionText = \"Ult. visita : --\" ;\n    });                                                                                                                                                          \n  \n    return (\n        total_ca.map( element => (\n          <CircleMarker \n            key = {element.UNICODE}\n            center={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            fillColor = {element.color}\n            radius = {6}\n            //// = {true}\n            color = \"black\"\n            weight = {0.2}\n            fillOpacity = {1}\n          >\n              <Popup>\n                {element.inspectionText}\n              </Popup>\n          </CircleMarker>\n        ))\n    );\n}\n\nexport default CircleHouses;","import * as d3 from 'd3';\n\n//Funcion para obtener la fecha en el formato yyyy-mm-dd\nexport const DateFull = ( date ) => {\n    const year = date.getFullYear();\n    let month = date.getMonth()+1;\n    let day = date.getDate();\n    if(month < 10){\n        month = \"0\"+ month;\n    }\n    if ( day < 10) {\n        day = \"0\"+day;\n    }\n    return(`${year}-${month}-${day}`);\n}\n\n//Funcion para realizar un innerjoin con dos arreglos y sus respectivos nombres de columnas a comparar\nexport const InnerJoin = (array1, array2, nameCol1, nameCol2 ) => {\n    let result = [];\n    for (let i = 0; i < array1.length; i++) {\n        for (let j = 0; j < array2.length; j++) {\n            if (array1[i][nameCol1] === array2[j][nameCol2]) {\n                result.push(array2[j]);\n            }            \n        }\n        \n    }\n    \n    return result;\n}\n\n//Funcion Merge\nexport const Merge = (data0, data1, field) => {\n    var result = [];\n    for (var i = 0; i < data0.length; i++) {\n    for (var j = 0; j < data1.length; j++) {\n        if (data0[i][field] == data1[j][field]) {\n        var obj = {};\n        for (var key in data0[i])\n            obj[key] = data0[i][key];\n        for (var key in data1[j]) {\n            if (key != field)\n            obj[key] = data1[j][key];\n        }\n        result.push(obj);\n        break;\n        }\n    }\n    }\n    return result;\n}\n\n//Funcion promedio\nexport const Mean = (data, select) => {\n    var n = data.length;\n    var total = 0;\n    for (var i=0; i < data.length; i++) {\n        if (isNaN(data[i][select]))\n        n = n - 1;\n        else\n        total = total + parseFloat(data[i][select]);\n    }\n    return total/n;\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport { Merge } from \"../../Functions\";\n\nconst MarkerParticipantsInmune = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, participantsInmune, CsvParticipantsInmune } = CsvsContext;\n    \n    useEffect(() => {\n        CsvParticipantsInmune();\n        // eslint-disable-next-line\n    }, []); \n    \n    //AGREGANDO AGENTES\n    //Eliminar al participante que no tiene unicode de vivienda\n    let participants_inmune = participantsInmune.filter(element => element.UNICODE !== \"\");\n    //Realizando merge con total_ca\n    participants_inmune = Merge(houses, participants_inmune, \"UNICODE\");\n    //Agregando texto de visita a agente\n    if ( participants_inmune.length > 0 ) {\n      participants_inmune.forEach(element => {\n        element.inspectionText = \"Ult. visita : --\" ;\n      });\n    }\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../icons/icon-participants-inmune.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n        participants_inmune.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                Nombre: {element.NOMBRE} <br />\n                Direccion: {element.DIRECCION} <br/>\n                Celular: {element.TELEFONO}<br/>\n              </Popup>\n          </Marker>\n        ))\n    );\n}\n\nexport default MarkerParticipantsInmune;","import React, { useContext, useEffect } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport { Merge } from \"../../Functions\";\n\nconst MarkerHealthPosts = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, healthPosts, CsvHealthPosts } = CsvsContext;\n    \n    useEffect(() => {\n        CsvHealthPosts();\n        // eslint-disable-next-line\n    }, []); \n    \n    //AGREGANDO PUESTOS DE SALUD\n    //Obteniendo los puestos de salud que corresponden a este catchment-area\n    let health_posts = Merge(houses, healthPosts, \"UNICODE\");\n    //Agregando texto de PUESTOS DE SALUD\n    if ( health_posts.length > 0 ) {\n      health_posts.forEach(element => {\n        element.inspectionText = \"Ult. visita : --\" ;\n      });\n    }\n\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../icons/icon-health-posts.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n        health_posts.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                {element.inspectionText}\n              </Popup>\n          </Marker>\n        ))\n    );\n}\n\nexport default MarkerHealthPosts;","import React from \"react\";\nimport { Map, TileLayer, Popup, CircleMarker } from \"react-leaflet\";\n\nimport CircleHouses from \"./CircleHouses\";\nimport MarkerParticipantsInmune from \"./MarkerParticipantsInmune\";\nimport MarkerHealthPosts from \"./MarkerHealthPosts\";\n//import Logic from \"../../Logic\";\n\nconst MyMap = props => {\n\n  //Variales del mapa\n  let center = [-16.4040494,-71.574117];\n  const zoom = 10;\n    \n  return (\n    <>\n      \n      <Map center={center} zoom={zoom} preferCanvas={true}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <CircleHouses/>\n        <MarkerParticipantsInmune/>\n        <MarkerHealthPosts/>\n      </Map>\n    </>\n  );\n}\n\nexport default MyMap;\n\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nconst Activities = (props) => {\n    const GoDenunciations = () => {\n        props.history.push('/denuncias');\n    }\n    const GoInsActive = () => {\n        props.history.push('/map');\n    }\n    return (\n        <Container fluid=\"md\">\n            <Row>\n                <Col>\n                    <div id=\"wrap-button-den\" className=\"wrap-button\">\n                        <label id='title-button-den' className='title-button'>Denuncias</label>\n                        <Button id=\"btn_actDenuncias\" variant=\"primary\" onClick={GoDenunciations}>Denuncias</Button>\n                    </div>\n                    <div id=\"wrap-button-ins\" className=\"wrap-button\">\n                        <label id='title-button-ins' className='title-button'>Inspecciones</label>\n                        <Button id=\"btn_actInspeccionesPasivas\" variant=\"danger\">Inspecciones por Denuncia</Button>\n                        <Button id=\"btn_actInspeccionesActivas\" variant=\"danger\" onClick={GoInsActive}>Inspecciones Activas</Button>\n                    </div>\n                    <div id=\"wrap-button-roc\" className=\"wrap-button\">\n                        <label id='title-button-roc' className='title-button'>Rociados</label>\n                        <Button id=\"btn_actRociados\" variant=\"success\">Rociado</Button>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Activities;","import { createContext } from 'react';\n\nconst DenunciationContext = createContext();\n\nexport default DenunciationContext;","import { createContext } from 'react';\n\nconst ModalContext = createContext();\n\nexport default ModalContext;","export const provincias_aqp =[\n    { provinciaId:\"Arequipa\", provinciaName:\"Arequipa\"},\n    { provinciaId:\"Camana\", provinciaName:\"Camaná\"},\n    { provinciaId:\"Caraveli\", provinciaName:\"Caravelí\"},\n    { provinciaId:\"Castilla\", provinciaName:\"Castilla\"},\n    { provinciaId:\"Caylloma\", provinciaName:\"Caylloma\"},\n    { provinciaId:\"Condesuyos\", provinciaName:\"Condesuyos\"},\n    { provinciaId:\"Islay\", provinciaName:\"Islay\"},\n    { provinciaId:\"La Union\", provinciaName:\"La Unión\"}\n];\nexport const distritos_aqp = {\n    \"\":[],\n    \"Arequipa\":[\n        {distritoId:\"Alto Selva Alegre\", distritoName:\"Alto Selva Alegre\"},\n        {distritoId:\"Cercado\", distritoName:\"Arequipa(Cercado)\"},\n        {distritoId:\"Cayma\", distritoName:\"Cayma\"},\n        {distritoId:\"Cerro Colorado\", distritoName:\"Cerro Colorado\"},\n        {distritoId:\"Characato\", distritoName:\"Characato\"},\n        {distritoId:\"Chiguata\", distritoName:\"Chiguata\"},\n        {distritoId:\"Jacobo Hunter\", distritoName:\"Jacobo Hunter\"},\n        {distritoId:\"Jose Luis Bustamante y Rivero\", distritoName:\"José Luis Bustamante y Rivero\"},\n        {distritoId:\"La Joya\", distritoName:\"La Joya\"},\n        {distritoId:\"Mariano Melgar\", distritoName:\"Mariano Melgar\"},\n        {distritoId:\"Miraflores\", distritoName:\"Miraflores\"},\n        {distritoId:\"Mollebaya\", distritoName:\"Mollebaya\"},\n        {distritoId:\"Paucarpata\", distritoName:\"Paucarpata\"},\n        {distritoId:\"Pocsi\", distritoName:\"Pocsi\"},\n        {distritoId:\"Polobaya\", distritoName:\"Polobaya\"},\n        {distritoId:\"Quequenha\", distritoName:\"Quequeña\"},\n        {distritoId:\"Sabandia\", distritoName:\"Sabandía\"},\n        {distritoId:\"Sachaca\", distritoName:\"Sachaca\"},\n        {distritoId:\"San Juan de Siguas\", distritoName:\"San Juan de Siguas\"},\n        {distritoId:\"San Juan de Tarucani\", distritoName:\"San Juan de Tarucani\"},\n        {distritoId:\"Santa Isabel de Siguas\", distritoName:\"Santa Isabel de Siguas\"},\n        {distritoId:\"Santa Rita de Siguas\", distritoName:\"Santa Rita de Siguas\"},\n        {distritoId:\"Socabaya\", distritoName:\"Socabaya\"},\n        {distritoId:\"Tiabaya\", distritoName:\"Tiabaya\"},\n        {distritoId:\"Uchumayo\", distritoName:\"Uchumayo\"},\n        {distritoId:\"Vitor\", distritoName:\"Vítor\"},\n        {distritoId:\"Yanahuara\", distritoName:\"Yanahuara\"},\n        {distritoId:\"Yarabamba\", distritoName:\"Yarabamba\"},\n        {distritoId:\"Yura\", distritoName:\"Yura\"}\n    ],\n    \"Camana\":[\n        {distritoId:\"Camana\", distritoName:\"Camaná\"},\n        {distritoId:\"Jose Maria Quimper\", distritoName:\"José María Quimper\"},\n        {distritoId:\"Mariano Nicolas Valcarcel\", distritoName:\"Mariano Nicolás Valcárcel\"},\n        {distritoId:\"Mariscal Caceres\", distritoName:\"Mariscal Cáceres\"},\n        {distritoId:\"Nicolas de Pierola\", distritoName:\"Nicolás de Piérola\"},\n        {distritoId:\"Oconha\", distritoName:\"Ocoña\"},\n        {distritoId:\"Quilca\", distritoName:\"Quilca\"},\n        {distritoId:\"Samuel Pastor\", distritoName:\"Samuel Pastor\"}\n    ],\n    \"Caraveli\":[\n        {distritoId:\"Acari\", distritoName:\"Acarí\"},\n        {distritoId:\"Atico\", distritoName:\"Atico\"},\n        {distritoId:\"Atiquipa\", distritoName:\"Atiquipa\"},\n        {distritoId:\"Bella Union\", distritoName:\"Bella Unión\"},\n        {distritoId:\"Cahuacho\", distritoName:\"Cahuacho\"},\n        {distritoId:\"Caraveli\", distritoName:\"Caravelí\"},\n        {distritoId:\"Chala\", distritoName:\"Chala\"},\n        {distritoId:\"Chaparra\", distritoName:\"Chaparra\"},\n        {distritoId:\"Huanuhuanu\", distritoName:\"Huanuhuanu\"},\n        {distritoId:\"Jaqui\", distritoName:\"Jaqui\"},\n        {distritoId:\"Lomas\", distritoName:\"Lomas\"},\n        {distritoId:\"Quicacha\", distritoName:\"Quicacha\"},\n        {distritoId:\"Yauca\", distritoName:\"Yauca\"},\n    ],\n    \"Castilla\":[\n        {distritoId:\"Andahua\", distritoName:\"Andahua\"},\n        {distritoId:\"Aplao\", distritoName:\"Aplao\"},\n        {distritoId:\"Ayo\", distritoName:\"Ayo\"},\n        {distritoId:\"Chachas\", distritoName:\"Chachas\"},\n        {distritoId:\"Chilcaymarca\", distritoName:\"Chilcaymarca\"},\n        {distritoId:\"Choco\", distritoName:\"Choco\"},\n        {distritoId:\"Huancarqui\", distritoName:\"Huancarqui\"},\n        {distritoId:\"Machaguay\", distritoName:\"Machaguay\"},\n        {distritoId:\"Orcopampa\", distritoName:\"Orcopampa\"},\n        {distritoId:\"Pampacolca\", distritoName:\"Pampacolca\"},\n        {distritoId:\"Tipan\", distritoName:\"Tipán\"},\n        {distritoId:\"Unhon\", distritoName:\"Uñón\"},\n        {distritoId:\"Uraca\", distritoName:\"Uraca\"},\n        {distritoId:\"Viraco\", distritoName:\"Viraco\"}        \n    ],\n    \"Caylloma\":[\n        {distritoId:\"Achoma\", distritoName:\"Achoma\"},\n        {distritoId:\"Cabanaconde\", distritoName:\"Cabanaconde\"},\n        {distritoId:\"Callalli\", distritoName:\"Callalli\"},\n        {distritoId:\"Caylloma\", distritoName:\"Caylloma\"},\n        {distritoId:\"Chivay\", distritoName:\"Chivay\"},\n        {distritoId:\"Coporaque\", distritoName:\"Coporaque\"},\n        {distritoId:\"Huambo\", distritoName:\"Huambo\"},\n        {distritoId:\"Huanca\", distritoName:\"Huanca\"},\n        {distritoId:\"Ichupampa\", distritoName:\"Ichupampa\"},\n        {distritoId:\"Lari\", distritoName:\"Lari\"},\n        {distritoId:\"Lluta\", distritoName:\"Lluta\"},\n        {distritoId:\"Maca\", distritoName:\"Maca\"},\n        {distritoId:\"Madrigal\", distritoName:\"Madrigal\"},\n        {distritoId:\"Majes\", distritoName:\"Majes\"},\n        {distritoId:\"San Antonio de Chuca\", distritoName:\"San Antonio de Chuca\"},\n        {distritoId:\"Sibayo\", distritoName:\"Sibayo\"},\n        {distritoId:\"Tapay\", distritoName:\"Tapay\"},\n        {distritoId:\"Tisco\", distritoName:\"Tisco\"},\n        {distritoId:\"Tuti\", distritoName:\"Tuti\"},\n        {distritoId:\"Yanque\", distritoName:\"Yanque\"},\n    ],\n    \"Condesuyos\":[\n        {distritoId:\"Andaray\", distritoName:\"Andaray\"},\n        {distritoId:\"Cayarani\", distritoName:\"Cayarani\"},\n        {distritoId:\"Chichas\", distritoName:\"Chichas\"},\n        {distritoId:\"Chuquibamba\", distritoName:\"Chuquibamba\"},\n        {distritoId:\"Iray\", distritoName:\"Iray\"},\n        {distritoId:\"Rio Grande\", distritoName:\"Río Grande\"},\n        {distritoId:\"Salamanca\", distritoName:\"Salamanca\"},\n        {distritoId:\"Yanaquihua\", distritoName:\"Yanaquihua\"}\n    ],\n    \"Islay\":[\n        {distritoId:\"Cocachacra\", distritoName:\"Cocachacra\"},\n        {distritoId:\"Dean Valdivia\", distritoName:\"Deán Valdivia\"},\n        {distritoId:\"Islay\", distritoName:\"Islay\"},\n        {distritoId:\"Mejia\", distritoName:\"Mejía\"},\n        {distritoId:\"Mollendo\", distritoName:\"Mollendo\"},\n        {distritoId:\"Punta de Bombon\", distritoName:\"Punta de Bombón\"}\n    ],\n    \"La Union\":[\n        {distritoId:\"Alca\", distritoName:\"Alca\"},\n        {distritoId:\"Charcana\", distritoName:\"Charcana\"},\n        {distritoId:\"Cotahuasi\", distritoName:\"Cotahuasi\"},\n        {distritoId:\"Huaynacotas\", distritoName:\"Huaynacotas\"},\n        {distritoId:\"Pampamarca\", distritoName:\"Pampamarca\"},\n        {distritoId:\"Puyca\", distritoName:\"Puyca\"},\n        {distritoId:\"Quechualla\", distritoName:\"Quechualla\"},\n        {distritoId:\"Sayla\", distritoName:\"Sayla\"},\n        {distritoId:\"Tauria\", distritoName:\"Tauría\"},\n        {distritoId:\"Tomepampa\", distritoName:\"Tomepampa\"},\n        {distritoId:\"Toro\", distritoName:\"Toro\"}\n    ]\n};","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n//Fecha\nimport {Calendar} from 'primereact/calendar';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n//Imagen\nimport {FileUpload} from 'primereact/fileupload';\n//Validar\nimport { useForm } from \"react-hook-form\";\n\nimport authContext from \"../../../context/auth/authContext\";\nimport alertaContext from '../../../context/alertas/alertaContext';\nimport DenunciationContext from '../../../context/denunciation/DenunciationContext';\nimport ModalContext from \"../../../context/modal/ModalContext\";\nimport {provincias_aqp, distritos_aqp} from './Ubigeo';\n\nimport { DateFull } from \"../../../Functions\";\n\n//Fecha en español\nconst es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n\n//Formulario de denuncia\nconst Denunciation = (props) => {\n  \n    //Extraer los valores del context\n    const alertasContext = useContext(alertaContext);\n    const { alerta, MostrarAlerta } = alertasContext;\n\n    const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;\n\n    //Obtener el state de Alerta\n    const DenunciationsContext = useContext(DenunciationContext);\n    const { denunciation, AddDenunciation, EditDenunciation } = DenunciationsContext;\n    \n    //Obtener el state de modal\n    const ModalsContext = useContext(ModalContext);\n    const { CloseModal } = ModalsContext;\n\n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( denunciation );\n    \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        AddDenunciation(currentDenunciation);\n        CloseModal();\n    };\n    \n    return (\n        <>\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        //readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    \n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                            <FileUpload name=\"demo\"  url=\"./upload\" mode=\"basic\" chooseLabel=\"Subir imagen\" accept=\"image/*\"  customUpload={true} uploadHandler={MyUploader}/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"den_otro_telefono\"\n                        label=\"Otro teléfono adicional\"\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_PROVINCIA */}\n                <Form.Group controlId=\"den_provincia\">\n                    <Form.Label >Provincia</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_provincia'\n                        value= {den_provincia}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Provincia</option>\n                        {provincias_aqp.map((e, key) => {\n                            return <option key={key} value={e.provinciaId}>{e.provinciaName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_DISTRITO */}\n                <Form.Group controlId=\"den_distrito\">\n                    <Form.Label >Distrito</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_distrito'\n                        value= {den_distrito}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Distrito</option>\n                        {distritos_aqp[den_provincia].map((e, key) => {\n                            return <option key={key} value={e.distritoId}>{e.distritoName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </>\n    );\n}\n\nexport default Denunciation;","import React, { useContext } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport ModalContext from \"../../../context/modal/ModalContext\";\nimport Denunciation from \"./Denunciation\";\n\nconst MyModal = () => {\n\n    //Obtener el state de modal\n    const ModalsContext = useContext(ModalContext);\n    const { modal, CloseModal } = ModalsContext;\n\n    const SaveAlert = () => {\n        CloseModal();\n    }\n\n    return (\n        <Modal show={modal} onHide={CloseModal}>\n            <Modal.Header closeButton>\n            <Modal.Title>Nuevo registro de denuncias</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Denunciation/>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={CloseModal}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default MyModal;","\nimport React, { useContext } from \"react\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n\nimport DenunciationContext from \"../../context/denunciation/DenunciationContext\";\n\nconst MyTable = ({ register }) => {\n\n    //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { UpdateDenunciation } = DenunciationsContext;\n  \n  const onRowSelect = (row, isSelected) => {\n    if ( isSelected ) {\n      let obj = {};\n      for(var prop in row){\n        //console.log(prop+':'+row[prop]);\n        if (prop === 'DEN_FECHA_RECEPCION') {\n          row[prop] = new Date(row[prop]);\n        } else if (prop === 'DEN_FECHA_PROBABLE_INSPECCION') {\n          let obj = [];\n          let aux = row[prop];\n          aux = aux.split('&');\n          for (let i = 1; i < aux.length; i++) {\n            obj.push(new Date(aux[i]));\n          }\n          row[prop] = obj;\n        }\n        obj[prop.toLowerCase()]=row[prop];\n      }\n      UpdateDenunciation(obj);\n    }\n  }\n\n  const selectRowProp = {\n    mode: 'radio',\n    bgColor: '#5bc0de', // you should give a bgcolor, otherwise, you can't regonize which row has been selected\n    //hideSelectColumn: true,  // enable hide selection column.\n    clickToSelect: true,  // you should enable clickToSelect, otherwise, you can't select column.\n    onSelect: onRowSelect\n  };\n\n  return (\n      <BootstrapTable \n          keyField=\"DEN_ID_CUSTOM\"\n          data={ register } \n          selectRow= {selectRowProp} \n      >   \n          <TableHeaderColumn width='150' dataField='DEN_ID_CUSTOM'>CÓDIGO</TableHeaderColumn>\n          <TableHeaderColumn width='210' dataField='DEN_FECHA_RECEPCION'>FECHA DE RECEPCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='USU_CUENTA'>USUARIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_MEDIO'>MEDIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_TIPO'>TIPO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_AGENTE_NOMBRE'>AGENTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO'>INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO_OTRO'>OTRO INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_NOMBRE'>HABITANTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO1'>TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO2'>OTRO TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_PROVINCIA'>PROVINCIA</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DISTRITO'>DISTRITO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_LOCALIDAD'>LOCALIDAD</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DIRECCION'>DIRECCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_REFERENCIA'>REFERENCIA</TableHeaderColumn>\n          <TableHeaderColumn width='300' dataField='DEN_FECHA_PROBABLE_INSPECCION'>FECHAS PROBABLE INSPECCIÓN</TableHeaderColumn>\n      </BootstrapTable>\n  );\n}\n\nexport default MyTable;","import React, { useContext, useEffect } from \"react\";\nimport { Container, Button } from 'react-bootstrap';\n\n\nimport DenunciationContext from \"../../context/denunciation/DenunciationContext\";\nimport MyModal from \"./form/MyModal\";\nimport ModalContext from \"../../context/modal/ModalContext\";\nimport MyTable from \"./MyTable\";\n\nconst Denunciations = () => {\n\n  //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { denunciations, GetDenunciations, AddDenunciation, EditDenunciation } = DenunciationsContext;\n\n  //Obtener el state de modal\n  const ModalsContext = useContext(ModalContext);\n  const { ShowModal } = ModalsContext;\n\n  useEffect(() => {\n      GetDenunciations();\n      //Eliminamos advertencia por que sabemos que esta bien\n      // eslint-disable-next-line\n  }, []);\n\n  const HandleEdit = () => {\n    ShowModal();\n  }\n\n  return(\n      <Container>\n        <h2>Información de Denuncias</h2>\n        <Button onClick={ShowModal}>Agregar</Button>\n        <Button onClick={HandleEdit}>Edita</Button>\n        <MyModal/>\n        <MyTable register={denunciations}/>\n      </Container>\n  );\n}\n\nexport default Denunciations;","import { \n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return{\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return{\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Csv\nexport const CSV_HOUSES = 'CSV_HOUSES';\nexport const CSV_PARTICIPANTS_INMUNE = 'CSV_PARTICIPANTS_INMUNE';\nexport const CSV_HEALTH_POSTS = 'CSV_HEALTH_POSTS';\n\n//Denuncia\nexport const GET_DENUNCIATIONS = 'GET_DENUNCIATIONS';\nexport const ADD_DENUNCIATION = 'ADD_DENUNCIATION';\nexport const UPDATE_DENUNCIATION = 'UPDATE_DENUNCIATION';\n\n//Inspeccion\nexport const GET_INSPECTIONS = 'GET_INSPECTIONS';\nexport const ADD_INSPECTION = 'ADD_INSPECTION';\n\n","import React, {useReducer} from 'react';\n\nimport alertaContext from './alertaContext';\nimport alertaReducer from './alertaReducer';\nimport { \n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../../types';\n\nconst AlertaState = props => {\n    \n    const initialState = {\n        alerta: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    //Funciones\n    const MostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        //Despues de 5 segundos limpiar el mensaje de error\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return(\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                MostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    );\n}\n\nexport default AlertaState;","import { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case LOGIN_EXITOSO:\n        case REGISTRO_EXITOSO:\n            //localStorage.setItem('token', action.payload.token);\n            return{\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,\n                //usuario: action.payload.usuario,\n                usuario: action.payload,\n                cargando: false\n            }\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n        case CERRAR_SESION:\n            localStorage.removeItem('token');\n            return{\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\n\nimport authContext from './authContext';\nimport authReducer from './authReducer';\n//import ClienteAxios from \"../../config/axios\";\n//import tokenAuth from \"../../config/tokenAuth\";\nimport { \n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    OBTENER_USUARIO\n} from '../../types';\n\nconst AuthState = props => {\n    \n    const initialState = {\n        //token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    //Retorna el Usuario autenticado\n    const UsuarioAutenticado = async () => {\n        /*const token = localStorage.getItem('token');\n        if (token) {\n            //Funcion para enviar el token por headers\n            tokenAuth(token);\n        }*/\n\n        try {\n            //const respuesta = await ClienteAxios.get('/api/auth');\n            const data = {\n                username: \"test1\",\n                password: \"123\"\n            };\n            \n            //console.log(respuesta);\n            dispatch({\n                type: OBTENER_USUARIO,\n                //payload: respuesta.data\n                payload: data\n            });\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: LOGIN_ERROR\n            });\n        }\n    }\n\n    //Cuando el usuario inicia sesion\n    const IniciarSesion = async datos => {\n        try {\n            //const respuesta = await ClienteAxios.post('/api/auth', datos);\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                //payload: respuesta.data\n            });\n            \n            //Obtener el usuario\n            UsuarioAutenticado();\n\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            };\n            \n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            });\n        }\n    }\n\n    //Cierra la sesion del usuario\n    const CerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        });\n    }\n\n    return(\n        <authContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                IniciarSesion,\n                UsuarioAutenticado,\n                CerrarSesion\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    );\n}\n\nexport default AuthState;","import axios from \"axios\";\n\nconst ClienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default ClienteAxios;","import { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_DENUNCIATIONS:\n            return{\n                ...state,\n                denunciations: action.payload\n            };\n        case ADD_DENUNCIATION:\n            return{\n                ...state,\n                denunciations: [...state.denunciations, action.payload]\n            };\n        case UPDATE_DENUNCIATION:\n            return{\n                ...state,\n                denunciation : action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport DenunciationContext from './DenunciationContext';\nimport DenunciationReducer from './DenunciationReducer';\nimport { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION\n} from '../../types';\n\nconst DenunciationState = props => {\n    \n    const initialState = {\n        denunciation: {\n            den_id_custom: '',\n            den_fecha_recepcion: new Date(),\n            den_medio: '',\n            den_agente_nombre:'',\n            den_tipo: '',\n            den_insecto: '',\n            den_insecto_otro:'',\n            den_habitante_nombre:'',\n            den_habitante_telefono1:'',\n            den_otro_telefono:false,\n            den_habitante_telefono2:'',\n            den_provincia: \"\",\n            den_distrito:'',\n            den_localidad:'',\n            den_direccion:'',\n            den_referencia:'',\n            den_fecha_probable_inspeccion: null\n        },\n        denunciations: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(DenunciationReducer, initialState);\n\n    //FUNCIONES\n    //* Obtener denuncias\n    const GetDenunciations = async () => {\n        \n        try {\n            const resultado = await ClienteAxios.get('/api/denuncias');\n            //console.log(resultado);\n\n            dispatch({\n                type: GET_DENUNCIATIONS,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar denuncias\n    const AddDenunciation = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Denuncia seleccionada\n    const UpdateDenunciation = ( objDenunciation ) => {\n        dispatch({\n            type: UPDATE_DENUNCIATION,\n            payload: objDenunciation\n        });\n    }\n\n    //* Editar denuncias\n    const EditDenunciation = async ( denunciation ) => {\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation);\n            //console.log(resultado);\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <DenunciationContext.Provider\n            value={{\n                denunciation: state.denunciation,\n                denunciations: state.denunciations,\n                GetDenunciations,\n                AddDenunciation,\n                UpdateDenunciation,\n                EditDenunciation\n            }}\n        >\n            {props.children}\n        </DenunciationContext.Provider>\n    );\n}\n\nexport default DenunciationState;","import { createContext } from 'react';\n\nconst InspectionContext = createContext();\n\nexport default InspectionContext;","import { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_INSPECTIONS:\n            return{\n                ...state,\n                inspections: action.payload\n            };\n        case ADD_INSPECTION:\n            return{\n                ...state,\n                inspections: [...state.inspections, action.payload]\n            };\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport InspectionContext from './InspectionContext';\nimport InspectionReducer from './InspectionReducer';\nimport { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\n\nconst InspectionState = props => {\n    \n    const initialState = {\n        inspection: {\n            den_id_custom: '',\n            den_fecha_recepcion: new Date(),\n            den_medio: '',\n            den_agente_nombre:'',\n            den_tipo: '',\n            den_insecto: '',\n            den_insecto_otro:'',\n            den_habitante_nombre:'',\n            den_habitante_telefono1:'',\n            den_otro_telefono:false,\n            den_habitante_telefono2:'',\n            den_provincia: \"\",\n            den_distrito:'',\n            den_localidad:'',\n            den_direccion:'',\n            den_referencia:'',\n            den_fecha_probable_inspeccion: null\n        },\n        inspections: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(InspectionReducer, initialState);\n\n    //FUNCIONES\n    //* Obtener denuncias\n    const GetInspections = async () => {\n        \n        try {\n            const resultado = await ClienteAxios.get('/api/inspecciones');\n            console.log(resultado);\n\n            dispatch({\n                type: GET_INSPECTIONS,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar denuncias\n    const AddInspection = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_INSPECTION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <InspectionContext.Provider\n            value={{\n                inspection: state.inspection,\n                inspections: state.inspections,\n                GetInspections,\n                AddInspection\n            }}\n        >\n            {props.children}\n        </InspectionContext.Provider>\n    );\n}\n\nexport default InspectionState;","import { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case CSV_HOUSES:\n            return{\n                ...state,\n                houses: action.payload\n            };\n        case CSV_PARTICIPANTS_INMUNE:\n            return{\n                ...state,\n                participantsInmune: action.payload\n            };\n        case CSV_HEALTH_POSTS:\n            return{\n                ...state,\n                healthPosts: action.payload\n            };\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport * as d3 from 'd3';\n\nimport CsvContext from './CsvContext';\nimport CsvReducer from './CsvReducer';\nimport { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS\n} from '../../types';\n\nconst CsvState = props => {\n    \n    const initialState = {\n        houses: [],\n        participantsInmune: [],\n        healthPosts: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(CsvReducer, initialState);\n\n    //Funciones\n    const CsvHouses = async () => {\n        //d3.csv(fileCsv, function(data) { console.log(data); });\n        //Obtener CSV\n        const fileCsv= \"test2\";\n        const pathCsv = require('../../catchment-area/' + fileCsv + '.csv');\n        \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_HOUSES,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n          \n    const CsvParticipantsInmune = async () => {\n        //Obtener CSV\n        const fileCsv= \"registro_participantes_inmune\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_PARTICIPANTS_INMUNE,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const CsvHealthPosts = async () => {\n        //Obtener CSV\n        const fileCsv= \"PUESTOS DE SALUD AQP_modificado_06022020\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_HEALTH_POSTS,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return(\n        <CsvContext.Provider\n            value={{\n                houses: state.houses,\n                participantsInmune: state.participantsInmune,\n                healthPosts: state.healthPosts,\n                CsvHouses,\n                CsvParticipantsInmune,\n                CsvHealthPosts\n            }}\n        >\n            {props.children}\n        </CsvContext.Provider>\n    );\n}\n\nexport default CsvState;","import { \n    SHOW_MODAL,\n    CLOSE_MODAL\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SHOW_MODAL:\n        case CLOSE_MODAL:\n            return{\n                modal: !state.modal\n            };\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\n\nimport ModalContext from './ModalContext';\nimport ModalReducer from './ModalReducer';\nimport { \n    SHOW_MODAL,\n    CLOSE_MODAL\n} from '../../types';\n\nconst ModalState = props => {\n    \n    //Inicializacion de variables\n    const initialState = {\n        modal: false,\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(ModalReducer, initialState);\n\n    //Funciones\n    const ShowModal = () => {\n        dispatch({\n            type: SHOW_MODAL\n        });\n    };\n\n    const CloseModal = () => {\n        dispatch({\n            type: CLOSE_MODAL\n        });\n    };\n\n    return(\n        <ModalContext.Provider\n            value={{\n                //Varianles\n                modal: state.modal,\n                //Funciones\n                ShowModal,\n                CloseModal\n            }}\n        >\n            {props.children}\n        </ModalContext.Provider>\n    );\n}\n\nexport default ModalState;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Login from \"./components/Login\";\nimport MyMap from \"./components/MyMap\";\nimport Activities from \"./components/Activities\";\nimport Denunciations from \"./components/Denunciations\";\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/auth/authState';\nimport DenunciationState from './context/denunciation/DenunciationState';\nimport InspectionState from './context/inspection/InspectionState';\nimport CsvState from './context/csv/CsvState';\nimport ModalState from './context/modal/ModalState';\n\nfunction App() {\n  return (\n    <AlertaState>\n      <AuthState>\n        <DenunciationState>\n          <InspectionState>\n            <CsvState>\n              <ModalState>\n                <Router> \n                  <Switch>\n                    <Route exact path=\"/\" component={Login}/>\n                    <Route exact path=\"/map\" component={MyMap}/>\n                    <Route exact path=\"/actividades\" component={Activities}/>\n                    <Route exact path=\"/denuncias\" component={Denunciations}/>\n                  </Switch>\n                </Router>\n              </ModalState>\n            </CsvState>\n          </InspectionState>\n        </DenunciationState>\n      </AuthState>\n    </AlertaState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}