{"version":3,"sources":["files sync /^/.//.*/.csv$","img/preloader.gif","img/icon-participants-inmune.png","img/icon-health-posts.png","catchment-area sync /^/.//.*/.csv$","catchment-area/C1ASA.csv","catchment-area/C1TIA.csv","catchment-area/C2CAY.csv","catchment-area/C2TIA.csv","catchment-area/C3JLB.csv","catchment-area/C3TIA.csv","catchment-area/test.csv","catchment-area/test2.csv","files/PUESTOS DE SALUD AQP_modificado_06022020.csv","files/registro_participantes_inmune.csv","context/authentication/AuthenticationContext.js","context/spinner/SpinnerContext.js","components/Spinner/index.js","context/alert/AlertContext.js","components/Login/index.js","context/csv/CsvContext.js","context/inspection/InspectionContext.js","resources/index.js","context/cimex/CimexContext.js","components/Modal/MyModal.js","components/Activities/Inspections/FormInsp.js","components/MyMap/CircleHouses.js","components/Activities/Inspections/FormPI.js","components/MyMap/MarkerParticipantsInmune.js","components/Activities/Inspections/FormHP.js","components/MyMap/MarkerHealthPosts.js","components/MyMap/index.js","layouts/Header/Points.js","components/Login/SignOut.js","layouts/Header/index.js","components/Activities/index.js","context/denunciation/DenunciationContext.js","components/Activities/Denunciations/FormDen.js","components/Activities/Denunciations/MyTable.js","components/Activities/Denunciations/index.js","context/alert/AlertReducer.js","types/index.js","context/alert/AlertState.js","context/authentication/AuthenticationReducer.js","config/axios.js","context/authentication/AuthenticationState.js","context/denunciation/DenunciationReducer.js","context/denunciation/DenunciationState.js","context/inspection/InspectionReducer.js","context/inspection/InspectionState.js","context/cimex/CimexReducer.js","context/cimex/CimexState.js","context/csv/CsvReducer.js","context/csv/CsvState.js","context/spinner/SpinnerReducer.js","context/spinner/SpinnerState.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","authenticationContext","createContext","SpinnerContext","Spinner","className","src","imgSpinner","alt","AlertContext","Login","props","SpinnersContext","useContext","spinner","ShowSpinner","HideSpinner","AlertsContext","alert","ShowAlert","AuthenticationsContext","AuthenticationContext","mensaje","authenticated","useEffect","history","push","msg","categoria","useState","username","password","user","setUser","onChange","target","name","value","Alert","variant","Container","Col","md","span","offset","Form","onSubmit","preventDefault","trim","Group","controlId","Label","Control","type","placeholder","Button","CsvContext","InspectionContext","es","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","provincias_aqp","provinciaId","provinciaName","distritos_aqp","distritoId","distritoName","DateFull","date","year","getFullYear","month","getMonth","day","getDate","Merge","data0","data1","field","result","i","length","j","obj","key1","key2","CimexContext","MyModal","Modal","show","modal","onHide","ChangeModal","Header","closeButton","Title","formTitle","Body","children","Footer","onClick","FormInps","inspection","cimex","useForm","register","handleSubmit","errors","currentInspection","setCurrentInspection","currentCimex","obs_unicode","user_name","unicode","code_locality","fecha","obs_text","caract_predio","tipo_lp","status_inspeccion","entrevista","motivo_volver","renuente","fecha_volver","personas_predio","intra_inspeccion","intra_chiris","intra_rastros","peri_inspeccion","peri_chiris","peri_rastros","cant_perros","cant_gatos","cant_aves_corral","cant_cuyes","cant_conejos","text_otros","cant_otros","cimex_alguien_picado_casa_ultimo_anio","hora_inicio","hora_fin","inspection_flag","predicted_probab","predicted_probab_mean","risk_color","lat","lng","observaciones","setObservaciones","obs_text1","obs_text2","renuente_otro","perros","setPerros","gatos","setGatos","aves_corral","setAves_corral","cuyes","setCuyes","conejos","setConejos","otros","setOtros","OnChange","OnChangeCheck","checked","readOnly","Check","label","as","ref","required","showIcon","locale","dateFormat","sm","Row","maxLength","can_perros","disabled","CircleHouses","CsvsContext","houses","inspections","UpdateHouses","setModal","setFormTitle","setUnicode","visitedHousesInspection","array1","array2","nameCol1","nameCol2","InnerJoin","forEach","element","inspectionText","visited","some","UNICODE","FECHA","STATUS_INSPECCION","CircleMarker","key","center","parseFloat","LATITUDE","LONGITUDE","fillColor","color","radius","weight","fillOpacity","Popup","valUnicode","FormInsp","FormHP","currentDenunciation","setCurrentDenunciation","visita_agente_fecha","visita_agente_motivo","visita_agente_motivo_llamado","visita_agente_motivo_llamado_otro","visita_agente_datos_nuevos","den_fecha_recepcion","den_fecha_probable_inspeccion","arrayDate","DateSome","den_tipo","MarkerParticipantsInmune","participantsInmune","HandleAdd","participants_inmune","filter","customMarker","L","icon","iconUrl","require","iconSize","Point","Marker","position","NOMBRE","DIRECCION","TELEFONO","FormPI","visita_ps_fecha","visita_ps_motivo","visita_ps_motivo_otro","visita_ps_motivo_llamado","visita_ps_motivo_llamado_otro","visita_ps_nuevas_denuncias","visita_ps_quien_dio_informacion","visita_ps_quien_dio_informacion_otro","visita_ps_encontro_insecto","MarkerHealthPosts","healthPosts","health_posts","MyMap","Map","zoom","preferCanvas","TileLayer","url","attribution","goBack","Points","withRouter","Logout","USU_CUENTA","Activities","fluid","DenunciationContext","FormDen","DenunciationsContext","denunciation","AddDenunciation","EditDenunciation","usu_cuenta","toUpperCase","usu_microred","USU_MICRORED","den_id_custom","den_medio","den_agente_nombre","den_insecto","den_insecto_otro","den_habitante_nombre","den_habitante_telefono1","den_otro_telefono","den_habitante_telefono2","den_provincia","den_distrito","den_localidad","den_direccion","den_referencia","column","mode","chooseLabel","accept","customUpload","uploadHandler","console","log","minDate","Date","maxDateCount","selectionMode","readOnlyInput","MyTable","UpdateDenunciation","DisableEditDen","selectRowProp","bgColor","clickToSelect","onSelect","row","isSelected","prop","aux","split","toLowerCase","keyField","data","selectRow","width","dataField","Denunciations","denunciations","GetDenunciations","editDen","InitDenunciation","state","action","payload","AlertState","useReducer","AlertReducer","dispatch","Provider","setTimeout","cargando","ClienteAxios","axios","create","baseURL","process","AuthenticationState","authReducer","CsvHouses","CsvHealthPosts","CsvParticipantsInmune","CsvClean","GetInspections","datos","a","post","respuesta","USU_CATCHMENT_AREA","response","alerta","initDenunciation","DenunciationState","initialState","DenunciationReducer","get","resultado","den_id","objDenunciation","InspectionState","newInspections","newHealthPosts","InspectionReducer","AddInspection","CimexState","CimexReducer","concat","CsvState","CsvReducer","fileCsv","arrayFileCsv","pathCsv","d3","results","house","newHouses","SpinnerState","SpinnerReducer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a86aa009.chunk.js","sourcesContent":["var map = {\n\t\"./PUESTOS DE SALUD AQP_modificado_06022020.csv\": 221,\n\t\"./registro_participantes_inmune.csv\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 115;","module.exports = __webpack_public_path__ + \"static/media/preloader.d1fc3653.gif\";","module.exports = __webpack_public_path__ + \"static/media/icon-participants-inmune.49b0a5d6.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-health-posts.42f5b1bf.png\";","var map = {\n\t\"./C1ASA.csv\": 213,\n\t\"./C1TIA.csv\": 214,\n\t\"./C2CAY.csv\": 215,\n\t\"./C2TIA.csv\": 216,\n\t\"./C3JLB.csv\": 217,\n\t\"./C3TIA.csv\": 218,\n\t\"./test.csv\": 219,\n\t\"./test2.csv\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 212;","module.exports = __webpack_public_path__ + \"static/media/C1ASA.ed04870c.csv\";","module.exports = __webpack_public_path__ + \"static/media/C1TIA.4df55e0e.csv\";","module.exports = __webpack_public_path__ + \"static/media/C2CAY.83d0042a.csv\";","module.exports = __webpack_public_path__ + \"static/media/C2TIA.9173a6f3.csv\";","module.exports = __webpack_public_path__ + \"static/media/C3JLB.d90b3ea8.csv\";","module.exports = __webpack_public_path__ + \"static/media/C3TIA.0a02b6c7.csv\";","module.exports = __webpack_public_path__ + \"static/media/test.a9988830.csv\";","module.exports = __webpack_public_path__ + \"static/media/test2.8453f7b9.csv\";","module.exports = __webpack_public_path__ + \"static/media/PUESTOS DE SALUD AQP_modificado_06022020.5004b8fc.csv\";","module.exports = __webpack_public_path__ + \"static/media/registro_participantes_inmune.23670560.csv\";","import { createContext } from 'react';\n\nconst authenticationContext = createContext();\n\nexport default authenticationContext;","import { createContext } from 'react';\n\nconst SpinnerContext = createContext();\n\nexport default SpinnerContext;","import React from \"react\";\nimport imgSpinner from '../../img/preloader.gif';\n\nconst Spinner = () => {\n    return(\n        <div className='spinner'>\n            <img src={imgSpinner} alt='preloading'/>\n        </div>\n    );\n}\n\nexport default Spinner;","import { createContext } from 'react';\n\nconst AlertContext = createContext();\n\nexport default AlertContext;","import React, {useState, useContext, useEffect} from 'react';\nimport { Container, Col, Form, Button, Alert } from 'react-bootstrap';\n\nimport AuthenticationContext from \"../../context/authentication/AuthenticationContext\";\nimport SpinnerContext from '../../context/spinner/SpinnerContext';\nimport Spinner from '../Spinner';\nimport AlertContext from '../../context/alert/AlertContext';\n\nconst Login = (props) => {\n        \n    //Spinner\n    const SpinnersContext = useContext(SpinnerContext);\n    const { spinner, ShowSpinner, HideSpinner } = SpinnersContext;\n    //Extraer los valores del context\n    const AlertsContext = useContext(AlertContext);\n    const { alert, ShowAlert } = AlertsContext;\n\n    const AuthenticationsContext = useContext(AuthenticationContext);\n    const { mensaje, authenticated, Login } = AuthenticationsContext;\n\n    //En caso de que el passwors o usuario no exista\n    useEffect(() => {\n        if (authenticated) {\n            props.history.push('/actividades');\n        }\n        \n        if (mensaje) {\n            ShowAlert(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, authenticated, props.history]);\n    \n    //State para iniciar sesión\n    const [user, setUser] = useState({\n        username: '',\n        password: ''\n    });\n\n    //Extraer de usuario\n    const { username, password } = user;\n\n    const onChange = e => {\n        setUser({\n            ...user,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        ShowSpinner();\n        //Validar que no haya campos vacios\n        if (username.trim() === '' || password.trim() === '') {\n            ShowAlert('Todos los campos son obligatorios', 'alerta-error');\n            HideSpinner();\n        } else {\n            //Pasarlo al action\n            Login({ username, password });    \n        }\n    }\n    \n    return (\n        <>\n            { spinner ? (<Spinner/>) : null }\n            { alert ? (<Alert className='alert' variant='danger'>{alert.msg}</Alert>) : null }\n            <Container className=\"p-4\">\n                <Col md={{ span: 4, offset: 4 }} className=\"text-center\">\n                    <h3>Vigilancia Integrada</h3>\n                    <Form\n                        onSubmit={onSubmit}\n                    >\n                        <Form.Group controlId=\"username\">\n                            <Form.Label ></Form.Label>\n                            <Form.Control \n                                type='text'\n                                name='username'\n                                placeholder='Usuario'\n                                value={username}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\">\n                            {/*<Form.Label ></Form.Label>*/}\n                            <Form.Control \n                                type='password'\n                                name='password'\n                                placeholder='Contraseña'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type='submit'>\n                            Entrar\n                        </Button>\n                    </Form>\n\n                    {/*<Link to={'/nueva-cuenta'} className='enlace-cuenta'>\n                        Obtener Cuenta\n                    </Link>*/}\n                </Col>\n            </Container >\n        </>\n    );\n}\n\nexport default Login;","import { createContext } from 'react';\n\nconst CsvContext = createContext();\n\nexport default CsvContext;","import { createContext } from 'react';\n\nconst InspectionContext = createContext();\n\nexport default InspectionContext;","/*********************\n- VARIABLES GLOBALES -\n**********************/\n//Fecha en español\nexport const es = {\n    firstDayOfWeek: 1,\n    dayNames: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    dayNamesShort: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    dayNamesMin: [\"D\", \"L\", \"M\", \"X\", \"J\", \"V\", \"S\"],\n    monthNames: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    monthNamesShort: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n};\n//Ubigeo\nexport const provincias_aqp =[\n    { provinciaId:\"Arequipa\", provinciaName:\"Arequipa\"},\n    { provinciaId:\"Camana\", provinciaName:\"Camaná\"},\n    { provinciaId:\"Caraveli\", provinciaName:\"Caravelí\"},\n    { provinciaId:\"Castilla\", provinciaName:\"Castilla\"},\n    { provinciaId:\"Caylloma\", provinciaName:\"Caylloma\"},\n    { provinciaId:\"Condesuyos\", provinciaName:\"Condesuyos\"},\n    { provinciaId:\"Islay\", provinciaName:\"Islay\"},\n    { provinciaId:\"La Union\", provinciaName:\"La Unión\"}\n];\nexport const distritos_aqp = {\n    \"\":[],\n    \"Arequipa\":[\n        {distritoId:\"Alto Selva Alegre\", distritoName:\"Alto Selva Alegre\"},\n        {distritoId:\"Cercado\", distritoName:\"Arequipa(Cercado)\"},\n        {distritoId:\"Cayma\", distritoName:\"Cayma\"},\n        {distritoId:\"Cerro Colorado\", distritoName:\"Cerro Colorado\"},\n        {distritoId:\"Characato\", distritoName:\"Characato\"},\n        {distritoId:\"Chiguata\", distritoName:\"Chiguata\"},\n        {distritoId:\"Jacobo Hunter\", distritoName:\"Jacobo Hunter\"},\n        {distritoId:\"Jose Luis Bustamante y Rivero\", distritoName:\"José Luis Bustamante y Rivero\"},\n        {distritoId:\"La Joya\", distritoName:\"La Joya\"},\n        {distritoId:\"Mariano Melgar\", distritoName:\"Mariano Melgar\"},\n        {distritoId:\"Miraflores\", distritoName:\"Miraflores\"},\n        {distritoId:\"Mollebaya\", distritoName:\"Mollebaya\"},\n        {distritoId:\"Paucarpata\", distritoName:\"Paucarpata\"},\n        {distritoId:\"Pocsi\", distritoName:\"Pocsi\"},\n        {distritoId:\"Polobaya\", distritoName:\"Polobaya\"},\n        {distritoId:\"Quequenha\", distritoName:\"Quequeña\"},\n        {distritoId:\"Sabandia\", distritoName:\"Sabandía\"},\n        {distritoId:\"Sachaca\", distritoName:\"Sachaca\"},\n        {distritoId:\"San Juan de Siguas\", distritoName:\"San Juan de Siguas\"},\n        {distritoId:\"San Juan de Tarucani\", distritoName:\"San Juan de Tarucani\"},\n        {distritoId:\"Santa Isabel de Siguas\", distritoName:\"Santa Isabel de Siguas\"},\n        {distritoId:\"Santa Rita de Siguas\", distritoName:\"Santa Rita de Siguas\"},\n        {distritoId:\"Socabaya\", distritoName:\"Socabaya\"},\n        {distritoId:\"Tiabaya\", distritoName:\"Tiabaya\"},\n        {distritoId:\"Uchumayo\", distritoName:\"Uchumayo\"},\n        {distritoId:\"Vitor\", distritoName:\"Vítor\"},\n        {distritoId:\"Yanahuara\", distritoName:\"Yanahuara\"},\n        {distritoId:\"Yarabamba\", distritoName:\"Yarabamba\"},\n        {distritoId:\"Yura\", distritoName:\"Yura\"}\n    ],\n    \"Camana\":[\n        {distritoId:\"Camana\", distritoName:\"Camaná\"},\n        {distritoId:\"Jose Maria Quimper\", distritoName:\"José María Quimper\"},\n        {distritoId:\"Mariano Nicolas Valcarcel\", distritoName:\"Mariano Nicolás Valcárcel\"},\n        {distritoId:\"Mariscal Caceres\", distritoName:\"Mariscal Cáceres\"},\n        {distritoId:\"Nicolas de Pierola\", distritoName:\"Nicolás de Piérola\"},\n        {distritoId:\"Oconha\", distritoName:\"Ocoña\"},\n        {distritoId:\"Quilca\", distritoName:\"Quilca\"},\n        {distritoId:\"Samuel Pastor\", distritoName:\"Samuel Pastor\"}\n    ],\n    \"Caraveli\":[\n        {distritoId:\"Acari\", distritoName:\"Acarí\"},\n        {distritoId:\"Atico\", distritoName:\"Atico\"},\n        {distritoId:\"Atiquipa\", distritoName:\"Atiquipa\"},\n        {distritoId:\"Bella Union\", distritoName:\"Bella Unión\"},\n        {distritoId:\"Cahuacho\", distritoName:\"Cahuacho\"},\n        {distritoId:\"Caraveli\", distritoName:\"Caravelí\"},\n        {distritoId:\"Chala\", distritoName:\"Chala\"},\n        {distritoId:\"Chaparra\", distritoName:\"Chaparra\"},\n        {distritoId:\"Huanuhuanu\", distritoName:\"Huanuhuanu\"},\n        {distritoId:\"Jaqui\", distritoName:\"Jaqui\"},\n        {distritoId:\"Lomas\", distritoName:\"Lomas\"},\n        {distritoId:\"Quicacha\", distritoName:\"Quicacha\"},\n        {distritoId:\"Yauca\", distritoName:\"Yauca\"},\n    ],\n    \"Castilla\":[\n        {distritoId:\"Andahua\", distritoName:\"Andahua\"},\n        {distritoId:\"Aplao\", distritoName:\"Aplao\"},\n        {distritoId:\"Ayo\", distritoName:\"Ayo\"},\n        {distritoId:\"Chachas\", distritoName:\"Chachas\"},\n        {distritoId:\"Chilcaymarca\", distritoName:\"Chilcaymarca\"},\n        {distritoId:\"Choco\", distritoName:\"Choco\"},\n        {distritoId:\"Huancarqui\", distritoName:\"Huancarqui\"},\n        {distritoId:\"Machaguay\", distritoName:\"Machaguay\"},\n        {distritoId:\"Orcopampa\", distritoName:\"Orcopampa\"},\n        {distritoId:\"Pampacolca\", distritoName:\"Pampacolca\"},\n        {distritoId:\"Tipan\", distritoName:\"Tipán\"},\n        {distritoId:\"Unhon\", distritoName:\"Uñón\"},\n        {distritoId:\"Uraca\", distritoName:\"Uraca\"},\n        {distritoId:\"Viraco\", distritoName:\"Viraco\"}        \n    ],\n    \"Caylloma\":[\n        {distritoId:\"Achoma\", distritoName:\"Achoma\"},\n        {distritoId:\"Cabanaconde\", distritoName:\"Cabanaconde\"},\n        {distritoId:\"Callalli\", distritoName:\"Callalli\"},\n        {distritoId:\"Caylloma\", distritoName:\"Caylloma\"},\n        {distritoId:\"Chivay\", distritoName:\"Chivay\"},\n        {distritoId:\"Coporaque\", distritoName:\"Coporaque\"},\n        {distritoId:\"Huambo\", distritoName:\"Huambo\"},\n        {distritoId:\"Huanca\", distritoName:\"Huanca\"},\n        {distritoId:\"Ichupampa\", distritoName:\"Ichupampa\"},\n        {distritoId:\"Lari\", distritoName:\"Lari\"},\n        {distritoId:\"Lluta\", distritoName:\"Lluta\"},\n        {distritoId:\"Maca\", distritoName:\"Maca\"},\n        {distritoId:\"Madrigal\", distritoName:\"Madrigal\"},\n        {distritoId:\"Majes\", distritoName:\"Majes\"},\n        {distritoId:\"San Antonio de Chuca\", distritoName:\"San Antonio de Chuca\"},\n        {distritoId:\"Sibayo\", distritoName:\"Sibayo\"},\n        {distritoId:\"Tapay\", distritoName:\"Tapay\"},\n        {distritoId:\"Tisco\", distritoName:\"Tisco\"},\n        {distritoId:\"Tuti\", distritoName:\"Tuti\"},\n        {distritoId:\"Yanque\", distritoName:\"Yanque\"},\n    ],\n    \"Condesuyos\":[\n        {distritoId:\"Andaray\", distritoName:\"Andaray\"},\n        {distritoId:\"Cayarani\", distritoName:\"Cayarani\"},\n        {distritoId:\"Chichas\", distritoName:\"Chichas\"},\n        {distritoId:\"Chuquibamba\", distritoName:\"Chuquibamba\"},\n        {distritoId:\"Iray\", distritoName:\"Iray\"},\n        {distritoId:\"Rio Grande\", distritoName:\"Río Grande\"},\n        {distritoId:\"Salamanca\", distritoName:\"Salamanca\"},\n        {distritoId:\"Yanaquihua\", distritoName:\"Yanaquihua\"}\n    ],\n    \"Islay\":[\n        {distritoId:\"Cocachacra\", distritoName:\"Cocachacra\"},\n        {distritoId:\"Dean Valdivia\", distritoName:\"Deán Valdivia\"},\n        {distritoId:\"Islay\", distritoName:\"Islay\"},\n        {distritoId:\"Mejia\", distritoName:\"Mejía\"},\n        {distritoId:\"Mollendo\", distritoName:\"Mollendo\"},\n        {distritoId:\"Punta de Bombon\", distritoName:\"Punta de Bombón\"}\n    ],\n    \"La Union\":[\n        {distritoId:\"Alca\", distritoName:\"Alca\"},\n        {distritoId:\"Charcana\", distritoName:\"Charcana\"},\n        {distritoId:\"Cotahuasi\", distritoName:\"Cotahuasi\"},\n        {distritoId:\"Huaynacotas\", distritoName:\"Huaynacotas\"},\n        {distritoId:\"Pampamarca\", distritoName:\"Pampamarca\"},\n        {distritoId:\"Puyca\", distritoName:\"Puyca\"},\n        {distritoId:\"Quechualla\", distritoName:\"Quechualla\"},\n        {distritoId:\"Sayla\", distritoName:\"Sayla\"},\n        {distritoId:\"Tauria\", distritoName:\"Tauría\"},\n        {distritoId:\"Tomepampa\", distritoName:\"Tomepampa\"},\n        {distritoId:\"Toro\", distritoName:\"Toro\"}\n    ]\n};\n/*********************\n- FUNCIONES GLOBALES -\n**********************/\n//Funcion para obtener la fecha en el formato yyyy-mm-dd\nexport const DateFull = ( date ) => {\n    const year = date.getFullYear();\n    let month = date.getMonth()+1;\n    let day = date.getDate();\n    if(month < 10){\n        month = \"0\"+ month;\n    }\n    if ( day < 10) {\n        day = \"0\"+day;\n    }\n    return(`${year}-${month}-${day}`);\n}\n\n//Funcion para realizar un innerjoin con dos arreglos y sus respectivos nombres de columnas a comparar\nexport const InnerJoin = (array1, array2, nameCol1, nameCol2 ) => {\n    let result = [];\n    for (let i = 0; i < array1.length; i++) {\n        for (let j = 0; j < array2.length; j++) {\n            if (array1[i][nameCol1] === array2[j][nameCol2]) {\n                result.push(array2[j]);\n            }            \n        }\n    }\n    \n    return result;\n}\n\n//Funcion Merge\nexport const Merge = (data0, data1, field) => {\n    var result = [];\n    for (var i = 0; i < data0.length; i++) {\n    for (var j = 0; j < data1.length; j++) {\n        if (data0[i][field] === data1[j][field]) {\n        var obj = {};\n        for (var key1 in data0[i])\n            obj[key1] = data0[i][key1];\n        for (var key2 in data1[j]) {\n            if (key2 !== field)\n            obj[key2] = data1[j][key2];\n        }\n        result.push(obj);\n        break;\n        }\n    }\n    }\n    return result;\n}\n\n//Funcion promedio\nexport const Mean = (data, select) => {\n    var n = data.length;\n    var total = 0;\n    for (var i=0; i < data.length; i++) {\n        if (isNaN(data[i][select]))\n        n = n - 1;\n        else\n        total = total + parseFloat(data[i][select]);\n    }\n    return total/n;\n}\n\n","import { createContext } from 'react';\n\nconst CimexContext = createContext();\n\nexport default CimexContext;","import React from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\n\nconst MyModal = (props) => {\n\n    const SaveAlert = () => {\n        //CloseModal();\n        console.log(\"entro no se porque\");\n    }\n\n    return (\n        <Modal show={props.modal} onHide={props.ChangeModal}>\n            <Modal.Header closeButton>\n            <Modal.Title>{props.formTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.children}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.ChangeModal}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default MyModal;","import React, {useState, useContext} from 'react';\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\nimport AlertContext from '../../../context/alert/AlertContext';\nimport InspectionContext from '../../../context/inspection/InspectionContext';\nimport CimexContext from '../../../context/cimex/CimexContext';\nimport MyModal from \"../../Modal/MyModal\";\nimport { es, DateFull } from \"../../../resources\";\n\n//Formulario de denuncia\nconst FormInps = (props) => {\n  \n    //Extraer los valores del context\n    const AlertsContext = useContext(AlertContext);\n    const { alert, ShowAlert } = AlertsContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n\n    //Extraer los valores del context\n    const CimexsContext = useContext(CimexContext);\n    const { cimex } = CimexsContext;\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para inspecciones\n    const [currentInspection, setCurrentInspection] = useState( inspection );\n    //State para cimex\n    const [currentCimex, setCurrentCimex] = useState( cimex );\n    \n    //Extraer de valores de inspeccion\n    const {  \n        user_name,\n        unicode,\n        code_locality,\n        obs_unicode,\n        obs_text,\n        fecha,\n        caract_predio,\n        tipo_lp,\n        status_inspeccion,\n        entrevista,\n        motivo_volver,\n        fecha_volver,\n        renuente,\n        intra_inspeccion,\n        intra_chiris,\n        intra_rastros,\n        peri_inspeccion,\n        peri_chiris,\n        peri_rastros,\n        personas_predio,\n        cant_perros,\n        cant_gatos,\n        cant_aves_corral,\n        cant_cuyes,\n        cant_conejos,\n        text_otros,\n        cant_otros,\n        hora_inicio,\n        hora_fin,\n        inspection_flag,\n        predicted_probab,\n        predicted_probab_mean,\n        risk_color,\n        lat,\n        lng,\n    } = currentInspection;\n    //Extraer de valores de inspeccion\n    const {  \n        cimex_alguien_picado_casa_ultimo_anio\n    } = currentCimex;\n    \n    const [observaciones, setObservaciones] = useState( false );\n    const [obs_text1, setObs_text1] = useState( '' );\n    const [obs_text2, setObs_text2] = useState( '' );\n    const [renuente_otro, setRenuente_otro] = useState( '' );\n    //Animales\n    const [perros, setPerros] = useState( false );\n    const [gatos, setGatos] = useState( false );\n    const [aves_corral, setAves_corral] = useState( false );\n    const [cuyes, setCuyes] = useState( false );\n    const [conejos, setConejos] = useState( false );\n    const [otros, setOtros] = useState( false );\n    \n    const OnChange = e => {\n        setCurrentInspection({\n            ...currentInspection,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        if (e.target.name===\"observaciones\") {\n            setObservaciones(e.target.checked);\n        } else if (e.target.name===\"perros\") {\n            setPerros(e.target.checked);\n        } else if (e.target.name===\"gatos\") {\n            setGatos(e.target.checked);\n        } else if (e.target.name===\"aves_corral\") {\n            setAves_corral(e.target.checked);\n        } else if (e.target.name===\"cuyes\") {\n            setCuyes(e.target.checked);\n        } else if (e.target.name===\"conejos\") {\n            setConejos(e.target.checked);\n        } else if (e.target.name===\"otros\") {\n            setOtros(e.target.checked);\n        } else {\n            setCurrentInspection({\n                ...currentInspection,\n                [e.target.name] : e.target.checked\n            });\n        }\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentInspection.fecha = DateFull(currentInspection.fecha);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alert ? (<Alert className='alert' variant='danger'>{alert.msg}</Alert>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"unicode\">\n                    <Form.Label >Código de Vivienda</Form.Label>\n                    <Form.Control \n                        readOnly\n                        type='text'\n                        name='unicode'\n                        value={props.unicode}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"observaciones\">\n                    <Form.Check \n                        type=\"checkbox\" \n                        name=\"observaciones\"\n                        label=\"Observaciones sobre unicode\"\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {observaciones? \n                    (<>\n                        {/* obs_unicode */}\n                        <Form.Group controlId=\"obs_unicode\">\n                            <Form.Control \n                                as=\"select\"\n                                name= 'obs_unicode'\n                                value= {obs_unicode}\n                                onChange= {OnChange}\n                            >\n                                <option>Seleccione...</option>\n                                <option value=\"vivienda_con_mas_un_unicode\">1) Una vivienda con mas de un unicode</option>\n                                <option value=\"vivienda_sin_unicode_localidad_nueva\">2) Vivienda sin unicode (localidad nueva)</option>\n                                <option value=\"vivienda_sin_unicode_manzana_nueva\">3) Vivienda sin unicode (en una localidad antigua pero con manzana nueva)</option>\n                                <option value=\"vivienda_un_unicode_pero_con_departamentos\">4) Una vivienda con un código pero dividida en departamentos</option>\n                                <option value=\"dos_viviendas_distintas_mismo_unicode\">5) Dos viviendas distintas con el mismo unicode</option>\n                                <option value=\"unicode_equivocado\">6) Unicode equivocado</option>\n                                <option value=\"unicode_en_mapa_no_en_campo\">7) Unicode del mapa que no se encuentra en campo</option>\n                                <option value=\"unicode_en_campo_no_mapa\">8) Unicode en campo que no se encuentra en el mapa</option>\n                                <option value=\"otro\">9) Otro</option>\n                            </Form.Control>\n                        </Form.Group>\n                        {(obs_unicode==='vivienda_sin_unicode_localidad_nueva' || obs_unicode==='vivienda_sin_unicode_manzana_nueva')? (\n                            <>\n                                {/* OBS_TEXT1 */}\n                                <Form.Group controlId=\"obs_text1\">\n                                    <Form.Control \n                                        type=\"text\"\n                                        name= 'obs_text1'\n                                        value= {obs_text1}\n                                        placeholder = \"Ingrese la dirección de la vivienda ...\"\n                                        onChange= {OnChange}\n                                        ref={register({ required: true })}\n                                    />\n                                    {errors.obs_text1 && <span className='alert-custom'>*Campo obligatorio</span>}\n                                </Form.Group>\n                            </>\n                        ):null}\n                        {(obs_unicode==='otro')? (\n                            <>\n                                {/* OBS_TEXT2 */}\n                                <Form.Group controlId=\"obs_text2\">\n                                    <Form.Control \n                                        type=\"text\"\n                                        name= 'obs_text2'\n                                        value= {obs_text2}\n                                        placeholder = \"Describa su opción ...\"\n                                        onChange= {OnChange}\n                                        ref={register({ required: true })}\n                                    />\n                                    {errors.obs_text2 && <span className='alert-custom'>*Campo obligatorio</span>}\n                                </Form.Group>\n                            </>\n                        ):null}\n                    </>):null\n                }\n                <hr/>\n                {/* FECHA */}\n                <Form.Group controlId=\"fecha\">\n                    <Form.Label>Fecha* </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'fecha'\n                        value={fecha} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* CARACT_PREDIO */}\n                <Form.Group controlId=\"caract_predio\">\n                    <Form.Label >Características del predio*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'caract_predio'\n                        value= {caract_predio}\n                        onChange= {OnChange}\n                    >\n                        <option value=\"DES\">Deshabitada</option>\n                        <option value=\"casa_regular\">Casa regular</option>\n                        <option value=\"LV\">Lote vacío</option>\n                        <option value=\"LP\">Local público</option>\n                    </Form.Control>\n                </Form.Group>\n                {(caract_predio==='LP')? (\n                    <>\n                        {/* TIPO_LP */}\n                        <Form.Group controlId=\"tipo_lp\">\n                            <Form.Label>Tipo local público*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'tipo_lp'\n                                value= {tipo_lp}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.tipo_lp && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                ):null}\n                {(caract_predio==='casa_regular' || caract_predio==='LP' || caract_predio==='DES')? (\n                    <>\n                        {/* STATUS_INSPECCION */}\n                        <Form.Group controlId=\"status_inspeccion\">\n                            <Form.Label >Estado de la Inspeccíon*</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name= 'status_inspeccion'\n                                value= {status_inspeccion}\n                                onChange= {OnChange}\n                            >\n                                <option value=\"C\">Cerrada</option>\n                                <option value=\"R\">Renuente</option>\n                                <option value=\"V\">Volver</option>\n                                <option value=\"entrevista\">Entrevista</option>\n                                <option value=\"inspeccion\">Inspección</option>\n                            </Form.Control>\n                        </Form.Group>\n                        {(status_inspeccion === 'entrevista')? (\n                            <>\n                                {/* DEN_TIPO */}\n                                <Form.Group>\n                                    <Form.Label>Entrevista</Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Cree que no tiene\"\n                                            name=\"entrevista\"\n                                            value=\"cree_no_tiene\"\n                                            checked={ entrevista=== \"cree_no_tiene\"}\n                                            onChange= {OnChange}\n                                            ref={register({ required: true })}\n                                        />\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Cree que si tiene\"\n                                            name=\"entrevista\"\n                                            value=\"cree_si_tiene\"\n                                            checked={ entrevista=== \"cree_si_tiene\"}\n                                            onChange= {OnChange}\n                                            ref={register({ required: true })}\n                                        />\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"No sabe\"\n                                            name=\"entrevista\"\n                                            value=\"no_sabe\"\n                                            checked={ entrevista=== \"no_sabe\"}\n                                            onChange= {OnChange}\n                                            ref={register({ required: true })}\n                                        />\n                                    </Col>\n                                    {errors.entrevista && <span className='alert-custom'>*Campo obligatorio</span>}\n                                </Form.Group>\n                            </>\n                        ):null}\n                        {(status_inspeccion === 'V')? (\n                            <>\n                                {/* MOTIVO_VOLVER */}\n                                <Form.Group controlId=\"motivo_volver\">\n                                    <Form.Label>Motivo</Form.Label>\n                                    <Form.Control \n                                        type=\"text\"\n                                        name= 'motivo_volver'\n                                        value= {motivo_volver}\n                                        onChange= {OnChange}\n                                        placeholder = \"Escribe aqui el motivo ...\"\n                                        ref={register({ required: true })}\n                                    />\n                                    {errors.motivo_volver && <span className='alert-custom'>*Campo obligatorio</span>}\n                                </Form.Group>\n                            </>\n                        ):null}\n                        {(status_inspeccion === 'R')? (\n                            <>\n                                {/* RENUENTE */}\n                                <Form.Group controlId=\"renuente\">\n                                    <Form.Control \n                                        as=\"select\"\n                                        name= 'renuente'\n                                        value= {renuente}\n                                        onChange= {OnChange}\n                                    >\n                                        <option value=\"R1\">R1) No tiene tiempo trabaja</option>\n                                        <option value=\"R2\">R2) Desconfianza</option>\n                                        <option value=\"R3\">R3) Casa limpia</option>\n                                        <option value=\"R4\">R4) Inquilinos</option>\n                                        <option value=\"R5\">R5) No da ningun motivo</option>\n                                        <option value=\"R6\">R6) Otro</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                {(renuente === 'R6')? (\n                                    <>\n                                        {/* RENUENTE_OTRO */}\n                                        <Form.Group controlId=\"renuente_otro\">\n                                            <Form.Control \n                                                type=\"text\"\n                                                name= 'renuente_otro'\n                                                value= {renuente_otro}\n                                                onChange= {OnChange}\n                                                placeholder = \"Describa su opción ...\"\n                                                ref={register({ required: true })}\n                                            />\n                                            {errors.renuente_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                                        </Form.Group>\n                                    </>\n                                ):null}\n                            </>\n                        ):null}\n                        {(status_inspeccion === 'inspeccion')? (\n                        <>\n                            <hr/>\n                            <div className=\"table-check\">\n                                <Row>\n                                    <Col></Col>\n                                    <Col>Lugar inspección*</Col>\n                                    <Col>Halló Chiris </Col>\n                                    <Col>Halló Rastros</Col>\n                                </Row>\n                                <Row>\n                                    <Col>INTRA</Col>\n                                    <Col>\n                                        {/* LUGAR_INSPECCION_INTRA */}\n                                        <Form.Group controlId=\"lugar_inspeccion_intra\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"lugar_inspeccion_intra\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col>\n                                        {/* CHIRIS_INTRA */}\n                                        <Form.Group controlId=\"chiris_intra\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"chiris_intra\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col>\n                                        {/* RASTROS_INTRA */}\n                                        <Form.Group controlId=\"rastros_intra\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"rastros_intra\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>PERI</Col>\n                                    <Col>\n                                        {/* LUGAR_INSPECCION_PERI */}\n                                        <Form.Group controlId=\"lugar_inspeccion_peri\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"lugar_inspeccion_peri\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col>\n                                        {/* CHIRIS_PERI */}\n                                        <Form.Group controlId=\"chiris_peri\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"chiris_peri\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col>\n                                        {/* RASTROS_PERI */}\n                                        <Form.Group controlId=\"rastros_peri\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"rastros_peri\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            </div>\n                            <hr/>\n                            {/* PERSONAS_PREDIO*/}\n                            <Form.Group controlId=\"personas_predio\">\n                                <Form.Label>Cuántas personas viven en el predio?</Form.Label>\n                                <Form.Control \n                                    type='number'\n                                    name='personas_predio'\n                                    value={personas_predio}\n                                    onChange={OnChange}\n                                    ref={register({ required: true, maxLength: 2 })}\n                                />\n                                {errors.personas_predio?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                {errors.personas_predio?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                            </Form.Group>\n                            {/* ANIMALES */}\n                            <div className=\"animales-opt\">Qué animales hay?\n                                <Row>\n                                    <Col>\n                                        {/* PERROS */}\n                                        <Form.Group controlId=\"perros\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"perros\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Perros</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(perros === true)? (\n                                        <Col>\n                                            {/* CANT_PERROS */}\n                                            <Form.Group controlId=\"cant_perros\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_perros'\n                                                    value={cant_perros}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_perros?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.can_perros?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        {/* GATOS */}\n                                        <Form.Group controlId=\"gatos\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"gatos\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Gatos</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(gatos === true)? (\n                                        <Col>\n                                            {/* CANT_GATOS */}\n                                            <Form.Group controlId=\"cant_gatos\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_gatos'\n                                                    value={cant_gatos}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_gatos?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.cant_gatos?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        {/* AVES_CORRAL */}\n                                        <Form.Group controlId=\"aves_corral\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"aves_corral\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Aves Corral</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(aves_corral === true)? (\n                                        <Col>\n                                            {/* CANT_AVES_CORRAL */}\n                                            <Form.Group controlId=\"cant_aves_corral\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_aves_corral'\n                                                    value={cant_aves_corral}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_aves_corral?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.cant_aves_corral?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        {/* CUYES */}\n                                        <Form.Group controlId=\"cuyes\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"cuyes\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Cuyes</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(cuyes === true)? (\n                                        <Col>\n                                            {/* CANT_CUYES */}\n                                            <Form.Group controlId=\"cant_cuyes\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_cuyes'\n                                                    value={cant_cuyes}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_cuyes?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.cant_cuyes?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        {/* CONEJOS */}\n                                        <Form.Group controlId=\"conejos\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"conejos\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Conejos</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(conejos === true)? (\n                                        <Col>\n                                            {/* CANT_CONEJOS */}\n                                            <Form.Group controlId=\"cant_conejos\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_conejos'\n                                                    value={cant_conejos}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_conejos?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.cant_conejos?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        {/* OTROS */}\n                                        <Form.Group controlId=\"otros\">\n                                            <Form.Check \n                                                type=\"checkbox\" \n                                                name=\"otros\"\n                                                onChange={OnChangeCheck}\n                                            />\n                                            <Form.Label>Otros</Form.Label>\n                                        </Form.Group>\n                                    </Col>\n                                    {(otros === true)? (\n                                        <Col>\n                                            {/* TEXT_OTROS */}\n                                            <Form.Group controlId=\"text_otros\">\n                                                <Form.Control \n                                                    type=\"text\"\n                                                    name= 'text_otros'\n                                                    value= {text_otros}\n                                                    onChange= {OnChange}\n                                                    placeholder = \"Indique otro ...\"\n                                                    ref={register({ required: true })}\n                                                />\n                                                {errors.text_otros && <span className='alert-custom'>*Campo obligatorio</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                                <Row>\n                                    <Col></Col>\n                                    {(otros === true)? (\n                                        <Col>\n                                            {/* CANT_OTROS */}\n                                            <Form.Group controlId=\"cant_otros\">\n                                                <Form.Control \n                                                    type='number'\n                                                    name='cant_otros'\n                                                    value={cant_otros}\n                                                    onChange={OnChange}\n                                                    ref={register({ required: true, maxLength: 2 })}\n                                                />\n                                                {errors.cant_otros?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                                                {errors.cant_otros?.type === 'maxLength' && <span className='alert-custom'>*Máximo 99 personas</span>}\n                                            </Form.Group>\n                                        </Col>\n                                    ):null}\n                                </Row>\n                            </div>\n                        </>\n                        ):null}\n                    </>\n                ):null}\n                <hr/>\n                {/*******  FORMULARIO CIMEX *********/}\n                <h5>CHINCHES DE CAMA</h5>\n                {/* CIMEX_ALGUIEN_PICADO_CASA_ULTIMO_ANIO */}\n                <Form.Group>\n                    <Form.Label>1.- En el último año, ¿Algún miembro del hogar ha sido picado por insectos al interior de la vivienda?</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Sí\"\n                            name=\"cimex_alguien_picado_casa_ultimo_anio\"\n                            value=\"1\"\n                            checked={ cimex_alguien_picado_casa_ultimo_anio=== \"1\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"No\"\n                            name=\"cimex_alguien_picado_casa_ultimo_anio\"\n                            value=\"0\"\n                            checked={ cimex_alguien_picado_casa_ultimo_anio=== \"0\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"No sabe\"\n                            name=\"cimex_alguien_picado_casa_ultimo_anio\"\n                            value=\"NS\"\n                            checked={ cimex_alguien_picado_casa_ultimo_anio=== \"NS\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.cimex_alguien_picado_casa_ultimo_anio && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n\n                <Button disabled type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormInps;\n","import React, { useContext, useState } from \"react\";\nimport { Popup, CircleMarker } from \"react-leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport InspectionContext from \"../../context/inspection/InspectionContext\";\nimport { InnerJoin } from \"../../resources\";\nimport FormInsp from \"../Activities/Inspections/FormInsp\";\n\nconst CircleHouses = () => {\n\n    //Obtener viviendas\n    const CsvsContext = useContext(CsvContext);\n    let { houses, UpdateHouses } = CsvsContext;\n    //Obtener el inspecciones\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspections } = InspectionsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n    //Titulo del formulario\n    const [unicode, setUnicode] = useState(null);\n            \n    const HandleAdd = ( valUnicode ) => {\n      setUnicode(valUnicode);\n      setFormTitle(\"Ingresar registro de inspecciones\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //- LOGICA\n    //Para asegurar que ingresa una sola vez\n    if (houses.length > 0) {\n      //const codeLoc = [...new Set(total_ca.map(house => house.codeLoc))];\n      if (inspections.length > 0) {\n        let visitedHousesInspection = InnerJoin(houses, inspections, \"UNICODE\", \"UNICODE\");    \n        \n        //Recorriendo todas las viviendas para poner popup\n        houses.forEach(element => {\n          //element.inspectionText = `` ;\n          element.inspectionText = <div>\n                                    Ult. visita : --:--\n                                   </div>;\n        });\n        //Actualizar popup segun inspecciones\n        visitedHousesInspection.forEach(visited => {\n          houses.some(element => {\n            if (visited.UNICODE === element.UNICODE) {\n              element.inspectionText = <div>Ult. visita: <b>{visited.FECHA}</b><br/> Estado en Inspec: <b>{visited.STATUS_INSPECCION}</b></div>;\n              return true;\n            } else {\n              return false;\n            }\n          });\n        });                                                                                                                                                                  \n      }\n    }\n    \n    return (\n      <>\n        {houses.map( element => (\n          <CircleMarker \n            key = {element.UNICODE}\n            center={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            fillColor = {element.color}\n            radius = {6}\n            //// = {true}\n            color = \"black\"\n            weight = {0.2}\n            fillOpacity = {1}\n          >\n              <Popup>\n                <b>{element.UNICODE}</b>\n                {element.inspectionText}\n                <Button onClick={()=>HandleAdd(element.UNICODE)}>Ingresar Datos</Button>\n              </Popup>\n          </CircleMarker>\n        ))}\n        <FormInsp modal={modal} ChangeModal={ChangeModal} formTitle={formTitle} unicode={unicode}/>\n      </>\n    );\n}\n\nexport default CircleHouses;","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\nimport AlertContext from '../../../context/alert/AlertContext';\nimport InspectionContext from '../../../context/inspection/InspectionContext';\nimport MyModal from \"../../Modal/MyModal\";\nimport { es, DateFull } from \"../../../resources\";\n\n//Formulario de denuncia\nconst FormHP = (props) => {\n  \n    //Extraer los valores del context\n    const AlertsContext = useContext(AlertContext);\n    const { alert, ShowAlert } = AlertsContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n\n    /*const authsContext = useContext(authContext);\n    const { mensaje } = authsContext;*/\n    \n    //En caso de que el passwors o usuario no exista\n    /*useEffect(() => {\n        \n        if (mensaje) {\n            MostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        //Para evitar que mande error por que sabemos que esta bien\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);*/\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( inspection );\n    \n    //Extraer de usuario\n    const {  \n        visita_agente_fecha,\n        visita_agente_motivo,\n        visita_agente_motivo_llamado,\n        visita_agente_motivo_llamado_otro,\n        visita_agente_datos_nuevos\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alert ? (<Alert className='alert' variant='danger'>{alert.msg}</Alert>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >   \n                {/* VISITA_AGENTE_FECHA */}\n                <Form.Group controlId=\"visita_agente_fecha\">\n                    <Form.Label>Fecha de visita: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'visita_agente_fecha'\n                        value={visita_agente_fecha} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* VISITA_PS_MOTIVO */}\n                <Form.Group>\n                    <Form.Label>¿Cuál es el motivo de la visita?</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Visita programada\"\n                            name=\"visita_agente_motivo\"\n                            value=\"visita_programada\"\n                            checked={ visita_agente_motivo=== \"visita_programada\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Llamado de agente\"\n                            name=\"visita_agente_motivo\"\n                            value=\"llamado_agente\"\n                            checked={ visita_agente_motivo=== \"llamado_agente\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.visita_agente_motivo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {visita_agente_motivo===\"llamado_agente\"? (\n                <>\n                    {/* VISITA_AGENTE_MOTIVO_LLAMADO */}\n                    <Form.Group>\n                        <Form.Label>¿Cuál fue el motivo de la llamada?</Form.Label>\n                        <Col sm={10}>\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Reporte de chinches de cama\"\n                                name=\"visita_agente_motivo_llamado\"\n                                value=\"reporte_chinchescama\"\n                                checked={ visita_agente_motivo_llamado=== \"reporte_chinchescama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Reporte de chirimachas\"\n                                name=\"visita_agente_motivo_llamado\"\n                                value=\"reporte_chirimachas\"\n                                checked={ visita_agente_motivo_llamado=== \"reporte_chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Llamado para que haga recojo de datos\"\n                                name=\"visita_agente_motivo_llamado\"\n                                value=\"llamado_recojo_datos\"\n                                checked={ visita_agente_motivo_llamado=== \"llamado_recojo_datos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Otro\"\n                                name=\"visita_agente_motivo_llamado\"\n                                value=\"otro\"\n                                checked={ visita_agente_motivo_llamado=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {visita_agente_motivo_llamado===\"otro\"? (\n                        <>\n                            {/* VISITA_AGENTE_MOTIVO_LLAMADO_OTRO */}\n                            <Form.Group controlId=\"visita_agente_motivo_llamado_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'visita_agente_motivo_llamado_otro'\n                                    value= {visita_agente_motivo_llamado_otro}\n                                    placeholder = \"¿Cuál? ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.visita_agente_motivo_llamado_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                </>\n                ):null}\n                {/* VISITA_AGENTE_DATOS_NUEVOS */}\n                <Form.Group>\n                    <Form.Label>¿El agente tenía datos nuevos de visitas?</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Si\"\n                            name=\"visita_agente_datos_nuevos\"\n                            value=\"1\"\n                            checked={ visita_agente_datos_nuevos=== \"1\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"No\"\n                            name=\"visita_agente_datos_nuevos\"\n                            value=\"0\"\n                            checked={ visita_agente_datos_nuevos=== \"0\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.visita_agente_datos_nuevos && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {visita_agente_datos_nuevos===\"1\"? (\n                    <span>No se olvide de enviar la foto al grupo de whatsapp. Gracias</span>                        \n                ):null}\n                <br/>\n                <br/>\n                <Button disabled type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormHP;","import React, { useContext, useState } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport FormPI from \"../Activities/Inspections/FormPI\";\nimport { Merge } from \"../../resources\";\n\nconst MarkerParticipantsInmune = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, participantsInmune } = CsvsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n    \n    const HandleAdd = () => {\n      setFormTitle(\"Ingresar registro de visitas a participantes de inmune\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //AGREGANDO AGENTES\n    //Eliminar al participante que no tiene unicode de vivienda\n    let participants_inmune = participantsInmune.filter(element => element.UNICODE !== \"\");\n    //Realizando merge con total_ca\n    participants_inmune = Merge(houses, participants_inmune, \"UNICODE\");\n    //Agregando texto de visita a agente\n    if ( participants_inmune.length > 0 ) {\n      participants_inmune.forEach(element => {\n        element.inspectionText = \"Ult. visita : --\" ;\n      });\n    }\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../img/icon-participants-inmune.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n      <>\n        {participants_inmune.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                Nombre: {element.NOMBRE} <br />\n                Direccion: {element.DIRECCION} <br/>\n                Celular: {element.TELEFONO}<br/>\n                <Button variant=\"warning\" onClick={HandleAdd}>Visita Agente</Button>\n              </Popup>\n          </Marker>\n        ))}\n        <FormPI modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n      </>\n    );\n}\n\nexport default MarkerParticipantsInmune;","import React, {useState, useContext} from 'react';\nimport { Col, Form, Button, Alert } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport { useForm } from \"react-hook-form\";//Validar\n\nimport AlertContext from '../../../context/alert/AlertContext';\nimport InspectionContext from '../../../context/inspection/InspectionContext';\nimport MyModal from \"../../Modal/MyModal\";\nimport { es, DateFull } from \"../../../resources\";\n\n//Formulario de denuncia\nconst FormHP = (props) => {\n  \n    //Extraer los valores del context\n    const AlertsContext = useContext(AlertContext);\n    const { alert, ShowAlert } = AlertsContext;\n\n    //Extraer los valores del context\n    const InspectionsContext = useContext(InspectionContext);\n    const { inspection } = InspectionsContext;\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    \n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( inspection );\n    \n    //Extraer de usuario\n    const {  \n        visita_ps_fecha,\n        visita_ps_motivo,\n        visita_ps_motivo_otro,\n        visita_ps_motivo_llamado,\n        visita_ps_motivo_llamado_otro,\n        visita_ps_nuevas_denuncias,\n        visita_ps_quien_dio_informacion,\n        visita_ps_quien_dio_informacion_otro,\n        visita_ps_encontro_insecto\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    }\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n\n        //AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alert ? (<Alert className='alert' variant='danger'>{alert.msg}</Alert>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >   \n                {/* VISITA_PS_FECHA */}\n                <Form.Group controlId=\"visita_ps_fecha\">\n                    <Form.Label>Fecha de visita: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'visita_ps_fecha'\n                        value={visita_ps_fecha} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* VISITA_PS_MOTIVO */}\n                <Form.Group>\n                    <Form.Label>¿Cuál es el motivo de la visita?</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Visita mensual programada\"\n                            name=\"visita_ps_motivo\"\n                            value=\"visita_mensual_programada\"\n                            checked={ visita_ps_motivo=== \"visita_mensual_programada\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Llamado de inspector\"\n                            name=\"visita_ps_motivo\"\n                            value=\"llamado_inspector\"\n                            checked={ visita_ps_motivo=== \"llamado_inspector\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Otro\"\n                            name=\"visita_ps_motivo\"\n                            value=\"otro\"\n                            checked={ visita_ps_motivo=== \"otro\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {visita_ps_motivo===\"otro\"? (\n                    <>\n                        {/* VISITA_PS_MOTIVO_OTRO */}\n                        <Form.Group controlId=\"visita_ps_motivo_otro\">\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_insecto_otro'\n                                value= {visita_ps_motivo_otro}\n                                placeholder = \"¿Cuál? ...\"\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.visita_ps_motivo_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                ):null}\n                {visita_ps_motivo===\"llamado_inspector\"? (\n                <>\n                    {/* VISITA_PS_MOTIVO_LLAMADO */}\n                    <Form.Group>\n                        <Form.Label>¿Cuál fue el motivo de la llamada?</Form.Label>\n                        <Col sm={10}>\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Reporte de chinches de cama\"\n                                name=\"visita_ps_motivo_llamado\"\n                                value=\"reporte_chinchescama\"\n                                checked={ visita_ps_motivo_llamado=== \"reporte_chinchescama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Reporte de chirimachas\"\n                                name=\"visita_ps_motivo_llamado\"\n                                value=\"reporte_chirimachas\"\n                                checked={ visita_ps_motivo_llamado=== \"reporte_chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Llamado para que haga recojo de datos\"\n                                name=\"visita_ps_motivo_llamado\"\n                                value=\"llamado_recojo_datos\"\n                                checked={ visita_ps_motivo_llamado=== \"llamado_recojo_datos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Otro\"\n                                name=\"visita_ps_motivo_llamado\"\n                                value=\"otro\"\n                                checked={ visita_ps_motivo_llamado=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {visita_ps_motivo_llamado===\"otro\"? (\n                        <>\n                            {/* VISITA_PS_MOTIVO_LLAMADO_OTRO */}\n                            <Form.Group controlId=\"visita_ps_motivo_llamado_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {visita_ps_motivo_llamado_otro}\n                                    placeholder = \"¿Cuál? ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.visita_ps_motivo_llamado_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                </>\n                ):null}\n                {/* VISITA_PS_NUEVAS_DENUNCIAS */}\n                <Form.Group>\n                    <Form.Label>¿En la visita, encontró nuevas denuncias?</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Si, de chirimachas\"\n                            name=\"visita_ps_nuevas_denuncias\"\n                            value=\"chirimachas\"\n                            checked={ visita_ps_nuevas_denuncias=== \"chirimachas\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Si, de chinches de cama\"\n                            name=\"visita_ps_nuevas_denuncias\"\n                            value=\"chinchescama\"\n                            checked={ visita_ps_nuevas_denuncias=== \"chinchescama\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Si, chirimachas y chinches de cama\"\n                            name=\"visita_ps_nuevas_denuncias\"\n                            value=\"chirimachas_chinchescama\"\n                            checked={ visita_ps_nuevas_denuncias=== \"chirimachas_chinchescama\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"No\"\n                            name=\"visita_ps_nuevas_denuncias\"\n                            value=\"no\"\n                            checked={ visita_ps_nuevas_denuncias=== \"no\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.visita_ps_nuevas_denuncias && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {visita_ps_nuevas_denuncias!==\"no\"? (\n                    <>\n                        {/* VISITA_PS_QUIEN_DIO_INFORMACION */}\n                        <Form.Group>\n                            <Form.Label>¿Quién le dio la información de la denuncia?</Form.Label>\n                            <Col sm={10}>\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Personal de admisión\"\n                                    name=\"visita_ps_quien_dio_informacion\"\n                                    value=\"personal_admision\"\n                                    checked={ visita_ps_quien_dio_informacion=== \"personal_admision\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Personal de laboratorio\"\n                                    name=\"visita_ps_quien_dio_informacion\"\n                                    value=\"personal_laboratorio\"\n                                    checked={ visita_ps_quien_dio_informacion=== \"personal_laboratorio\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Inspector sanitario o veterinario\"\n                                    name=\"visita_ps_quien_dio_informacion\"\n                                    value=\"inspectorsanitario_o_veterinario\"\n                                    checked={ visita_ps_quien_dio_informacion=== \"inspectorsanitario_o_veterinario\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Otro\"\n                                    name=\"visita_ps_quien_dio_informacion\"\n                                    value=\"otro\"\n                                    checked={ visita_ps_quien_dio_informacion=== \"otro\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                            </Col>\n                            {errors.visita_ps_quien_dio_informacion && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                        {visita_ps_quien_dio_informacion===\"otro\"? (\n                            <>\n                                {/* VISITA_PS_QUIEN_DIO_INFORMACION_OTRO */}\n                                <Form.Group controlId=\"visita_ps_quien_dio_informacion_otro\">\n                                    <Form.Control \n                                        type=\"text\"\n                                        name= 'visita_ps_quien_dio_informacion_otro'\n                                        value= {visita_ps_quien_dio_informacion_otro}\n                                        placeholder = \"¿Cuál? ...\"\n                                        onChange= {OnChange}\n                                        ref={register({ required: true })}\n                                    />\n                                    {errors.visita_ps_quien_dio_informacion_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                                </Form.Group>\n                            </>\n                        ):null}\n                        {/* VISITA_PS_ENCONTRO_INSECTO */}\n                        <Form.Group>\n                            <Form.Label>¿Encontró el insecto?</Form.Label>\n                            <Col sm={10}>\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Si, aún estaba vivo\"\n                                    name=\"visita_ps_encontro_insecto\"\n                                    value=\"si_aun_vivo\"\n                                    checked={ visita_ps_encontro_insecto=== \"si_aun_vivo\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Si, pero ya muerto\"\n                                    name=\"visita_ps_encontro_insecto\"\n                                    value=\"si_muerto\"\n                                    checked={ visita_ps_encontro_insecto=== \"si_muerto\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"No, solo denuncias verbal\"\n                                    name=\"visita_ps_encontro_insecto\"\n                                    value=\"no_denuncia_verbal\"\n                                    checked={ visita_ps_encontro_insecto=== \"no_denuncia_verbal\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"No, lo habían perdido\"\n                                    name=\"visita_ps_encontro_insecto\"\n                                    value=\"no_habian_perdido\"\n                                    checked={ visita_ps_encontro_insecto=== \"no_habian_perdido\"}\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                            </Col>\n                            {errors.visita_ps_encontro_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                ):null}\n\n                <Button disabled type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormHP;","import React, { useContext, useState } from \"react\";\nimport { Popup, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CsvContext from \"../../context/csv/CsvContext\";\nimport FormHP from \"../Activities/Inspections/FormHP\";\nimport { Merge } from \"../../resources\";\n\nconst MarkerHealthPosts = () => {\n\n    //Obtener el state de Alerta\n    const CsvsContext = useContext(CsvContext);\n    const { houses, healthPosts } = CsvsContext;\n    //Modal\n    const [modal, setModal] = useState(false);\n    //Titulo del formulario\n    const [formTitle, setFormTitle] = useState(null);\n    \n    const HandleAdd = () => {\n      setFormTitle(\"Ingresar registro de visitas a puestos de salud\");\n      ChangeModal();\n    }\n\n    const ChangeModal = () => {\n      setModal(!modal);\n    }\n\n    //AGREGANDO PUESTOS DE SALUD\n    //Obteniendo los puestos de salud que corresponden a este catchment-area\n    let health_posts = Merge(houses, healthPosts, \"UNICODE\");\n    //Agregando texto de PUESTOS DE SALUD\n    if ( health_posts.length > 0 ) {\n      health_posts.forEach(element => {\n        element.inspectionText = <div>\n                                    <b>{element.UNICODE}</b><br/>\n                                    Ult. visita : --:--<br/>\n                                    <Button variant=\"success\" onClick={HandleAdd}>Visita Puesto de Salud</Button>\n                                   </div>;\n      });\n    }\n\n    //Icono\n    const customMarker = L.icon({ \n      iconUrl: require('../../img/icon-health-posts.png'), \n      iconSize: new L.Point(30, 34),//iconSize: [30, 40]\n    });\n    \n    return (\n      <>\n        {health_posts.map( element => (\n          <Marker \n            key = {element.UNICODE}\n            position={[parseFloat(element.LATITUDE),parseFloat(element.LONGITUDE)]}\n            icon = {customMarker}\n          >\n              <Popup>\n                {element.inspectionText}\n              </Popup>\n          </Marker>\n        ))}\n        <FormHP modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n      </>\n    );\n}\n\nexport default MarkerHealthPosts;","import React from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport { Button } from 'react-bootstrap';\n\nimport CircleHouses from \"./CircleHouses\";\nimport MarkerParticipantsInmune from \"./MarkerParticipantsInmune\";\nimport MarkerHealthPosts from \"./MarkerHealthPosts\";\n\nconst MyMap = props => {\n  \n  //Variales del mapa\n  let center = [-16.4040494,-71.574117];\n  const zoom = 10;\n\n  const BtnReturn = () => {\n      props.history.goBack();\n  }\n    \n  return (\n    <>\n      <Map center={center} zoom={zoom} preferCanvas={true}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Button className=\"btn-back\" variant=\"primary\" onClick={BtnReturn}>Atrás</Button>\n        <CircleHouses/>\n        <MarkerParticipantsInmune/>\n        <MarkerHealthPosts/>\n      </Map>\n    </>\n  );\n}\n\nexport default MyMap;\n\n","import React from \"react\";\n\nconst Points = () => {\n    return(\n        <div className=\"points\">\n            18pts\n        </div>\n    );\n}\n\nexport default Points;","import React, { useContext } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\n//import iconPerson from \"../../icons/icon-person.png\";\n\nimport AuthenticationContext from \"../../context/authentication/AuthenticationContext\";\n\nconst SignOut = (props) => {\n\n    //Obtener el state de Usuario\n    const AuthenticationsContext = useContext(AuthenticationContext);\n    const { user, Logout } = AuthenticationsContext;\n\n    const BtnSignOut = () => {\n        Logout();\n        props.history.goBack();\n    }\n\n    return(\n        <>\n            <div className=\"sign-out\">\n                {/*<img src={iconPerson} alt=\"imagen-persona\"/>*/}\n                <div>Bienvenido <b>{user.USU_CUENTA}</b></div>\n                <Button variant=\"danger\" onClick={BtnSignOut}>Cerrar Sesión</Button>\n            </div>\n        </>\n    );\n}\n\nexport default withRouter((SignOut));","import React from \"react\";\n\nimport Points from './Points';\nimport SignOut from '../../components/Login/SignOut';\n\nconst Header = () => {\n    return(\n        <header>\n            <Points/>\n            <SignOut/>\n        </header>\n    );\n}\n\nexport default Header;","import React, {useContext} from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport Header from \"../../layouts/Header\";\nimport SpinnerContext from '../../context/spinner/SpinnerContext';\n\nconst Activities = (props) => {\n    //Spinner\n    const SpinnersContext = useContext(SpinnerContext);\n    const { ShowSpinner } = SpinnersContext;\n    \n    const GoDenunciations = () => {\n        ShowSpinner();\n        props.history.push('/actividades/denuncias');\n    }\n    const GoInsActive = (e) => {\n        e.preventDefault();\n        props.history.push('/actividades/inspecciones-activas');\n    }\n    return (\n        <>\n            <Header/>\n            <Container fluid=\"md\">\n                <Row>\n                    <Col>\n                        <div id=\"wrap-button-den\" className=\"wrap-button\">\n                            <label id='title-button-den' className='title-button'>Denuncias</label>\n                            <Button id=\"btn_actDenuncias\" variant=\"primary\" onClick={GoDenunciations}>Denuncias</Button>\n                        </div>\n                        <div id=\"wrap-button-ins\" className=\"wrap-button\">\n                            <label id='title-button-ins' className='title-button'>Inspecciones</label>\n                            <Button id=\"btn_actInspeccionesPasivas\" disabled variant=\"danger\">Inspecciones por Denuncia</Button>\n                            <Button id=\"btn_actInspeccionesActivas\" variant=\"danger\" onClick={GoInsActive}>Inspecciones Activas</Button>\n                        </div>\n                        <div id=\"wrap-button-roc\" className=\"wrap-button\">\n                            <label id='title-button-roc' className='title-button'>Rociados</label>\n                            <Button id=\"btn_actRociados\" disabled variant=\"success\">Rociado</Button>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default Activities;","import { createContext } from 'react';\n\nconst DenunciationContext = createContext();\n\nexport default DenunciationContext;","import React, {useState, useContext, useEffect} from 'react';\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport {Calendar} from 'primereact/calendar';//Fecha\nimport 'primereact/resources/themes/nova-light/theme.css';//Fecha\nimport 'primereact/resources/primereact.min.css';//Fecha\nimport 'primeicons/primeicons.css';//Fecha\nimport {FileUpload} from 'primereact/fileupload';//Imagen\nimport { useForm } from \"react-hook-form\";//Validar\n\nimport AlertContext from '../../../context/alert/AlertContext';\nimport AuthenticationContext from \"../../../context/authentication/AuthenticationContext\";\nimport DenunciationContext from '../../../context/denunciation/DenunciationContext';\nimport MyModal from \"../../Modal/MyModal\";\n//Recursos\nimport { es, provincias_aqp, distritos_aqp, DateFull } from \"../../../resources\";\n\n//Formulario de denuncia\nconst FormDen = (props) => {\n  \n    //Extraer los valores del context\n    const AlertsContext = useContext(AlertContext);\n    const { alert } = AlertsContext;\n    //Variables de usuario\n    const AuthenticationsContext = useContext(AuthenticationContext);\n    const { user } = AuthenticationsContext;\n    //Obtener variables de denuncias\n    const DenunciationsContext = useContext(DenunciationContext);\n    const { denunciation, AddDenunciation, EditDenunciation } = DenunciationsContext;\n    \n    //validacion\n    const { register, handleSubmit, errors } = useForm();\n    //State para denuncias\n    const [currentDenunciation, setCurrentDenunciation] = useState( denunciation );\n    useEffect(() => {\n        setCurrentDenunciation(denunciation);\n        // eslint-disable-next-line\n    }, [denunciation]);\n    //Poner usuario y microred\n    currentDenunciation.usu_cuenta = user.USU_CUENTA.toUpperCase();\n    currentDenunciation.usu_microred = user.USU_MICRORED;\n        \n    //Extraer de usuario\n    const {  \n        den_id_custom,\n        den_fecha_recepcion,\n        den_medio, \n        den_agente_nombre,\n        den_tipo,\n        den_insecto,\n        den_insecto_otro,\n        den_habitante_nombre,\n        den_habitante_telefono1,\n        den_otro_telefono,\n        den_habitante_telefono2,\n        den_provincia,\n        den_distrito,\n        den_localidad,\n        den_direccion,\n        den_referencia,\n        den_fecha_probable_inspeccion\n    } = currentDenunciation;\n        \n    const OnChange = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    const OnChangeCheck = e => {\n        setCurrentDenunciation({\n            ...currentDenunciation,\n            [e.target.name] : e.target.checked\n        });\n    };\n\n    //Funcion para obtener los datos de fecha de probable inspeccion\n    const DateSome = ( arrayDate ) => {\n        let result = 'NA';\n        if ( arrayDate!== null) {\n            result = DateFull(arrayDate[0]);\n            if (arrayDate.length > 1) {\n                for (let i = 1; i < arrayDate.length; i++) {\n                    result = result +'&'+ DateFull(arrayDate[i]);\n                }\n            }\n        }\n        return (result);\n    };\n\n    const MyUploader = () => {\n        console.log(\"se subio la imagen\");\n    };\n\n    const OnSubmit = () => {\n        //Obteniendo solo la fecha en campos calendar\n        currentDenunciation.den_fecha_recepcion = DateFull(currentDenunciation.den_fecha_recepcion);\n        currentDenunciation.den_fecha_probable_inspeccion = DateSome(currentDenunciation.den_fecha_probable_inspeccion);\n        \n        AddDenunciation(currentDenunciation);\n        props.ChangeModal();\n    };\n    \n    return (\n        <MyModal modal={props.modal} ChangeModal={props.ChangeModal} formTitle={props.formTitle}>\n            { alert ? (<Alert className='alert' variant='danger'>{alert.msg}</Alert>) : null }\n            <Form\n                onSubmit={handleSubmit(OnSubmit)}\n            >\n                <Form.Group controlId=\"den_id_custom\">\n                    <Form.Label >Identificador de denuncia</Form.Label>\n                    <Form.Control \n                        readOnly\n                        type='text'\n                        name='den_id_custom'\n                        value={den_id_custom}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_FECHA_RECEPCION */}\n                <Form.Group controlId=\"den_fecha_recepcion\">\n                    <Form.Label>Fecha de recepción: </Form.Label>\n                    <Calendar \n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"yy-mm-dd\" \n                        name = 'den_fecha_recepcion'\n                        value={den_fecha_recepcion} \n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_MEDIO */}\n                <Form.Group controlId=\"den_medio\">\n                    <Form.Label >Medio de denuncia*</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_medio'\n                        value= {den_medio}\n                        onChange= {OnChange}\n                        ref={register({ required: true })}\n                    >\n                        <option value=\"\">Seleccione...</option>\n                        <option value=\"establecimiento\">En establecimiento</option>\n                        <option value=\"calle\">En la calle</option>\n                        <option value=\"telefono\">Por teléfono</option>\n                        <option value=\"agente\">A través de agente</option>\n                        <option value=\"whatsapp\">Whatsapp</option>\n                    </Form.Control>\n                    {errors.den_medio && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n\n                { den_medio===\"agente\" ? (\n                    <>\n                        {/* DEN_AGENTE_NOMBRE */}\n                        <Form.Group controlId=\"den_agente_nombre\">\n                            <Form.Label >Nombre del agente*</Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name= 'den_agente_nombre'\n                                value= {den_agente_nombre}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            {errors.den_agente_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                        </Form.Group>\n                    </>\n                    ) : null\n                }\n                {/* DEN_TIPO */}\n                <Form.Group>\n                    <Form.Label>Tipo de denuncia*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Verbal\"\n                            name=\"den_tipo\"\n                            value=\"verbal\"\n                            checked={ den_tipo=== \"verbal\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Con insecto\"\n                            name=\"den_tipo\"\n                            value=\"con_insecto\"\n                            checked={ den_tipo=== \"con_insecto\"}\n                            onChange= {OnChange}\n                            ref={register({ required: true })}\n                        />\n                    </Col>\n                    {errors.den_tipo && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {den_tipo===\"verbal\" || den_tipo===\"con_insecto\"?\n                    (<>\n                    {/* DEN_INSECTO */}\n                    <Form.Group as={Row}>\n                        <Form.Label as=\"legend\" column sm={2}>\n                            {den_tipo===\"verbal\"?\"¿Qué cree que es?\":\"¿Qué insecto es?\"}\n                        </Form.Label>\n                        <Col sm={10}> \n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Chinches de Cama\"\n                                name=\"den_insecto\"\n                                value=\"chinches_cama\"\n                                checked={ den_insecto=== \"chinches_cama\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Chirimachas\"\n                                value=\"chirimachas\"\n                                checked={ den_insecto=== \"chirimachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Garrapatas\"\n                                value=\"garrapatas\"\n                                checked={ den_insecto=== \"garrapatas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Mosquitos\"\n                                value=\"mosquitos\"\n                                checked={ den_insecto=== \"mosquitos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Fitófagos\"\n                                value=\"fitofagos\"\n                                checked={ den_insecto=== \"fitofagos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Grillos\"\n                                value=\"grillos\"\n                                checked={ den_insecto=== \"grillos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Cucarachas\"\n                                value=\"cucarachas\"\n                                checked={ den_insecto=== \"cucarachas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Escarabajos\"\n                                value=\"escarabajos\"\n                                checked={ den_insecto=== \"escarabajos\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgones\"\n                                value=\"pulgones\"\n                                checked={ den_insecto=== \"pulgones\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Pulgas\"\n                                value=\"pulgas\"\n                                checked={ den_insecto=== \"pulgas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Hitas\"\n                                value=\"hitas\"\n                                checked={ den_insecto=== \"hitas\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                name=\"den_insecto\"\n                                label=\"Otro\"\n                                value=\"otro\"\n                                checked={ den_insecto=== \"otro\"}\n                                onChange= {OnChange}\n                                ref={register({ required: true })}\n                            />\n                        </Col>\n                        {errors.den_insecto && <span className='alert-custom'>*Campo obligatorio</span>}\n                    </Form.Group>\n                    {den_insecto===\"otro\"? (\n                        <>\n                            {/* DEN_INSECTO_OTRO */}\n                            <Form.Group controlId=\"den_insecto_otro\">\n                                <Form.Control \n                                    type=\"text\"\n                                    name= 'den_insecto_otro'\n                                    value= {den_insecto_otro}\n                                    placeholder = \"Especificar ...\"\n                                    onChange= {OnChange}\n                                    ref={register({ required: true })}\n                                />\n                                {errors.den_insecto_otro && <span className='alert-custom'>*Campo obligatorio</span>}\n                            </Form.Group>\n                        </>\n                    ):null}\n                    </>):null\n                }\n                { den_tipo==='con_insecto'? (\n                    <>{/* DEN_INSECTO_IMAGEN */}\n                        <Form.Group>\n                            <Form.Label >Ingrese la imagen</Form.Label><br/>\n                            <FileUpload name=\"demo\"  url=\"./upload\" mode=\"basic\" chooseLabel=\"Subir imagen\" accept=\"image/*\"  customUpload={true} uploadHandler={MyUploader}/>\n                        </Form.Group>\n                    </>\n                    ):null\n                }\n                {/* DEN_HABITANTE_NOMBRE */}\n                <Form.Group controlId=\"den_habitante_nombre\">\n                    <Form.Label>Nombre del habitante*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_habitante_nombre'\n                        value={den_habitante_nombre}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_habitante_nombre && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_HABITANTE_TELEFONO1 */}\n                <Form.Group controlId=\"den_habitante_telefono1\">\n                    <Form.Label>Teléfono del Habitante*</Form.Label>\n                    <Form.Control \n                        type='number'\n                        name='den_habitante_telefono1'\n                        value={den_habitante_telefono1}\n                        onChange={OnChange}\n                        ref={register({ required: true, maxLength: 9 })}\n                    />\n                    {errors.den_habitante_telefono1?.type === \"required\" && <span className='alert-custom'>*Campo obligatorio</span>}\n                    {errors.den_habitante_telefono1?.type === \"maxLength\" && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                </Form.Group>\n                <Form.Group controlId=\"den_otro_telefono\">\n                    <Form.Check \n                        type='checkbox' \n                        name='den_otro_telefono'\n                        label='Otro teléfono adicional'\n                        checked={ den_otro_telefono }\n                        onChange={OnChangeCheck}\n                    />\n                </Form.Group>\n                {den_otro_telefono? \n                    (<>\n                        {/* DEN_HABITANTE_TELEFONO2 */}\n                        <Form.Group controlId=\"den_habitante_telefono2\">\n                            <Form.Control \n                                type='number'\n                                name='den_habitante_telefono2'\n                                value={den_habitante_telefono2}\n                                onChange={OnChange}\n                                ref={register({ required: true, maxLength: 9 })}\n                            />\n                            {errors.den_habitante_telefono2?.type === 'required' && <span className='alert-custom'>*Campo obligatorio</span>}\n                            {errors.den_habitante_telefono2?.type === 'maxLength' && <span className='alert-custom'>*Maximo 9 numeros</span>}\n                        </Form.Group>\n                    </>):null\n                }\n                {/* DEN_PROVINCIA */}\n                <Form.Group controlId=\"den_provincia\">\n                    <Form.Label >Provincia</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_provincia'\n                        value= {den_provincia}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Provincia</option>\n                        {provincias_aqp.map((e, key) => {\n                            return <option key={key} value={e.provinciaId}>{e.provinciaName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_DISTRITO */}\n                <Form.Group controlId=\"den_distrito\">\n                    <Form.Label >Distrito</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name= 'den_distrito'\n                        value= {den_distrito}\n                        onChange= {OnChange}\n                    >\n                        <option>Seleccione Distrito</option>\n                        {distritos_aqp[den_provincia].map((e, key) => {\n                            return <option key={key} value={e.distritoId}>{e.distritoName}</option>;\n                        })} \n                    </Form.Control>\n                </Form.Group> \n                {/* DEN_LOCALIDAD */}\n                <Form.Group controlId=\"den_localidad\">\n                    <Form.Label >Localidad</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_localidad'\n                        value={den_localidad}\n                        onChange={OnChange}\n                    />\n                </Form.Group>\n                {/* DEN_DIRECCION*/}\n                <Form.Group controlId=\"den_direccion\">\n                    <Form.Label >Dirección*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_direccion'\n                        value={den_direccion}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_direccion && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_REFERENCIA*/}\n                <Form.Group controlId=\"den_referencia\">\n                    <Form.Label>Referencia*</Form.Label>\n                    <Form.Control \n                        type='text'\n                        name='den_referencia'\n                        value={den_referencia}\n                        onChange={OnChange}\n                        ref={register({ required: true })}\n                    />\n                    {errors.den_referencia && <span className='alert-custom'>*Campo obligatorio</span>}\n                </Form.Group>\n                {/* DEN_FECHA_PROBABLE_INSPECCION*/}\n                <Form.Group controlId=\"den_fecha_probable_inspeccion\">\n                    <Form.Label >Fecha probable de inspección: </Form.Label>\n                    <Calendar \n                        minDate = { new Date() }\n                        maxDateCount = {3}\n                        showIcon={true} \n                        locale={es} \n                        dateFormat=\"dd/mm/yy\" \n                        value={den_fecha_probable_inspeccion} \n                        name= 'den_fecha_probable_inspeccion'\n                        onChange={ OnChange } \n                        selectionMode=\"multiple\" \n                        readOnlyInput={true} \n                    />\n                </Form.Group>\n                <Button type='submit'>Guardar</Button> \n            </Form>\n        </MyModal>\n    );\n}\n\nexport default FormDen;","\nimport React, { useContext } from \"react\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n\nimport DenunciationContext from \"../../../context/denunciation/DenunciationContext\";\nimport SpinnerContext from '../../../context/spinner/SpinnerContext';\nimport Spinner from '../../Spinner';\n\nconst MyTable = ({ register }) => {\n\n  //Spinner\n  const SpinnersContext = useContext(SpinnerContext);\n  const { spinner } = SpinnersContext;\n  //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { UpdateDenunciation, DisableEditDen } = DenunciationsContext;\n    \n  const onRowSelect = (row, isSelected) => {\n    if ( isSelected ) {\n      let obj = {};\n      for(var prop in row){\n        if (prop === 'DEN_FECHA_RECEPCION') {\n          row[prop] = new Date(row[prop]);\n        } else if (prop === 'DEN_FECHA_PROBABLE_INSPECCION') {\n          let obj = [];\n          let aux = row[prop];\n          if (aux.length > 0) {\n            aux = aux.split('&');\n            for (let i = 1; i < aux.length; i++) {\n              obj.push(new Date(aux[i]));\n            }\n          } else {\n            obj = \"\";\n          } \n          row[prop] = obj;\n        }\n        obj[prop.toLowerCase()]=row[prop];\n      }\n      UpdateDenunciation(obj);\n    } else {\n      DisableEditDen();\n    }\n  }\n\n  const selectRowProp = {\n    mode: 'radio',\n    bgColor: '#5bc0de', // you should give a bgcolor, otherwise, you can't regonize which row has been selected\n    //hideSelectColumn: true,  // enable hide selection column.\n    clickToSelect: true,  // you should enable clickToSelect, otherwise, you can't select column.\n    onSelect: onRowSelect\n  };\n\n  return (\n    <>\n      { spinner ? (<Spinner/>) : null }\n      <BootstrapTable \n          keyField=\"DEN_ID_CUSTOM\"\n          data={ register } \n          selectRow= {selectRowProp} \n      >   \n          <TableHeaderColumn width='150' dataField='DEN_ID_CUSTOM'>CÓDIGO</TableHeaderColumn>\n          <TableHeaderColumn width='210' dataField='DEN_FECHA_RECEPCION'>FECHA DE RECEPCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='USU_CUENTA'>USUARIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_MEDIO'>MEDIO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_TIPO'>TIPO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_AGENTE_NOMBRE'>AGENTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO'>INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_INSECTO_OTRO'>OTRO INSECTO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_NOMBRE'>HABITANTE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO1'>TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_HABITANTE_TELEFONO2'>OTRO TELEFONO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_PROVINCIA'>PROVINCIA</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DISTRITO'>DISTRITO</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_LOCALIDAD'>LOCALIDAD</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_DIRECCION'>DIRECCIÓN</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='DEN_REFERENCIA'>REFERENCIA</TableHeaderColumn>\n          <TableHeaderColumn width='300' dataField='DEN_FECHA_PROBABLE_INSPECCION'>FECHAS PROBABLE INSPECCIÓN</TableHeaderColumn>\n      </BootstrapTable>\n    </>\n  );\n}\n\nexport default MyTable;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Button } from 'react-bootstrap';\n\nimport DenunciationContext from \"../../../context/denunciation/DenunciationContext\";\nimport FormDen from \"./FormDen\";\nimport MyTable from \"./MyTable\";\n\nconst Denunciations = () => {\n\n  //Obtener el state de Alerta\n  const DenunciationsContext = useContext(DenunciationContext);\n  const { denunciations, GetDenunciations, editDen, InitDenunciation } = DenunciationsContext;\n\n  //Modal\n  const [modal, setModal] = useState(false);\n  //Titulo del formulario\n  const [formTitle, setFormTitle] = useState(null);\n\n  useEffect(() => {\n      GetDenunciations();\n      //Eliminamos advertencia por que sabemos que esta bien\n      // eslint-disable-next-line\n  }, []);\n\n  const HandleAdd = () => {\n    InitDenunciation();\n    setFormTitle(\"Nuevo registro de denuncias\");\n    ChangeModal();\n  }\n  const HandleEdit = () => {\n    setFormTitle(\"Editar registro de denuncias\");\n    ChangeModal();\n  }\n  const ChangeModal = () => {\n    setModal(!modal);\n  }\n\n  return(\n      <Container>\n        <h2>Información de Denuncias</h2>\n        <Button onClick={HandleAdd}>Agregar</Button>\n        <Button className=\"btn-edit\" onClick={HandleEdit} disabled={!editDen}>Editar</Button>\n        <FormDen modal={modal} ChangeModal={ChangeModal} formTitle={formTitle}/>\n        <MyTable register={denunciations}/>\n      </Container>\n  );\n}\n\nexport default Denunciations;","import { \n    SHOW_ALERT,\n    HIDE_ALERT\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SHOW_ALERT:\n            return{\n                alert: action.payload\n            }\n        case HIDE_ALERT:\n            return{\n                alert: null\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\n\n//Alertas\nexport const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\n\n//Csv\nexport const CSV_HOUSES = 'CSV_HOUSES';\nexport const CSV_PARTICIPANTS_INMUNE = 'CSV_PARTICIPANTS_INMUNE';\nexport const CSV_HEALTH_POSTS = 'CSV_HEALTH_POSTS';\nexport const UPDATE_HOUSES = 'UPDATE_HOUSES';\nexport const CSV_CLEAN = 'CSV_CLEAN';\n\n//Login\nexport const LOGIN_INTO = 'LOGIN_EXIT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGIN_END = 'LOGIN_END';\n\n//Denuncia\nexport const GET_DENUNCIATIONS = 'GET_DENUNCIATIONS';\nexport const ADD_DENUNCIATION = 'ADD_DENUNCIATION';\nexport const UPDATE_DENUNCIATION = 'UPDATE_DENUNCIATION';\nexport const INIT_DENUNCIATION = 'INIT_DENUNCIATION';\nexport const DISABLE_EDIT_DENUNCIATION = 'DISABLE_EDIT_DENUNCIATION';\n\n//Inspeccion\nexport const GET_INSPECTIONS = 'GET_INSPECTIONS';\nexport const ADD_INSPECTION = 'ADD_INSPECTION';\n\n//Cimex\nexport const ADD_CIMEX = 'ADD_CIMEX';\n\n//Snipper\nexport const SHOW_SPINNER = 'SHOW_SPINNER';\nexport const HIDE_SPINNER = 'HIDE_SPINNER';","import React, {useReducer} from 'react';\n\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport { \n    SHOW_ALERT,\n    HIDE_ALERT\n} from '../../types';\n\nconst AlertState = props => {\n    \n    const initialState = {\n        alert: null\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n    //Funciones\n    const ShowAlert = (msg, categoria) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        //Despues de 5 segundos limpiar el mensaje de error\n        setTimeout(() => {\n            dispatch({\n                type: HIDE_ALERT\n            })\n        }, 5000);\n    }\n\n    return(\n        <AlertContext.Provider\n            value={{\n                alert: state.alert,\n                ShowAlert\n            }}\n        >\n            {props.children}\n        </AlertContext.Provider>\n    );\n}\n\nexport default AlertState;","import { \n    LOGIN_INTO,\n    LOGIN_ERROR,\n    LOGIN_END\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case LOGIN_INTO:\n            //localStorage.setItem('token', action.payload.token);\n            return{\n                ...state,\n                authenticated: true,\n                user: action.payload,\n                mensaje: null,\n                cargando: false\n            }\n        case LOGIN_ERROR:\n        case LOGIN_END:\n            //localStorage.removeItem('token');\n            return{\n                ...state,\n                //token: null,\n                user: {},\n                authenticated: null,\n                mensaje: action.payload,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n}","import axios from \"axios\";\n\nconst ClienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default ClienteAxios;","import React, { useReducer, useContext } from 'react';\n\nimport authContext from './AuthenticationContext';\nimport authReducer from './AuthenticationReducer';\nimport ClienteAxios from \"../../config/axios\";\n//import tokenAuth from \"../../config/tokenAuth\";\nimport { \n    LOGIN_INTO,\n    LOGIN_ERROR,\n    LOGIN_END\n} from '../../types';\nimport CsvContext from \"../csv/CsvContext\";\nimport InspectionContext from \"../inspection/InspectionContext\";\nimport SpinnerContext from \"../spinner/SpinnerContext\";\n\nconst AuthenticationState = props => {\n    \n    const initialState = {\n        //token: localStorage.getItem('token'),\n        authenticated: false,\n        user: {},\n        mensaje: null,\n        cargando: true\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(authReducer, initialState);\n    //Obtener viviendas\n    const CsvsContext = useContext(CsvContext);\n    let { CsvHouses, CsvHealthPosts, CsvParticipantsInmune, CsvClean } = CsvsContext;\n    //Obtener el inspecciones\n    const InspectionsContext = useContext(InspectionContext);\n    const { GetInspections } = InspectionsContext;\n    //Cambiar estado de spinner\n    const SpinnersContext = useContext(SpinnerContext);\n    const { HideSpinner } = SpinnersContext;\n\n    //Cuando el usuario inicia sesion\n    const Login = async datos => {\n        try {\n            //Comprobando que el username y password sean correctos\n            const respuesta = await ClienteAxios.post('/api/acceder', datos);\n            \n            //Almacenando el username que se logio\n            await ClienteAxios.post('/api/visitas-app', datos);\n            \n            //Cargando datos que se necesitaran\n            await CsvHouses(respuesta.data.USU_CATCHMENT_AREA);\n            await CsvHealthPosts();\n            await CsvParticipantsInmune();\n            await GetInspections();\n            \n            dispatch({\n                type: LOGIN_INTO,\n                payload: respuesta.data\n            });\n            \n        } catch (error) {\n            \n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            };\n            \n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            });\n        }\n        //Cambiando estado de spinner\n        HideSpinner();\n    }\n\n    //Cierra la sesion del usuario\n    const Logout = () => {\n        CsvClean();\n\n        dispatch({\n            type: LOGIN_END\n        });\n    }\n\n    return(\n        <authContext.Provider\n            value={{\n                //token: state.token,\n                authenticated: state.authenticated,\n                user: state.user,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                Login,\n                Logout\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    );\n}\n\nexport default AuthenticationState;","import { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION,\n    INIT_DENUNCIATION,\n    DISABLE_EDIT_DENUNCIATION\n} from '../../types';\n\nconst initDenunciation = {\n    den_id_custom: 'DEN-XXXXXX',\n    usu_cuenta: '',\n    usu_microred: '',\n    den_fecha_recepcion: new Date(),\n    den_medio: '',\n    den_agente_nombre:'',\n    den_tipo: '',\n    den_insecto: '',\n    den_insecto_otro:'',\n    //-falta variable imagen\n    den_habitante_nombre:'',\n    den_habitante_telefono1:'',\n    den_otro_telefono:false,\n    den_habitante_telefono2:'',\n    den_provincia: '',\n    den_distrito:'',\n    den_localidad:'',\n    den_direccion:'',\n    den_referencia:'',\n    den_fecha_probable_inspeccion: null\n};\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_DENUNCIATIONS:\n            return{\n                ...state,\n                denunciations: action.payload\n            };\n        case ADD_DENUNCIATION:\n            return{\n                ...state,\n                denunciations: [...state.denunciations, action.payload]\n            };\n        case UPDATE_DENUNCIATION:\n            return{\n                ...state,\n                denunciation : action.payload,\n                editDen: true\n\n            };\n        case INIT_DENUNCIATION:\n            return{\n                ...state,\n                denunciation: initDenunciation\n            };\n        case DISABLE_EDIT_DENUNCIATION:\n            return{\n                ...state,\n                editDen: false\n\n            };\n\n        default:\n            return state;\n    }\n}","import React, {useReducer, useContext} from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport DenunciationContext from './DenunciationContext';\nimport DenunciationReducer from './DenunciationReducer';\nimport { \n    GET_DENUNCIATIONS,\n    ADD_DENUNCIATION,\n    UPDATE_DENUNCIATION,\n    INIT_DENUNCIATION,\n    DISABLE_EDIT_DENUNCIATION\n} from '../../types';\nimport SpinnerContext from \"../spinner/SpinnerContext\";\n\nconst DenunciationState = props => {\n    \n    const initialState = {\n        denunciation: {\n            den_id_custom: 'DEN-XXXXXX',\n            usu_cuenta: '',\n            usu_microred: '',\n            den_fecha_recepcion: new Date(),\n            den_medio: '',\n            den_agente_nombre:'',\n            den_tipo: '',\n            den_insecto: '',\n            den_insecto_otro:'',\n            //-falta variable imagen\n            den_habitante_nombre:'',\n            den_habitante_telefono1:'',\n            den_otro_telefono:false,\n            den_habitante_telefono2:'',\n            den_provincia: '',\n            den_distrito:'',\n            den_localidad:'',\n            den_direccion:'',\n            den_referencia:'',\n            den_fecha_probable_inspeccion: null\n        },\n        denunciations: [],\n        editDen: false\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(DenunciationReducer, initialState);\n    //Cambiar estado de spinner\n    const SpinnersContext = useContext(SpinnerContext);\n    const { HideSpinner } = SpinnersContext;\n\n    //FUNCIONES\n    //* Obtener denuncias\n    const GetDenunciations = async () => {\n        \n        try {\n            const resultado = await ClienteAxios.get('/api/denuncias');\n            //console.log(resultado);\n\n            dispatch({\n                type: GET_DENUNCIATIONS,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(\"Error al obtener las denuncias: \"+error);\n        }\n        await HideSpinner();\n    }\n\n    //* Agregar denuncias\n    const AddDenunciation = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Denuncia seleccionada\n    const UpdateDenunciation = ( objDenunciation ) => {\n        dispatch({\n            type: UPDATE_DENUNCIATION,\n            payload: objDenunciation\n        });\n    }\n\n    //* Editar denuncias\n    const EditDenunciation = async ( denunciation ) => {\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation);\n            //console.log(resultado);\n\n            dispatch({\n                type: ADD_DENUNCIATION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n    //* Inicializar denuncia\n    const InitDenunciation = () => {\n        dispatch({\n            type: INIT_DENUNCIATION\n        });\n    }\n    //*Cambiar a falso variable editDen\n    const DisableEditDen = () => {\n        dispatch({\n            type: DISABLE_EDIT_DENUNCIATION\n        });\n    }\n\n    return(\n        <DenunciationContext.Provider\n            value={{\n                denunciation: state.denunciation,\n                denunciations: state.denunciations,\n                editDen: state.editDen,\n                GetDenunciations,\n                AddDenunciation,\n                UpdateDenunciation,\n                EditDenunciation,\n                InitDenunciation,\n                DisableEditDen\n            }}\n        >\n            {props.children}\n        </DenunciationContext.Provider>\n    );\n}\n\nexport default DenunciationState;","import { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_INSPECTIONS:\n            return{\n                ...state,\n                inspections: action.payload\n            };\n        case ADD_INSPECTION:\n            return{\n                ...state,\n                inspections: [...state.inspections, action.payload]\n            };\n        default:\n            return state;\n    }\n}","import React, { useReducer, useContext } from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport InspectionContext from './InspectionContext';\nimport InspectionReducer from './InspectionReducer';\nimport { \n    GET_INSPECTIONS,\n    ADD_INSPECTION\n} from '../../types';\nimport SpinnerContext from \"../spinner/SpinnerContext\";\n\nconst InspectionState = props => {\n    \n    const initialState = {\n        inspection: {\n            user_name: '',\n            unicode: '',\n            code_locality: '',\n            obs_unicode: '',\n            obs_text: '',\n            fecha: new Date(),\n            caract_predio: 'casa_regular',\n            tipo_lp: '',\n            status_inspeccion: 'C',\n            entrevista: '',\n            motivo_volver: '',\n            fecha_volver: '',\n            renuente: 'R1',\n            intra_inspeccion: '',\n            intra_chiris: '',\n            intra_rastros: '',\n            peri_inspeccion: '',\n            peri_chiris: '',\n            peri_rastros: '',\n            personas_predio: '',\n            cant_perros: '',\n            cant_gatos: '',\n            cant_aves_corral: '',\n            cant_cuyes: '',\n            cant_conejos: '',\n            text_otros: '',\n            cant_otros: '',\n            hora_inicio: '',\n            hora_fin: '',\n            inspection_flag: '',\n            predicted_probab: '',\n            predicted_probab_mean: '',\n            risk_color: '',\n            lat: '',\n            lng: '',\n        },\n        inspections: [],\n        newInspections: [],\n        newHealthPosts: [],\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(InspectionReducer, initialState);\n    //Cambiar estado de spinner\n    const SpinnersContext = useContext(SpinnerContext);\n    const { HideSpinner } = SpinnersContext;\n\n    //FUNCIONES\n    //* Obtener denuncias\n    const GetInspections = async () => {\n                \n        try {\n            const resultado = await ClienteAxios.get('/api/inspecciones');\n            \n            dispatch({\n                type: GET_INSPECTIONS,\n                payload: resultado.data\n            });\n            await HideSpinner();\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //* Agregar denuncias\n    const AddInspection = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_INSPECTION,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <InspectionContext.Provider\n            value={{\n                inspection: state.inspection,\n                inspections: state.inspections,\n                newInspections: state.newInspections,\n                newHealthPosts: state.newHealthPosts,\n                GetInspections,\n                AddInspection\n            }}\n        >\n            {props.children}\n        </InspectionContext.Provider>\n    );\n}\n\nexport default InspectionState;","import { \n    ADD_CIMEX\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case ADD_CIMEX:\n            return{\n                ...state,\n                inspections: [...state.inspections, action.payload]\n            };\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport ClienteAxios from \"../../config/axios\";\n\nimport CimexContext from './CimexContext';\nimport CimexReducer from './CimexReducer';\nimport { \n    ADD_CIMEX\n} from '../../types';\nimport { DateFull } from \"../../resources\";\n\nconst CimexState = props => {\n    \n    const initialState = {\n        cimex: {\n            cimex_alguien_picado_casa_ultimo_anio:\"\"\n        },\n        inspections: [],\n        newInspections: [],\n        newHealthPosts: [],\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(CimexReducer, initialState);\n    \n    //FUNCIONES\n    //* Agregar CIMEX\n    const AddInspection = async ( denunciation ) => {\n        denunciation.den_id = 0;\n        \n        try {\n            const resultado = await ClienteAxios.post('/api/denuncias', denunciation );\n\n            dispatch({\n                type: ADD_CIMEX,\n                payload: resultado.data\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return(\n        <CimexContext.Provider\n            value={{\n                cimex: state.cimex,\n                inspections: state.inspections,\n                newInspections: state.newInspections,\n                newHealthPosts: state.newHealthPosts,\n                AddInspection\n            }}\n        >\n            {props.children}\n        </CimexContext.Provider>\n    );\n}\n\nexport default CimexState;","import { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS,\n    UPDATE_HOUSES,\n    CSV_CLEAN\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case CSV_HOUSES:\n            return{\n                ...state,\n                houses: state.houses.concat(action.payload)\n            };\n        case CSV_PARTICIPANTS_INMUNE:\n            return{\n                ...state,\n                participantsInmune: action.payload\n            };\n        case CSV_HEALTH_POSTS:\n            return{\n                ...state,\n                healthPosts: action.payload\n            };\n        case UPDATE_HOUSES:\n            return{\n                ...state,\n                houses: action.payload\n            };\n        case CSV_CLEAN:\n            return{\n                houses:[],\n                participantsInmune:[],\n                healthPosts:[]\n            };\n        default:\n            return state;\n    }\n}","import React, { useReducer} from 'react';\nimport * as d3 from 'd3';\n\nimport CsvContext from './CsvContext';\nimport CsvReducer from './CsvReducer';\nimport { \n    CSV_HOUSES,\n    CSV_PARTICIPANTS_INMUNE,\n    CSV_HEALTH_POSTS,\n    UPDATE_HOUSES,\n    CSV_CLEAN\n} from '../../types';\n\nconst CsvState = props => {\n    \n    const initialState = {\n        houses: [],\n        participantsInmune: [],\n        healthPosts: []\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(CsvReducer, initialState);\n\n    //Funciones\n    const CsvHouses = async (fileCsv) => {\n        \n        if (Object.keys(fileCsv).length !== 0) {\n            const arrayFileCsv = fileCsv.split('&');\n            for (let i = 0; i < arrayFileCsv.length; i++) {\n                //Obtener CSV\n                let pathCsv = require('../../catchment-area/' + arrayFileCsv[i] + '.csv');\n                \n                try {\n                    let results = await d3.csv(pathCsv);\n                    \n                    //Eliminando viviendas que no tienen GPS\n                    results = results.filter(house => house.LATITUDE !== null && house.LATITUDE !== \"\" && house.LATITUDE !== \"NA\");\n                    \n                    //Lo hago asi para que me diga si hay algun error al leer cada archivo CSV\n                    dispatch({\n                        type: CSV_HOUSES,\n                        payload: results\n                    });\n                    \n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        }\n    };\n          \n    const CsvParticipantsInmune = async () => {\n        //Obtener CSV\n        const fileCsv= \"registro_participantes_inmune\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_PARTICIPANTS_INMUNE,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const CsvHealthPosts = async () => {\n        //Obtener CSV\n        const fileCsv= \"PUESTOS DE SALUD AQP_modificado_06022020\";\n        const pathCsv = require('../../files/' + fileCsv + '.csv');\n                \n        try {\n          const results = await d3.csv(pathCsv);\n          \n            dispatch({\n                type: CSV_HEALTH_POSTS,\n                payload: results\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n    const UpdateHouses = async (newHouses) => {\n        //Obtener CSV\n        dispatch({\n            type: UPDATE_HOUSES,\n            payload: newHouses\n        });\n    };\n\n    const CsvClean = () => {\n        dispatch({\n            type: CSV_CLEAN\n        });\n    }\n\n    return(\n        <CsvContext.Provider\n            value={{\n                houses: state.houses,\n                participantsInmune: state.participantsInmune,\n                healthPosts: state.healthPosts,\n                CsvHouses,\n                CsvParticipantsInmune,\n                CsvHealthPosts,\n                UpdateHouses,\n                CsvClean\n            }}\n        >\n            {props.children}\n        </CsvContext.Provider>\n    );\n}\n\nexport default CsvState;","import { \n    SHOW_SPINNER,\n    HIDE_SPINNER\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SHOW_SPINNER:\n            return{\n                spinner: true\n            }\n        case HIDE_SPINNER:\n            return{\n                spinner: false\n            }\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\n\nimport SpinnerContext from './SpinnerContext';\nimport SpinnerReducer from './SpinnerReducer';\nimport { \n    SHOW_SPINNER,\n    HIDE_SPINNER\n} from '../../types';\n\nconst SpinnerState = props => {\n    \n    const initialState = {\n        spinner: false\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(SpinnerReducer, initialState);\n\n    //Funciones\n    const ShowSpinner = () => {\n        dispatch({\n            type: SHOW_SPINNER\n        });\n    }\n    const HideSpinner = () => {\n        dispatch({\n            type: HIDE_SPINNER\n        });\n    }\n\n    return(\n        <SpinnerContext.Provider\n            value={{\n                spinner: state.spinner,\n                ShowSpinner,\n                HideSpinner\n            }}\n        >\n            {props.children}\n        </SpinnerContext.Provider>\n    );\n}\n\nexport default SpinnerState;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Login from \"./components/Login\";\nimport MyMap from \"./components/MyMap\";\nimport Activities from \"./components/Activities\";\nimport Denunciations from \"./components/Activities/Denunciations\";\nimport AlertState from './context/alert/AlertState';\nimport AuthenticationState from './context/authentication/AuthenticationState';\nimport DenunciationState from './context/denunciation/DenunciationState';\nimport InspectionState from './context/inspection/InspectionState';\nimport CimexState from './context/cimex/CimexState';\nimport CsvState from './context/csv/CsvState';\nimport SpinnerState from './context/spinner/SpinnerState';\n\nfunction App() {\n  return (\n    <SpinnerState>\n      <AlertState>\n        <CsvState>\n          <DenunciationState>\n            <InspectionState>\n              <CimexState>\n                <AuthenticationState>\n                  <Router> \n                    <Switch>\n                      <Route exact path=\"/\" component={Login}/>\n                      <Route exact path=\"/actividades\" component={Activities}/>\n                      <Route exact path=\"/actividades/denuncias\" component={Denunciations}/>\n                      <Route exact path=\"/actividades/inspecciones-activas\" component={MyMap}/>\n                    </Switch>\n                  </Router>\n                </AuthenticationState>\n              </CimexState>\n            </InspectionState>\n          </DenunciationState>\n        </CsvState>\n      </AlertState>\n    </SpinnerState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}